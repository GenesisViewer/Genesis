<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<!-- This file contains strings that used to be hardcoded in the source.
     It is only for those strings which don't belong in a floater.
     For example, the strings used in avatar chat bubbles, and strings
     that are returned from one component and may appear in many places-->
<strings>
	<string name="hippo_label_free">libre</string>
	<string name="hippo_label_week">semana</string>
	<string name="TeleportOfferMaturity">[NAME] te ofrece un TP a [DESTINATION]</string>
	<string name="TeleportLureMaturity">[NAME] te ofrece una invitación de teleporte a [DESTINATION]</string>
	<string name="GridInfoError">No se puede recuperar la información del grid desde el servidor:</string>
	<!-- The following entry starts and ends with a ", this is to allow the newline at the beginning. It also requires to use \" for quotes within. -->
	<string name="GridInfoErrorInstruction">"
Asegurate que has ingresado el URI de inicio de sesión correcto. Un ejemplo de URI de inicio de sesión correcto es : \"http://cool.grid.com:8002/\", este url, usualmente, se puede encontrar en la página web del grid."
	</string>
	<string name="GridInfoErrorNoLoginURI">Se requiere de un URI de inicio de sesión para recuperar la obtener del grid.</string>
	<string name="GridInfoErrorNotFound">404 Página no hallada</string>
	<string name="GridInfoErrorNotAllowed">Este grid no soporta obtener 'Información del Grid'</string>
	<string name="GridInfoParseError">Error de análisis XML: [XML_ERROR]</string>

	<!-- Default Args - these arguments will be replaced in all strings -->
	<string name="SECOND_LIFE_GRID">Grid Second Life</string>
	<string name="SUPPORT_SITE">Portal de Soporte de Second Life</string>
	
	<!-- starting up -->
	<string name="StartupDetectingHardware">Detectando hardware...</string>
	<string name="StartupLoading">Cargando [APP_NAME]...</string>
	<string name="StartupClearingCache">Limpiando caché...</string>
	<string name="StartupInitializingTextureCache0">Borrando el caché de texturas...</string>
    <string name="StartupInitializingTextureCache1">Reagrupando el volcado de pixel...</string>
    <string name="StartupInitializingTextureCache2">Preparando el fundido de texturas...</string>
    <string name="StartupInitializingTextureCache3">Booping snoot, texturally...</string>
    <string name="StartupInitializingTextureCache4">Waking lumbering giant...</string>	
	<string name="StartupInitializingVFS">Inicializando VFS...</string>
	<string name="StartupRequireDriverUpdate">¡Ha fallado la inicialización gráfica. Por favor, actualiza los controladores gráficos!</string>
	
	<!--  progress -->
	<string name="ProgressRestoring">Restaurando...</string>
	<string name="ProgressChangingResolution">Cambiando la Resolución...</string>
	
	<!-- Login -->
	<string name="LoginInProgress">Iniciando sesión. [APP_NAME] puede aparecer congelado.  Espera por favor.</string>
	<string name="LoginInProgressNoFrozen">Iniciando sesión...</string>
	<string name="LoginAuthenticating">Autenticando</string>
	<string name="LoginMaintenance">Realizando mantenimiento de cuentas...</string>
	<string name="LoginAttempt">Ha fallado el inicio de sesión previo. Iniciando sesión, intento [NUMBER]</string>
	<string name="LoginPrecaching">Cargando el Mundo...</string>
	<string name="LoginInitializingBrowser">iniciando navegador web incorporado...</string>
	<string name="LoginInitializingMultimedia">Inicializando multimedia...</string>
	<string name="LoginInitializingFonts">Cargando fuentes...</string>
	<string name="LoginVerifyingCache">Verificando archivos de caché (puede demorar entre 60-90 segundos)...</string>
	<string name="LoginProcessingResponse">Procesando Respuesta...</string>
	<string name="LoginInitializingWorld">Inicializando el Mundo...</string>
	<string name="LoginDecodingImages">Decodificando Imágenes...</string>
	<string name="LoginInitializingQuicktime">Inicializando QuickTime...</string>
	<string name="LoginQuicktimeNotFound">No se ha encontrado QuickTime - incapaz de iniciarlo.</string>
	<string name="LoginQuicktimeOK">QuickTime ha sido inicializado satisfactoriamente.</string>
	<string name="LoginRequestSeedCapGrant">Solicitando capacidades de la Región...</string>
	<string name="LoginRetrySeedCapGrant">Solicitando capacidades de la Región, intento [NUMBER]...</string>
	<string name="LoginWaitingForRegionHandshake">Esperando saludo de la Región...</string>
	<string name="LoginConnectingToRegion">Conectando a la región...</string>
	<string name="LoginDownloadingClothing">Descargando ropas...</string>
	
	<string name="LoginFailed">Inicio de sesión fallido.</string>
	<string name="Quit">Salir</string>
	<string name="LoginFailedViewerNotPermitted">
		Ya no puedes acceder a Second Life con el visor que estás utilizando. Visita la siguiente página para descargar un nuevo visor:
http://secondlife.com/download.

Si deseas obtener más información, consulta las preguntas frecuentes que aparecen a continuación:
http://secondlife.com/viewer-access-faq
	</string>
	<string name="LoginIntermediateOptionalUpdateAvailable">
		Actualización opcional del visor disponible: [VERSION]
	</string>
	<string name="LoginFailedRequiredUpdate">
		Actualización necesaria del visor: [VERSION]
	</string>
	<string name="LoginFailedAlreadyLoggedIn">
		El agente ya ha iniciado sesión.
	</string>
	<string name="LoginFailedAuthenticationFailed">
		Lo sentimos. No ha sido posible iniciar sesión.
Comprueba si has introducido correctamente
    * El nombre de usuario (como juangarcia12 o estrella.polar)
    * Contraseña
Asimismo, asegúrate de que la tecla Mayús esté desactivada.
	</string>
	<string name="LoginFailedPasswordChanged">
		Como precaución de seguridad, se ha modificado tu contraseña.
Dirígete a la página de tu cuenta en http://secondlife.com/password
y responde a la pregunta de seguridad para restablecer la contraseña.
Lamentamos las molestias.
	</string>
	<string name="LoginFailedPasswordReset">
		Hemos realizado unos cambios en nuestro sistema, por lo que deberás restablecer la contraseña.
Dirígete a la página de tu cuenta en http://secondlife.com/password
y responde a la pregunta de seguridad para restablecer la contraseña.
Lamentamos las molestias.
	</string>
	<string name="LoginFailedEmployeesOnly">
		Second Life no está disponible temporalmente debido a tareas de mantenimiento.
Actualmente, solo se permite iniciar sesión a los empleados.
Consulta www.secondlife.com/status si deseas obtener actualizaciones.
	</string>
	<string name="LoginFailedPremiumOnly">
		Las conexiones a Second Life se han restringido provisionalmente para garantizar que los usuarios que ya están conectados tengan la mejor experiencia posible.

Durante este tiempo, las personas con cuentas gratuitas no podrán acceder a Second Life, ya que tienen prioridad los usuarios con una cuenta de pago.
	</string>
	<string name="LoginFailedComputerProhibited">
		No se puede acceder a Second Life desde este ordenador.
Si crees que se trata de un error, ponte en contacto con
support@secondlife.com.
	</string>
	<string name="LoginFailedAcountSuspended">
		No se podrá acceder a tu cuenta hasta las
[HORA] (horario de la costa del Pacífico).
	</string>
	<string name="LoginFailedAccountDisabled">
		En este momento no podemos completar la solicitud.
Por favor solicita ayuda al personal de asistencia de Second Life en http://support.secondlife.com.
	</string>
	<string name="LoginFailedTransformError">
		Se han detectado datos incorrectos en el inicio de sesión.
Ponte en contacto con support@secondlife.com.
	</string>
	<string name="LoginFailedAccountMaintenance">
		Se están realizando tareas rutinarias de mantenimiento en tu cuenta.
No se podrá acceder a tu cuenta hasta las
[HORA] (horario de la costa del Pacífico).
Si crees que se trata de un error, ponte en contacto con support@secondlife.com.
	</string>
	<string name="LoginFailedPendingLogoutFault">
		La solicitud de cierre de sesión ha obtenido como resultado un error del simulador.
	</string>
	<string name="LoginFailedPendingLogout">
		El sistema te desconectará.
Por favor, aguarda un momento antes de intentar conectarte nuevamente.
	</string>
	<string name="LoginFailedUnableToCreateSession">
		No se ha podido crear una sesión válida.
	</string>
	<string name="LoginFailedUnableToConnectToSimulator">
		No se ha podido establecer la conexión con un simulador.
	</string>
	<string name="LoginFailedRestrictedHours">
		Tu cuenta solo puede acceder a Second Life
entre las [INICIO] y las [FIN] (horario de la costa del Pacífico).
Inténtalo de nuevo durante ese horario.
Si crees que se trata de un error, ponte en contacto con support@secondlife.com.
	</string>
	<string name="LoginFailedIncorrectParameters">
		Parámetros incorrectos.
Si crees que se trata de un error, ponte en contacto con support@secondlife.com.
	</string>
	<string name="LoginFailedFirstNameNotAlphanumeric">
		El parámetro correspondiente al nombre debe contener caracteres alfanuméricos.
Si crees que se trata de un error, ponte en contacto con support@secondlife.com.
	</string>
	<string name="LoginFailedLastNameNotAlphanumeric">
		El parámetro correspondiente al apellido debe contener caracteres alfanuméricos.
Si crees que se trata de un error, ponte en contacto con support@secondlife.com.
	</string>
	<string name="LogoutFailedRegionGoingOffline">
		La región se está desconectando.
Intenta iniciar sesión de nuevo en unos instantes.
	</string>
	<string name="LogoutFailedAgentNotInRegion">
		El agente no se encuentra en la región.
Intenta iniciar sesión de nuevo en unos instantes.
	</string>
	<string name="LogoutFailedPendingLogin">
		A esta región ya se ha accedido en otra sesión.
Intenta iniciar sesión de nuevo en unos instantes.
	</string>
	<string name="LogoutFailedLoggingOut">
		Se ha salido de la región en la sesión anterior.
Intenta iniciar sesión de nuevo en unos instantes.
	</string>
	<string name="LogoutFailedStillLoggingOut">
		La región aún está cerrando la sesión anterior.
Intenta iniciar sesión de nuevo en unos instantes.
	</string>
	<string name="LogoutSucceeded">
		Se ha salido de la región en la última sesión.
Intenta iniciar sesión de nuevo en unos instantes.
	</string>
	<string name="LogoutFailedLogoutBegun">
		La región ha comenzado el proceso de cierre de sesión.
Intenta iniciar sesión de nuevo en unos instantes.
	</string>
	<string name="LoginFailedLoggingOutSession">
		El sistema ha comenzado a cerrar la última sesión.
Intenta iniciar sesión de nuevo en unos instantes.
	</string>

	<string name="ViewerDownloadURL">https://www.singularityviewer.org/</string>	

	<!-- Disconnection -->
	<string name="AgentLostConnection">Esta región está experimentando problemas.  Revisa por favor tu conexión a Internet.</string>
	<string name="SavingSettings">Guardando tus configuraciones...</string>
	<string name="LoggingOut">Cerrando sesión...</string>
	<string name="ShuttingDown">Cerrando...</string>
	<string name="YouHaveBeenDisconnected">Has sido desconectado de la región donde te encontrabas.</string>
	<string name="SentToInvalidRegion">Se te ha enviado a una región no válida.</string>
	<string name="TestingDisconnect">Visor de pruebas desconectado</string>	
	
	<!-- Tooltip, llhoverview.cpp -->
	<string name="TooltipPerson">Persona</string><!-- Object under mouse pointer is an avatar -->
	<string name="TooltipNoName">(sin nombre)</string> <!-- No name on an object -->
	<string name="TooltipOwner">Propietario:</string> <!-- Owner name follows -->
	<string name="TooltipPublic">Público</string> <!-- Public permissions on an object -->
	<string name="TooltipIsGroup">(Grupo)</string> <!-- The name before this text is that of a group -->
	<string name="TooltipFlagScript">Script</string>
	<string name="TooltipFlagPhysics">Material</string>
	<string name="TooltipFlagTouch">Tocar</string>
	<string name="TooltipFlagL$">[CURRENCY]</string>
	<string name="TooltipFlagDropInventory">Soltar Inventario</string>
	<string name="TooltipFlagPhantom">Inmaterial</string>
	<string name="TooltipFlagTemporary">Temporario</string>
	<string name="TooltipFlagRightClickMenu">(Botón derecho para menú)</string>
	<string name="TooltipFreeToCopy">Libre para copiar</string>
	<string name="TooltipForSaleL$">En venta: [CURRENCY][AMOUNT]</string> <!-- L$ version -->
	<string name="TooltipForSaleMsg">En venta: [MESSAGE]</string> <!-- Message (RetrievingData) -->
	<string name="TooltipFlagGroupBuild">Construir Grupo</string>
	<string name="TooltipFlagNoBuild">No Construir</string>
	<string name="TooltipFlagNoEdit">Construir Grupo</string>
	<string name="TooltipFlagNotSafe">No seguro</string><!-- damage area -->
	<string name="TooltipFlagNoFly">No volar</string>
	<string name="TooltipFlagGroupScripts">Scripts de Grupo</string>
	<string name="TooltipFlagNoScripts">Sin Scripts</string>
	<string name="TooltipLand">Terreno:</string>
	<string name="TooltipMustSingleDrop">Sólo un único item puede ser arrastrado aquí</string>
	
	<string name="TooltipOutboxDragToWorld">No puedes soltar ítems de tu carpeta Artículos del Mercado</string>
	<string name="TooltipOutboxWorn">Los artículos que tienes vestidos no se pueden colocar en la carpeta Artículos del mercado</string>
	<string name="TooltipOutboxFolderLevels">La profundidad de carpetas anidadas excede de [AMOUNT]. Disminuye la profundidad de las carpetas anidadas; si es necesario, agrupa los artículos.</string>
	<string name="TooltipOutboxTooManyFolders">La cantidad de subcarpetas excede de [AMOUNT]. Disminuye la cantidad de carpetas de tu lista de artículos; si es necesario, agrupa los artículos.</string>
	<string name="TooltipOutboxTooManyObjects">La cantidad de artículos excede de [AMOUNT]. 
Para vender más de [AMOUNT] artículos en la misma lista, debes agrupar algunos.</string>
	<string name="TooltipOutboxTooManyStockItems">La cantidad de artículos en stock excede de [AMOUNT].</string>
	<string name="TooltipOutboxCannotDropOnRoot">Solo se pueden soltar artículos o carpetas en las pestañas TODOS o SIN ASOCIAR. Selecciona una de estas pestañas y mueve otra vez los artículos o carpetas.</string>
	<string name="TooltipOutboxNoTransfer">Uno o más de estos objetos no pueden ser vendidos o transferidos.</string>
	<string name="TooltipOutboxNotInInventory">Tu Buzón de Comerciante solo puede aceptar ítems de tu inventario</string>
	<string name="TooltipOutboxCallingCard">No puedes colocar Tarjetas de LLamada en tu Buzón de Comerciante</string>
	<string name="TooltipOutboxFolderLevels">La profundidad de carpetas anidades es superior a 3</string>
	<string name="TooltipOutboxTooManyFolders">El recuento de subcarpetas en el nivel superior supera las 20</string>
	<string name="TooltipOutboxTooManyObjects">El recuento de items en la carpeta de nivel superior supera los 200</string>
	
	<string name="TooltipDragOntoOwnChild">No puedes mover una carpeta a su carpeta secundaria</string>
	<string name="TooltipDragOntoSelf">No puedes mover una carpeta en si misma</string>

	<!-- tooltips for Urls -->
	<string name="TooltipHttpUrl">Pulsa para ver esta página web</string>
	<string name="TooltipSLURL">Pulsa para ver la información de esta ubicación</string>
	<string name="TooltipAgentUrl">Pulsa para ver el perfil de este Residente</string>
	<string name="TooltipAgentInspect">Conoce mas de este Residente</string>
	<string name="TooltipAgentMute">Pulsa para ignorar a este Residente</string>
	<string name="TooltipAgentUnmute">Pulsa para dejar de ignorar a este Residente</string>
	<string name="TooltipAgentIM">Pulsa para enviar un MI a este Residente</string>
	<string name="TooltipAgentPay">Pulsa para hacerle un pago a este Residente</string>
	<string name="TooltipAgentOfferTeleport">Pulsa para ofrecerle Teleporte a este Residente</string>
	<string name="TooltipAgentRequestFriend">Pulsa para enviarle un pedido de amistad a este Residente</string>
	<string name="TooltipGroupUrl">Pulsa para ver la descripción de este grupo</string>
	<string name="TooltipEventUrl">Pulsa para ver la descripción de este evento</string>
	<string name="TooltipClassifiedUrl">Pulsa para ver este aviso clasificado</string>
	<string name="TooltipParcelUrl">Pulsa para ver la descripción de esta parcela</string>
	<string name="TooltipTeleportUrl">Pulsa para teleportarte a esta ubicación</string>
	<string name="TooltipObjectIMUrl">Pulsa para ver la descripción de este objeto</string>
	<string name="TooltipMapUrl">Pulsa para ver esta ubicación en el mapa</string>
	<string name="TooltipSLAPP">Pulsa para ejecutar el comando secondlife://</string>
	<string name="CurrentURL" value=" CurrentURL: [CurrentURL]" />
	<string name="TooltipEmail">Haz clic para redactar un correo electrónico</string>

	<!-- text for SLURL labels -->
	<string name="SLurlLabelTeleport">Teleportar a</string>
	<string name="SLurlLabelShowOnMap">Mostrar Mapa de</string>

	<!-- label strings for secondlife:///app/agent SLapps -->
	<string name="SLappAgentMute">Ignorar</string>
	<string name="SLappAgentUnmute">No Ignorar</string>
	<string name="SLappAgentIM">MI</string>
	<string name="SLappAgentPay">Pagar</string>
	<string name="SLappAgentOfferTeleport">Ofrecer Teleporte a</string>
	<string name="SLappAgentRequestFriend">Ofrecer Amistad</string>
	<string name="SLappAgentRemoveFriend">Eliminación de amigos</string>
	
	<!-- ButtonToolTips, llfloater.cpp -->
	<string name="BUTTON_CLOSE_DARWIN">Cerrar (⌘W)</string>
	<string name="BUTTON_CLOSE_WIN">Cerrar (Ctrl+W)</string>
	<string name="BUTTON_CLOSE_CHROME">Cerrar</string>
	<string name="BUTTON_RESTORE">Maximizar</string>
	<string name="BUTTON_MINIMIZE">Minimizar</string>
	<string name="BUTTON_TEAR_OFF">Separar la ventana</string>
	<string name="BUTTON_DOCK">Fijar</string>
	<string name="BUTTON_HELP">Ver la Ayuda</string>
	<string name="BUTTON_EDIT">Editar</string>
	
	<!-- searching - generic -->
	<string name="Searching">Buscando...</string>
	<string name="NoneFound">Nada Hallado.</string>
	
	<!-- Indicates that an avatar's name or other similar datum is being retrieved. General usage. -->
	<string name="RetrievingData">Recuperando...</string>
	
	<string name="ReleaseNotes">Notas de Lanzamiento</string>
	
	<!-- Indicates something is being loaded. Maybe should be merged with RetrievingData -->
	<string name="LoadingData">Cargando...</string>
	<string name="InvalidLocation">Ubicación Inválida</string>
	
	<!-- namecache -->
	<!-- Avatar name: text shown for LLUUID::null -->
	<string name="AvatarNameNobody">(nadie)</string>
	
	<!-- Avatar name: text shown while fetching name -->
	<string name="AvatarNameWaiting">(esperando)</string>
	
	<!-- Avatar name: text shown as an alternative to AvatarNameFetching, easter egg. -->
	<string name="AvatarNameHippos">(hippos)</string>
	
	<!-- Group name: text shown for LLUUID::null -->
	<string name="GroupNameNone">(ninguno)</string>
	
	<!-- Asset errors. Used in llassetstorage.cpp, translation from error code to error message. -->
	<string name="AssetErrorNone">Sin errores</string>
	<string name="AssetErrorRequestFailed">Petición de Activos: fallida</string>
	<string name="AssetErrorNonexistentFile">Petición de Activos: archivo inexistente</string>
	<string name="AssetErrorNotInDatabase">Petición de Activos: activo no hallado en la base de datos</string>
	<string name="AssetErrorEOF">Fin de archivo</string>
	<string name="AssetErrorCannotOpenFile">No se puede abrir el archivo</string>
	<string name="AssetErrorFileNotFound">Archivo no encontrado</string>
	<string name="AssetErrorTCPTimeout">Tiempo de espera en transferencia de archivo agotado</string>
	<string name="AssetErrorCircuitGone">El circuito se ha cerrado</string>
	<string name="AssetErrorPriceMismatch">El Visor y el Servidor no coinciden con el precio</string>
	<string name="AssetErrorUnknownStatus">Estado desconocido</string>

	<!-- Asset upload errors. -->
	<string name="AssetUploadServerUnreacheble">El servicio no está disponible.</string>
	<string name="AssetUploadServerDifficulties">Se detectaron errores inesperados en el servidor.</string>
	<string name="AssetUploadServerUnavaliable">El servicio no está disponible o se alcanzó el tiempo de carga máxima.</string>
	<string name="AssetUploadRequestInvalid">
		Error en la solicitud de carga. Por favor, ingresa a
http://secondlife.com/support para obtener ayuda sobre cómo solucionar este problema.
	</string>

	<!-- Asset Type human readable names:  these will replace variable [TYPE] in notification FailedToFindWearable* -->
	<!-- Will also replace [OBJECTTYPE] in notifications: UserGiveItem, ObjectGiveItem -->
	<!-- Also used by AntiSpamBlock notification for [TYPE], since this looks like a good place. -->
	<string name="texture">textura</string>
	<string name="sound">sonido</string>
	<string name="calling card">tarjeta de Visita</string>
	<string name="Inventory">inventario</string>
	<string name="Instant Message">mensaje instantáneo</string>
	<string name="Script Dialog">diálogo de script</string>
	<string name="Sound Preload">sonido precargado</string>
	<string name="Teleport">teleporte</string>
	<string name="Unknown">desconocido</string>
	<string name="landmark">hito</string>
	<string name="legacy script">script heredado</string>
	<string name="clothing">ropa</string>
	<string name="object">objeto</string>
	<string name="note card">nota</string>
	<string name="folder">carpeta</string>
	<string name="root">raíz</string>
	<string name="lsl2 script">script LSL2</string>
	<string name="lsl bytecode">bytecode LSL</string>
	<string name="tga texture">textura tga</string>
	<string name="body part">parte de cuerpo</string>
	<string name="snapshot">instantánea</string>
	<string name="lost and found">Elementos Perdidos</string>
	<string name="targa image">imagen targa</string>
	<string name="trash">Basurero</string>
	<string name="jpeg image">imagen jpeg</string>
	<string name="animation">animación</string>
	<string name="gesture">gesto</string>
	<string name="simstate">estado del sim</string>
	<string name="favorite">favorito</string>
	<string name="symbolic link">enlace</string>
	<string name="symbolic folder link">enlace a carpeta</string>
	<string name="current outfit">vestuario actual</string>
	<string name="outfit">vestuario</string>
	<string name="my outfits">mis vestuarios</string>
	<string name="mesh">malla</string>

	<!-- llvoavatar. Displayed in the avatar's chat bubble -->
	<string name="AvatarEditingAppearance">(Editando Apariencia)</string>
	<string name="AvatarAway">Ausente</string>
	<string name="AvatarIdle">Inactivo por [MINUTES] min</string>	
	<string name="AvatarBusy">Ocupado</string>
	<string name="AvatarMuted">Ignorado</string>
	<!-- "AvatarLangolier" is used for an avatar that teleported into a Time Frozen scene (only their moving tag is visible).
		 A Langolier is a creature from Stephen Kings "The Langoliers" that exists outside time and lives by eating the past. -->
	<string name="AvatarLangolier">Langolier</string>

	<!-- animations -->
	<string name="anim_express_afraid">Miedo</string>
	<string name="anim_express_anger">Enfado</string>
	<string name="anim_away">Ausente</string>
	<string name="anim_backflip">Salto mortal atrás</string>
	<string name="anim_express_laugh">Carcajada</string>
	<string name="anim_express_toothsmile">Gran sonrisa</string>
	<string name="anim_blowkiss">Mandar un beso</string>
	<string name="anim_express_bored">Aburrimiento</string>
	<string name="anim_bow">Reverencia</string>
	<string name="anim_clap">Aplauso</string>
	<string name="anim_courtbow">Reverencia floreada</string>
	<string name="anim_express_cry">Llanto</string>
	<string name="anim_dance1">Baile 1</string>
	<string name="anim_dance2">Baile 2</string>
	<string name="anim_dance3">Baile 3</string>
	<string name="anim_dance4">Baile 4</string>
	<string name="anim_dance5">Baile 5</string>
	<string name="anim_dance6">Baile 6</string>
	<string name="anim_dance7">Baile 7</string>
	<string name="anim_dance8">Baile 8</string>
	<string name="anim_express_disdain">Desdén</string>
	<string name="anim_drink">Beber</string>
	<string name="anim_express_embarrased">Avergonzado</string>
	<string name="anim_angry_fingerwag">Negar con el dedo</string>
	<string name="anim_fist_pump">Gesto de Victoria</string>
	<string name="anim_yoga_float">Yoga flotando</string>
	<string name="anim_express_frown">Fruncir el ceño</string>
	<string name="anim_impatient">Impaciente</string>
	<string name="anim_jumpforjoy">Salto de alegría</string>
	<string name="anim_kissmybutt">Bésame el culo</string>
	<string name="anim_express_kiss">Besar</string>
	<string name="anim_laugh_short">Reír</string>
	<string name="anim_musclebeach">Sacar músculo</string>
	<string name="anim_no_unhappy">No (con enfado)</string>
	<string name="anim_no_head">No</string>
	<string name="anim_nyanya">Ña-Ña-Ña</string>
	<string name="anim_punch_onetwo">Puñetazo uno-dos</string>
	<string name="anim_express_open_mouth">Abrir la boca</string>
	<string name="anim_peace">Paz</string>
	<string name="anim_point_you">Señalar a otro/a</string>
	<string name="anim_point_me">Señalarse</string>
	<string name="anim_punch_l">Puñetazo izquierdo</string>
	<string name="anim_punch_r">Puñetazo derecho</string>
	<string name="anim_rps_countdown">PPT cuenta</string>
	<string name="anim_rps_paper">PPT papel</string>
	<string name="anim_rps_rock">PPT piedra</string>
	<string name="anim_rps_scissors">PPT tijera</string>
	<string name="anim_express_repulsed">Rechazo</string>
	<string name="anim_kick_roundhouse_r">Patada circular</string>
	<string name="anim_express_sad">Triste</string>
	<string name="anim_salute">Saludo militar</string>
	<string name="anim_shout">Gritar</string>
	<string name="anim_express_shrug">Encogerse de hombros</string>
	<string name="anim_express_smile">Sonreír</string>
	<string name="anim_smoke_idle">Fumar: en la mano</string>
	<string name="anim_smoke_inhale">Fumar: Inhalar</string>
	<string name="anim_smoke_throw_down">Fumar: tirar el cigarro</string>
	<string name="anim_express_surprise">Sorpresa</string>
	<string name="anim_sword_strike_r">Estocada</string>
	<string name="anim_angry_tantrum">Berrinche</string>
	<string name="anim_express_tongue_out">Sacar la lengua</string>
	<string name="anim_hello">Agitar la mano</string>
	<string name="anim_whisper">Susurrar</string>
	<string name="anim_whistle">Silbar</string>
	<string name="anim_express_wink">Guiño</string>
	<string name="anim_wink_hollywood">Guiño (Hollywood)</string>
	<string name="anim_express_worry">Preocuparse</string>
	<string name="anim_yes_happy">Sí (contento)</string>
	<string name="anim_yes_head">Si</string>
	
	<!-- build floater -->
	<string name="multiple_textures">Múltiple</string>
	<string name="use_texture">Usar textura</string>
    <string name="manip_hint1">Mover cursor sobre la regla</string>
    <string name="manip_hint2">para ajustar a la grilla</string>

	
	<!-- world map -->	
	<string name="texture_loading">Cargando...</string>
	<string name="worldmap_offline">Desconectado</string>
	<string name="worldmap_results_none_found">Nada encontrado.</string>	
	
	<!-- animations uploading status codes -->
	<string name="Ok">OK</string>
	
	<!-- Chat -->
	<string name="whisper">Susurros:</string>
	<string name="shout">Gritos:</string>
	<string name="ringing">Conectando al Chat de Voz...</string>
	<string name="connected">Conectado</string>
	<string name="unavailable">Chat de Voz no disponible en esta ubicación</string>
	<string name="hang_up">Desconectado del Chat de Voz</string>
	<string name="ScriptQuestionCautionChatGranted">'[OBJECTNAME]', al objeto propiedad de '[OWNERNAME]', ubicado en [REGIONNAME]: [REGIONPOS], se le ha concedido permisos para: [PERMISSIONS].</string>
	<string name="ScriptQuestionCautionChatDenied">'[OBJECTNAME]', al objeto propiedad de '[OWNERNAME]', ubicado en [REGIONNAME]: [REGIONPOS], se le ha denegado permisos para: [PERMISSIONS].</string>
	<string name="AdditionalPermissionsRequestHeader">Si autorizas el acceso a tu cuenta, también permitirás al objeto:</string>
	<string name="ScriptTakeMoney">Transferir moneda de tu cuenta</string>
	<string name="ActOnControlInputs">Actuar en tus controles de entrada</string>
	<string name="RemapControlInputs">Reconfigurar tus controles de entrada</string>
	<string name="AnimateYourAvatar">Animar tu avatar</string>
	<string name="AttachToYourAvatar">Anexar a tu avatar</string>
	<string name="AGroupMemberNamed">un miembro del secondlife:///app/group/[GROUP_ID]/about de nombre secondlife:///app/agent/[FROM_ID]/about</string>
	<string name="ReleaseOwnership">Liberar propiedad y hacer público</string>
	<string name="LinkAndDelink">Enlazar y desenlazar de otros objetos</string>
	<string name="AddAndRemoveJoints">Agregar o remover uniones con otros objetos</string>
	<string name="ChangePermissions">Cambiar sus permisos</string>
	<string name="TrackYourCamera">Seguir tu cámara</string>
	<string name="ControlYourCamera">Controlar tu cámara</string>
	<string name="TeleportYourAgent">Teleportarte</string>	
	<string name="ManageEstateSilently">Gestiona tus propiedades en silencio</string>
	<string name="ChangeYourDefaultAnimations">Cambiar tus animaciones por defecto</string>
	<string name="ForceSitAvatar">Forzar que el avatar se siente</string>
	
	<string name="NotConnected">No Conectado</string>
	<string name="AgentNameSubst">(Tu)</string> <!-- Substitution for agent name -->
	
	<string name="JoinAnExperience">Unirse a una experiencia</string> <!-- not used -->
	<string name="SilentlyManageEstateAccess">Suprimir alertas cuando administras listas de acceso del Estado</string>
	<string name="OverrideYourAnimations">Reemplazar tus animaciones predeterminadas</string>
	<string name="ScriptReturnObjects">Retornar objetos a tu inventario</string>
	<string name="UnknownScriptPermission">(desconocido)!</string>
  
	<!-- Bumps in chat -->
	<string name="BumpedYou">[NAME] [ACT] con magnitud [MAG]</string>
	<!-- [ACT]s -->
	<string name="bump">te ha golpeado</string>
	<string name="llpushobject">te ha empujado con un script</string>
	<string name="selected_object_collide">te ha golpeado con un objeto</string>
	<string name="scripted_object_collide">te ha golpeado con un objeto con script</string>
	<string name="physical_object_collide">te ha golpeado con un objeto físico</string>

	<!-- Sim Access labels -->
	<string name="SIM_ACCESS_PG">PG</string>
	<string name="SIM_ACCESS_MATURE">Moderado</string>
	<string name="SIM_ACCESS_ADULT">Adulto</string>
	<string name="SIM_ACCESS_DOWN">Desconectado</string>
	<string name="SIM_ACCESS_MIN">Desconocido</string>
	
	<!-- For use when we do not have land type back from the server -->
	<string name="land_type_unknown">(Desconocido)</string>
	
	<!-- Covenant info -->
	<string name="covenant_never_modified">Última Modificación: (nunca)</string>
	<string name="covenant_modified">Última Modificación: </string>
	
	<!-- File load/save dialogs -->
	<string name="all_files">Todos los Archivos</string>
	<string name="sound_files">Sonidos</string>
	<string name="animation_files">Animaciones</string>
	<string name="image_files">Imágenes</string>
	<string name="save_file_verb">Guardar</string>
	<string name="load_file_verb">Cargar</string>
	<string name="targa_image_files">Imágenes Targa</string>
	<string name="bitmap_image_files">Imágenes de Mapa de Bits</string>
	<string name="png_image_files">Imágenes PNG</string>
	<string name="jpg_image_files">Imáenes JPEG</string>
	<string name="j2c_image_files">Imágenes Jpeg2000</string>
	<string name="save_texture_image_files">Imágenes Targa, PNG, JPEG, Jpeg2000, o Bitmap</string>
	<string name="avi_movie_file">Película AVI</string>
	<string name="xaf_animation_file">Animación XAF</string>
	<string name="xml_file">Archivo XML</string>
	<string name="raw_file">Archivo RAW</string>
	<string name="compressed_image_files">Imágenes Comprimidas</string>
	<string name="load_files">Cargar Archivos</string>
	<string name="choose_the_directory">Seleccionar Directorio</string>
	<string name="script_files">Scripts</string>
	<string name="dictionary_files">Diccionarios</string>
    <string name="zip_files">Archivos Zip</string>
	<string name="Sound: ">Sonido: </string>
	
  <!-- LSL Usage Hover Tips -->
	<string name="LSLTipSleepTime">
		Pausa el script por [SLEEP_TIME] segundos.
	</string>

	<string name="LSLTipText_llSin">
float llSin(float theta)
Devuelve el seno de theta (theta en radianes)
	</string>
	<string name="LSLTipText_llCos">
float llCos(float theta)
Devuelve el coseno de theta (theta en radianes)
	</string>
	<string name="LSLTipText_llTan">
float llTan(float theta)
Devuelve la tangente de theta (theta en radianes)
	</string>
	<string name="LSLTipText_llAtan2">
float llAtan2(float y, float x)
Devuelve el arcotangente2 de y, x
	</string>
	<string name="LSLTipText_llSqrt">
float llSqrt(float val)
Devuelve la raíz cuadrada de val, o devuelve 0 y desencadena un error para resultados imaginarios
	</string>
	<string name="LSLTipText_llPow">
float llPow(float base, float exponent)
Devuelve la base elevada a la potencia del exponente, o devuelve 0 y desencadena un error para resultados imaginarios
	</string>
	<string name="LSLTipText_llAbs">
integer llAbs(integer val)
Devuelve el positivo de val
	</string>
	<string name="LSLTipText_llFabs">
float llFabs(float val)
Devuelve el positivo de val
	</string>
	<string name="LSLTipText_llFrand">
float llFrand(float mag)
Devuelve un número seudo aleatoreo en el rango [0,mag) o (mag,0]
	</string>
	<string name="LSLTipText_llFloor">
integer llFloor(float val)
Devuelve el valor entero mas alto &lt;= val
	</string>
	<string name="LSLTipText_llCeil">
integer llCeil(float val)
Devuelve el valor entero mas bajo &gt;= val
	</string>
	<string name="LSLTipText_llRound">
integer llRound(float val)
Devuelve val redondeada al entero más cercano
	</string>
	<string name="LSLTipText_llVecMag">
float llVecMag(vector v)
Devuelve la magnitud de v
	</string>
	<string name="LSLTipText_llVecNorm">
vector llVecNorm(vector v)
Devuelve v normalizado
	</string>
	<string name="LSLTipText_llVecDist">
float llVecDist(vector v1, vector v2)
Devuelve la distancia 3D entre v1 y v2
	</string>
	<string name="LSLTipText_llRot2Euler">
vector llRot2Euler(rotation q)
Devuelve la representación de Euler (roll, pitch, yaw) de q
	</string>
	<string name="LSLTipText_llEuler2Rot">
rotation llEuler2Rot(vector v)
Devuelve la representación de la rotación de ángulos de Euler en v
	</string>
	<string name="LSLTipText_llAxes2Rot">
rotation llAxes2Rot(vector fwd, vector left, vector up)
Devuelve la rotación definida por los ejes de coordenadas
	</string>
	<string name="LSLTipText_llRot2Fwd">
vector llRot2Fwd(rotation q)
Devuelve el vector hacia adelante definido por q
	</string>
	<string name="LSLTipText_llRot2Left">
vector llRot2Left(rotation q)
Devuelve el vector hacia la izquierda definido por q
	</string>
	<string name="LSLTipText_llRot2Up">
vector llRot2Up(rotation q)
Devuelve el vector hacia arriba definido por q
	</string>
	<string name="LSLTipText_llRotBetween">
rotation llRotBetween(vector v1, vector v2)
Devuelve la rotación pra rotar v1 en v2
	</string>
	<string name="LSLTipText_llWhisper">
llWhisper(integer channel, string msg)
Susurra el texto del mensaje en el canal
	</string>
	<string name="LSLTipText_llSay">
llSay(integer channel, string msg)
Dice el texto del mensaje en el canal
	</string>
	<string name="LSLTipText_llShout">
llShout(integer channel, string msg)
Grita el texto del mensaje en el canal
	</string>
	<string name="LSLTipText_llListen">
integer llListen(integer channel, string name, key id, string msg)
Establece una devolución de llamada para el mensaje en el canal -channel- desde el nombre -name- y la identificación -id- (el nombre, la identificación y/o el mensaje pueden estar vacíos) y devuelve un identificador que se puede usar para desactivar o eliminar la escucha
	</string>
	<string name="LSLTipText_llListenControl">
llListenControl(integer number, integer active)
Crea un evento de escucha activo o inactivo de devolución de llamada
	</string>
	<string name="LSLTipText_llListenRemove">
llListenRemove(integer number)
Remueve el evento "number" de escucha de devolución de llamada
	</string>
	<string name="LSLTipText_llSensor">
llSensor(string name, key id, integer type, float range, float arc)
Realiza una exploración única para el nombre -name- y la identificación -id- con el tipo -type- (AGENT, ACTIVE, PASSIVE y/o SCRIPT) dentro de los medidores de alcance y radiantes de arco del vector directo (el nombre, la identificación y / o el tipo de clave pueden estar vacíos o 0)

Performs a single scan for name and id with type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward vector (name, id, and/or keytype can be empty or 0)
	</string>
	<string name="LSLTipText_llSensorRepeat">
llSensorRepeat(string name, key id, integer type, float range, float arc, float rate)
Sets a callback for name and id with type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward vector (name, id, and/or keytype can be empty or 0) and repeats every rate seconds
	</string>
	<string name="LSLTipText_llSensorRemove">
llSensorRemove()
Removes the sensor setup by llSensorRepeat
	</string>
	<string name="LSLTipText_llDetectedName">
string llDetectedName(integer number)
Returns the name of detected object number (returns empty string if number is not a valid sensed object)
	</string>
	<string name="LSLTipText_llDetectedKey">
key llDetectedKey(integer number)
Returns the key of detected object number (returns empty key if number is not a valid sensed object)
	</string>
	<string name="LSLTipText_llDetectedOwner">
key llDetectedOwner(integer number)
Returns the key of detected object&apos;s owner (returns empty key if number is not a valid sensed object)
	</string>
	<string name="LSLTipText_llDetectedType">
integer llDetectedType(integer number)
Returns the type (AGENT, ACTIVE, PASSIVE, SCRIPTED) of detected object (returns 0 if number is not a valid sensed object)
	</string>
	<string name="LSLTipText_llDetectedPos">
vector llDetectedPos(integer number)
Returns the position of detected object number (returns &lt;0,0,0&gt; if number is not a valid sensed object)
	</string>
	<string name="LSLTipText_llDetectedVel">
vector llDetectedVel(integer number)
Returns the velocity of detected object number (returns &lt;0,0,0&gt; if number is not a valid sensed object)
	</string>
	<string name="LSLTipText_llDetectedGrab">
vector llDetectedGrab(integer number)
Returns the grab offset of the user touching object (returns &lt;0,0,0&gt; if number is not a valid sensed object)
	</string>
	<string name="LSLTipText_llDetectedRot">
rotation llDetectedRot(integer number)
Returns the rotation of detected object number (returns &lt;0,0,0,1&gt; if number is not a valid sensed object)
	</string>
	<string name="LSLTipText_llDetectedGroup">
integer llDetectedGroup(integer number)
Returns TRUE if detected object is part of same group as owner
	</string>
	<string name="LSLTipText_llDetectedLinkNumber">
integer llDetectedLinkNumber(integer number)
Returns the link position of the triggered event for touches and collisions only
	</string>
	<string name="LSLTipText_llDie">
llDie()
Borra el objeto
	</string>
	<string name="LSLTipText_llGround">
float llGround(vector offset)
Returns the ground height below the object position + offset
	</string>
	<string name="LSLTipText_llCloud">
float llCloud(vector offset)
Returns the cloud density at the object position + offset
	</string>
	<string name="LSLTipText_llWind">
vector llWind(vector offset)
Returns the wind velocity at the object position + offset
	</string>
	<string name="LSLTipText_llSetStatus">
llSetStatus(integer status, integer value)
Sets status (STATUS_PHYSICS, STATUS_PHANTOM, STATUS_BLOCK_GRAB, STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z) to value
	</string>
	<string name="LSLTipText_llGetStatus">
integer llGetStatus(integer status)
Returns value of status (STATUS_PHYSICS, STATUS_PHANTOM, STATUS_BLOCK_GRAB, STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z)
	</string>
	<string name="LSLTipText_llSetScale">
llSetScale(vector scale)
Sets the scale of the prim
	</string>
	<string name="LSLTipText_llGetScale">
vector llGetScale()
Returns the scale of the prim
	</string>
	<string name="LSLTipText_llSetColor">
llSetColor(vector color, integer face)
Sets the color on face of the prim
	</string>
	<string name="LSLTipText_llGetAlpha">
float llGetAlpha(integer face)
Returns the alpha of face
	</string>
	<string name="LSLTipText_llSetAlpha">
llSetAlpha(float alpha, integer face)
Sets the alpha on face
	</string>
	<string name="LSLTipText_llGetColor">
vector llGetColor(integer face)
Returns the color on face
	</string>
	<string name="LSLTipText_llSetTexture">
llSetTexture(string texture, integer face)
Sets the texture of face or ALL_SIDES
	</string>
	<string name="LSLTipText_llScaleTexture">
llScaleTexture(float u, float v, integer face)
Sets the texture u &amp; v scales for the chosen face or ALL_SIDES
	</string>
	<string name="LSLTipText_llOffsetTexture">
llOffsetTexture(float u, float v, integer face)
Sets the texture u &amp; v offsets for the chosen face or ALL_SIDES
	</string>
	<string name="LSLTipText_llRotateTexture">
llRotateTexture(float rotation, integer face)
Sets the texture rotation for the chosen face
	</string>
	<string name="LSLTipText_llGetTexture">
string llGetTexture(integer face)
Returns a string that is the texture on face (the inventory name if it is a texture in the prim&apos;s inventory, otherwise the key)
	</string>
	<string name="LSLTipText_llSetPos">
llSetPos(vector pos)
Moves the object or prim towards pos without using physics (if the script isn&apos;t physical)
	</string>
	<string name="LSLTipText_llGetPos">
vector llGetPos()
Returns the position of the task in region coordinates
	</string>
	<string name="LSLTipText_llGetLocalPos">
vector llGetLocalPos()
Returns the position relative to the root
	</string>
	<string name="LSLTipText_llSetRot">
llSetRot(rotation rot)
Sets the rotation
	</string>
	<string name="LSLTipText_llGetRot">
rotation llGetRot()
Returns the rotation relative to the region&apos;s axes
	</string>
	<string name="LSLTipText_llGetLocalRot">
rotation llGetLocalRot()
Returns the rotation local to the root
	</string>
	<string name="LSLTipText_llSetForce">
llSetForce(vector force, integer local)
Applies force to the object (if the script is physical), in local coords if local == TRUE
	</string>
	<string name="LSLTipText_llGetForce">
vector llGetForce()
Returns the force (if the script is physical)
	</string>
	<string name="LSLTipText_llTarget">
integer llTarget(vector position, float range)
Sets positions within range of position as a target and return an ID for the target
	</string>
	<string name="LSLTipText_llTargetRemove">
llTargetRemove(integer number)
Removes positional target number registered with llTarget
	</string>
	<string name="LSLTipText_llRotTarget">
integer llRotTarget(rotation rot, float error)
Set rotations with error of rot as a rotational target and return an ID for the rotational target
	</string>
	<string name="LSLTipText_llRotTargetRemove">
llRotTargetRemove(integer number)
Removes rotational target number registered with llRotTarget
	</string>
	<string name="LSLTipText_llMoveToTarget">
llMoveToTarget(vector target, float tau)
Critically damps to target in tau seconds (if the script is physical)
	</string>
	<string name="LSLTipText_llStopMoveToTarget">
llStopMoveToTarget()
Stops critically damped motion
	</string>
	<string name="LSLTipText_llApplyImpulse">
llApplyImpulse(vector force, integer local)
Applies impulse to object (if the script is physical), in local coords if local == TRUE
	</string>
	<string name="LSLTipText_llApplyRotationalImpulse">
llApplyRotationalImpulse(vector force, integer local)
Applies rotational impulse to object (if the script is physical), in local coords if local == TRUE
	</string>
	<string name="LSLTipText_llSetTorque">
llSetTorque(vector torque, integer local)
Sets the torque of object (if the script is physical), in local coords if local == TRUE
	</string>
	<string name="LSLTipText_llGetTorque">
vector llGetTorque()
Returns the torque (if the script is physical)
	</string>
	<string name="LSLTipText_llSetForceAndTorque">
llSetForceAndTorque(vector force, vector torque, integer local)
Sets the force and torque of object (if the script is physical), in local coords if local == TRUE
	</string>
	<string name="LSLTipText_llGetVel">
vector llGetVel()
Returns the velocity of the object
	</string>
	<string name="LSLTipText_llGetAccel">
vector llGetAccel()
Returns the acceleration of the object relative to the region&apos;s axes
	</string>
	<string name="LSLTipText_llGetOmega">
vector llGetOmega()
Returns the rotation velocity in radians per second
	</string>
	<string name="LSLTipText_llGetTimeOfDay">
float llGetTimeOfDay()
Returns the time in seconds since [SECOND_LIFE] server midnight or since region up-time, whichever is smaller
	</string>
	<string name="LSLTipText_llGetWallclock">
float llGetWallclock()
Returns the time in seconds since midnight California Pacific time (PST/PDT)
	</string>
	<string name="LSLTipText_llGetTime">
float llGetTime()
Returns the time in seconds since the last region reset, script reset, or call to either llResetTime or llGetAndResetTime
	</string>
	<string name="LSLTipText_llResetTime">
llResetTime()
Sets the script timer to zero
	</string>
	<string name="LSLTipText_llGetAndResetTime">
float llGetAndResetTime()
Returns the script time in seconds and then resets the script timer to zero
	</string>
	<string name="LSLTipText_llSound">
llSound(string sound, float volume, integer queue, integer loop)
Plays sound at volume and whether it should loop or not
	</string>
	<string name="LSLTipText_llPlaySound">
llPlaySound(string sound, float volume)
Plays attached sound once at volume (0.0 - 1.0)
	</string>
	<string name="LSLTipText_llLoopSound">
llLoopSound(string sound, float volume)
Plays attached sound looping indefinitely at volume (0.0 - 1.0)
	</string>
	<string name="LSLTipText_llLoopSoundMaster">
llLoopSoundMaster(string sound, float volume)
Plays attached sound looping at volume (0.0 - 1.0), declares it a sync master
	</string>
	<string name="LSLTipText_llLoopSoundSlave">
llLoopSoundSlave(string sound, float volume)
Plays attached sound looping at volume (0.0 - 1.0), synced to most audible sync master
	</string>
	<string name="LSLTipText_llPlaySoundSlave">
llPlaySoundSlave(string sound, float volume)
Plays attached sound once at volume (0.0 - 1.0), synced to next loop of most audible sync master
	</string>
	<string name="LSLTipText_llTriggerSound">
llTriggerSound(string sound, float volume)
Plays sound at volume (0.0 - 1.0), centered at but not attached to object
	</string>
	<string name="LSLTipText_llStopSound">
llStopSound()
Stops currently attached sound
	</string>
	<string name="LSLTipText_llPreloadSound">
llPreloadSound(string sound)
Preloads a sound on viewers within range
	</string>
	<string name="LSLTipText_llGetSubString">
string llGetSubString(string src, integer start, integer end)
Returns the indicated substring
	</string>
	<string name="LSLTipText_llDeleteSubString">
string llDeleteSubString(string src, integer start, integer end)
Removes the indicated substring and returns the result
	</string>
	<string name="LSLTipText_llInsertString">
string llInsertString(string dst, integer position, string src)
Returns a destination string dst with the string src inserted starting at position pos
	</string>
	<string name="LSLTipText_llToUpper">
string llToUpper(string src)
Returns a string that is src with all upper-case characters
	</string>
	<string name="LSLTipText_llToLower">
string llToLower(string src)
Returns a string that is src with all lower-case characters
	</string>
	<string name="LSLTipText_llGiveMoney">
llGiveMoney(key destination, integer amount)
Transfers amount of [CURRENCY] from script owner to destination
	</string>
	<string name="LSLTipText_llMakeExplosion">
llMakeExplosion(integer particles, float scale, float vel, float lifetime, float arc, string texture, vector offset)
Makes a round explosion of particles
	</string>
	<string name="LSLTipText_llMakeFountain">
llMakeFountain(integer particles, float scale, float vel, float lifetime, float arc, integer bounce, string texture, vector offset, float bounce_offset)
Makes a fountain of particles
	</string>
	<string name="LSLTipText_llMakeSmoke">
llMakeSmoke(integer particles, float scale, float vel, float lifetime, float arc, string texture, vector offset)
Makes smoke like particles
	</string>
	<string name="LSLTipText_llMakeFire">
llMakeFire(integer particles, float scale, float vel, float lifetime, float arc, string texture, vector offset)
Makes fire like particles
	</string>
	<string name="LSLTipText_llRezObject">
llRezObject(string inventory, vector pos, vector vel, rotation rot, integer param)
Instantiates owner&apos;s inventory object at pos with velocity vel and rotation rot with start parameter param
	</string>
	<string name="LSLTipText_llLookAt">
llLookAt(vector target, float strength, float damping)
Causes object to point its up axis (positive z) towards target, while keeping its forward axis (positive x) below the horizon
	</string>
	<string name="LSLTipText_llStopLookAt">
llStopLookAt()
Stops causing object to point at a target
	</string>
	<string name="LSLTipText_llSetTimerEvent">
llSetTimerEvent(float sec)
Causes the timer event to be triggered a maximum of once every sec seconds
	</string>
	<string name="LSLTipText_llSleep">
llSleep(float sec)
Puts the script to sleep for sec seconds
	</string>
	<string name="LSLTipText_llGetMass">
float llGetMass()
Returns the mass of object that the script is attached to
	</string>
	<string name="LSLTipText_llCollisionFilter">
llCollisionFilter(string name, key id, integer accept)
Sets the collision filter, exclusively or inclusively. If accept == TRUE, only accept collisions with objects name and id (either is optional), otherwise with objects not name or id
	</string>
	<string name="LSLTipText_llTakeControls">
llTakeControls(integer controls, integer accept, integer pass_on)
Allows for intercepting keyboard and mouse clicks from the agent the script has permissions for
	</string>
	<string name="LSLTipText_llReleaseControls">
llReleaseControls()
Stops taking inputs that were taken with llTakeControls
	</string>
	<string name="LSLTipText_llAttachToAvatar">
llAttachToAvatar(integer attach_point)
Attaches the object to the avatar who has granted permission to the script
	</string>
	<string name="LSLTipText_llDetachFromAvatar">
llDetachFromAvatar()
Detaches object from avatar
	</string>
	<string name="LSLTipText_llTakeCamera">
llTakeCamera(key avatar)
Moves avatar&apos;s viewpoint to task
	</string>
	<string name="LSLTipText_llReleaseCamera">
llReleaseCamera(key avatar)
Returns camera to agent avatar
	</string>
	<string name="LSLTipText_llGetOwner">
key llGetOwner()
Returns the object owner&apos;s UUID
	</string>
	<string name="LSLTipText_llInstantMessage">
llInstantMessage(key user, string message)
Sends the specified string as an Instant Message to the user
	</string>
  <string name="LSLTipText_llEmail">
llEmail(string address, string subject, string message)
Sends an email to address with the subject and message
  </string>
	<string name="LSLTipText_llGetNextEmail">
llGetNextEmail(string address, string subject)
Gets the next waiting email that comes from address, with specified subject
	</string>
	<string name="LSLTipText_llGetKey">
key llGetKey()
Returns the key of the prim the script is attached to
	</string>
	<string name="LSLTipText_llSetBuoyancy">
llSetBuoyancy(float buoyancy)
Sets the buoyancy of the task or object (0 is disabled, &lt; 1.0 sinks, 1.0 floats, &gt; 1.0 rises)
	</string>
	<string name="LSLTipText_llSetHoverHeight">
llSetHoverHeight(float height, integer water, float tau)
Critically damps to a height above the ground (or water) in tau seconds
	</string>
	<string name="LSLTipText_llStopHover">
llStopHover()
Stops hovering to a height
	</string>
	<string name="LSLTipText_llMinEventDelay">
llMinEventDelay(float delay)
Sets the minimum time between events being handled
	</string>
	<string name="LSLTipText_llSoundPreload">
llSoundPreload(string sound)
Preloads a sound on viewers within range
	</string>
	<string name="LSLTipText_llRotLookAt">
llRotLookAt(rotation target, float strength, float damping)
Causes object to point its forward axis towards target
	</string>
	<string name="LSLTipText_llStringLength">
integer llStringLength(string str)
Returns the length of string
	</string>
	<string name="LSLTipText_llStartAnimation">
llStartAnimation(string anim)
Starts animation anim for agent that granted PERMISSION_TRIGGER_ANIMATION if the permission has not been revoked
	</string>
	<string name="LSLTipText_llStopAnimation">
llStopAnimation(string anim)
Stops animation anim for agent that granted permission
	</string>
	<string name="LSLTipText_llPointAt">
llPointAt(vector pos)
Makes agent that owns object point at pos
	</string>
	<string name="LSLTipText_llStopPointAt">
llStopPointAt()
Stops pointing agent that owns object
	</string>
	<string name="LSLTipText_llTargetOmega">
llTargetOmega(vector axis, float spinrate, float gain)
Rotates the object around axis at spinrate with strength gain
	</string>
	<string name="LSLTipText_llGetStartParameter">
integer llGetStartParameter()
Returns an integer that is the script start/rez parameter
	</string>
	<string name="LSLTipText_llGodLikeRezObject">
llGodLikeRezObject(key inventory, vector pos)
Rezzes directly off of UUID if owner is in God Mode
	</string>
	<string name="LSLTipText_llRequestPermissions">
llRequestPermissions(key agent, integer perm)
Asks the agent for permission to run certain classes of functions
	</string>
	<string name="LSLTipText_llGetPermissionsKey">
key llGetPermissionsKey()
Returns the key of the avatar that last granted permissions to the script
	</string>
	<string name="LSLTipText_llGetPermissions">
integer llGetPermissions()
Returns an integer bitfield with the permissions that have been granted
	</string>
	<string name="LSLTipText_llGetLinkNumber">
integer llGetLinkNumber()
Returns the link number of the prim containing the script (0 means not linked, 1 the prim is the root, 2 the prim is the first child, etc)
	</string>
	<string name="LSLTipText_llSetLinkColor">
llSetLinkColor(integer linknumber, vector color, integer face)
Sets face to color if a task exists in the link chain at linknumber
	</string>
	<string name="LSLTipText_llCreateLink">
llCreateLink(key target, integer parent)
Attempts to link the script&apos;s object with the target (requires that PERMISSION_CHANGE_LINKS be granted). If parent == TRUE, then the script&apos;s object becomes the root
	</string>
	<string name="LSLTipText_llBreakLink">
llBreakLink(integer linknum)
Delinks the prim with the given link number in a linked object set (requires that PERMISSION_CHANGE_LINKS be granted)
	</string>
	<string name="LSLTipText_llBreakAllLinks">
llBreakAllLinks()
Delinks all prims in the link set (requires that PERMISSION_CHANGE_LINKS be granted)
	</string>
	<string name="LSLTipText_llGetLinkKey">
key llGetLinkKey(integer linknumber)
Returns the key of the linked prim linknumber
	</string>
	<string name="LSLTipText_llGetLinkName">
string llGetLinkName(integer linknumber)
Returns the name of linknumber in a link set
	</string>
	<string name="LSLTipText_llGetInventoryNumber">
integer llGetInventoryNumber(integer type)
Returns the number of items of a given type (INVENTORY_* flag) in the prim&apos;s inventory
	</string>
	<string name="LSLTipText_llGetInventoryName">
string llGetInventoryName(integer type, integer number)
Returns the name of the inventory item number of a given type
	</string>
	<string name="LSLTipText_llSetScriptState">
llSetScriptState(string name, integer run)
Sets the running state of the specified script
	</string>
	<string name="LSLTipText_llGetEnergy">
float llGetEnergy()
Returns how much energy is in the object as a percentage of maximum
	</string>
	<string name="LSLTipText_llGiveInventory">
llGiveInventory(key destination, string inventory)
Gives inventory to destination
	</string>
	<string name="LSLTipText_llRemoveInventory">
llRemoveInventory(string item)
Removes the named inventory item
	</string>
	<string name="LSLTipText_llSetText">
llSetText(string text, vector color, float alpha)
Displays text that hovers over the prim with specific color and translucency specified with alpha
	</string>
	<string name="LSLTipText_llWater">
float llWater(vector offset)
Returns the water height below the object position + offset
	</string>
	<string name="LSLTipText_llPassTouches">
llPassTouches(integer pass)
If pass == TRUE, touches are passed from children on to parents
	</string>
	<string name="LSLTipText_llRequestAgentData">
key llRequestAgentData(key id, integer data)
Requests data about agent id. When data is available the dataserver event will be raised.
	</string>
	<string name="LSLTipText_llRequestInventoryData">
key llRequestInventoryData(string name)
Requests data from object&apos;s inventory object. When data is available the dataserver event will be raised.
	</string>
	<string name="LSLTipText_llSetDamage">
llSetDamage(float damage)
Sets the amount of damage that will be done when this object hits an avatar.
	</string>
	<string name="LSLTipText_llTeleportAgentHome">
llTeleportAgentHome(key id)
Teleports avatar on the owner&apos;s land to their home location without any warning
	</string>
	<string name="LSLTipText_llModifyLand">
llModifyLand(integer action, integer brush)
Modifies land using the specified action on the specified brush size of land
	</string>
	<string name="LSLTipText_llCollisionSound">
llCollisionSound(string impact_sound, float impact_volume)
Suppresses default collision sounds, replaces default impact sounds with impact_sound at the volume impact_volume
	</string>
	<string name="LSLTipText_llCollisionSprite">
llCollisionSprite(string impact_sprite)
Suppresses default collision sprites, replaces default impact sprite with impact_sprite (use an empty string to just suppress)
	</string>
	<string name="LSLTipText_llGetAnimation">
string llGetAnimation(key id)
Returns the name of the currently playing locomotion animation for avatar id
	</string>
	<string name="LSLTipText_llResetScript">
llResetScript()
Resets the script
	</string>
	<string name="LSLTipText_llMessageLinked">
llMessageLinked(integer linknum, integer num, string str, key id)
Allows scripts in the same object to communicate. Triggers a link_message event with the same parameters num, str, and id in all scripts in the prim(s) described by linknum.
	</string>
	<string name="LSLTipText_llPushObject">
llPushObject(key id, vector impulse, vector ang_impulse, integer local)
Applies impulse and ang_impulse to object id
	</string>
	<string name="LSLTipText_llPassCollisions">
llPassCollisions(integer pass)
If pass == TRUE, collisions are passed from children on to parents (default is FALSE)
	</string>
	<string name="LSLTipText_llGetScriptName">
string llGetScriptName()
Returns the name of the script that this function is used in
	</string>
	<string name="LSLTipText_llGetNumberOfSides">
integer llGetNumberOfSides()
Returns the number of faces (or sides) of the prim
	</string>
	<string name="LSLTipText_llAxisAngle2Rot">
rotation llAxisAngle2Rot(vector axis, float angle)
Returns the rotation that is a generated angle about axis
	</string>
	<string name="LSLTipText_llRot2Axis">
vector llRot2Axis(rotation rot)
Returns the rotation axis represented by rot
	</string>
	<string name="LSLTipText_llRot2Angle">
float llRot2Angle(rotation rot)
Returns the rotation angle represented by rot
	</string>
	<string name="LSLTipText_llAcos">
float llAcos(float val)
Returns the arccosine in radians of val
	</string>
	<string name="LSLTipText_llAsin">
float llAsin(float val)
Returns the arcsine in radians of val
	</string>
	<string name="LSLTipText_llAngleBetween">
float llAngleBetween(rotation a, rotation b)
Returns angle between rotation a and b
	</string>
	<string name="LSLTipText_llGetInventoryKey">
key llGetInventoryKey(string name)
Returns the key that is the UUID of the inventory name
	</string>
	<string name="LSLTipText_llAllowInventoryDrop">
llAllowInventoryDrop(integer add)
If add == TRUE, users without modify permissions can still drop inventory items onto a prim
	</string>
	<string name="LSLTipText_llGetSunDirection">
vector llGetSunDirection()
Returns a normalized vector of the direction of the sun in the region
	</string>
	<string name="LSLTipText_llGetTextureOffset">
vector llGetTextureOffset(integer face)
Returns the texture offset of face in the x and y components of a vector
	</string>
	<string name="LSLTipText_llGetTextureScale">
vector llGetTextureScale(integer side)
Returns the texture scale of side in the x and y components of a vector
	</string>
	<string name="LSLTipText_llGetTextureRot">
float llGetTextureRot(integer side)
Returns the texture rotation of side
	</string>
	<string name="LSLTipText_llSubStringIndex">
integer llSubStringIndex(string source, string pattern)
Returns an integer that is the index in source where pattern first appears.
(Returns -1 if not found)
	</string>
	<string name="LSLTipText_llGetOwnerKey">
key llGetOwnerKey(key id)
Returns the owner of object id
	</string>
	<string name="LSLTipText_llGetCenterOfMass">
vector llGetCenterOfMass()
Returns the prim&apos;s center of mass (unless called from the root prim, where it returns the object&apos;s center of mass)
	</string>
	<string name="LSLTipText_llListSort">
list llListSort(list src, integer stride, integer ascending)
Sorts the list into blocks of stride, in ascending order if ascending == TRUE.
The sort order is affected by type.
	</string>
	<string name="LSLTipText_llGetListLength">
integer llGetListLength(list src)
Returns the number of elements in the list
	</string>
	<string name="LSLTipText_llList2Integer">
integer llList2Integer(list src, integer index)
Copies the integer at index in the list
	</string>
	<string name="LSLTipText_llList2Float">
float llList2Float(list src, integer index)
Copies the float at index in the list
	</string>
	<string name="LSLTipText_llList2String">
string llList2String(list src, integer index)
Copies the string at index in the list
	</string>
	<string name="LSLTipText_llList2Key">
key llList2Key(list src, integer index)
Copies the key at index in the list
	</string>
	<string name="LSLTipText_llList2Vector">
vector llList2Vector(list src, integer index)
Copies the vector at index in the list
	</string>
	<string name="LSLTipText_llList2Rot">
rotation llList2Rot(list src, integer index)
Copies the rotation at index in the list
	</string>
	<string name="LSLTipText_llList2List">
list llList2List(list src, integer start, integer end)
Copies the slice of the list from start to end
	</string>
	<string name="LSLTipText_llDeleteSubList">
list llDeleteSubList(list src, integer start, integer end)
Removes the slice from start to end and returns the remainder of the list
	</string>
	<string name="LSLTipText_llGetListEntryType">
integer llGetListEntryType(list src, integer index)
Returns the type of the index entry in the list
(TYPE_INTEGER, TYPE_FLOAT, TYPE_STRING, TYPE_KEY, TYPE_VECTOR, TYPE_ROTATION, or TYPE_INVALID if index is off list)
	</string>
	<string name="LSLTipText_llList2CSV">
string llList2CSV(list src)
Creates a string of comma separated values from list
	</string>
	<string name="LSLTipText_llCSV2List">
list llCSV2List(string src)
Creates a list from a string of comma separated values
	</string>
	<string name="LSLTipText_llListRandomize">
list llListRandomize(list src, integer stride)
Returns a randomized list of blocks of size stride
	</string>
	<string name="LSLTipText_llList2ListStrided">
list llList2ListStrided(list src, integer start, integer end, integer stride)
Copies the strided slice of the list from start to end
	</string>
	<string name="LSLTipText_llGetRegionCorner">
vector llGetRegionCorner()
Returns a vector in meters that is the global location of the south-west corner of the region which the object is in
	</string>
	<string name="LSLTipText_llListInsertList">
list llListInsertList(list dest, list src, integer start)
Returns a list that contains all the elements from dest but with the elements from src inserted at position start
	</string>
	<string name="LSLTipText_llListFindList">
integer llListFindList(list src, list test)
Returns the index of the first instance of test in src.
(Returns -1 if not found)
	</string>
	<string name="LSLTipText_llGetObjectName">
string llGetObjectName()
Returns the name of the prim which the script is attached to
	</string>
	<string name="LSLTipText_llSetObjectName">
llSetObjectName(string name)
Sets the prim&apos;s name to the name parameter
	</string>
	<string name="LSLTipText_llGetDate">
string llGetDate()
Returns the current date in the UTC time zone in the format YYYY-MM-DD
	</string>
	<string name="LSLTipText_llEdgeOfWorld">
integer llEdgeOfWorld(vector pos, vector dir)
Checks to see whether the border hit by dir from pos is the edge of the world (has no neighboring region)
	</string>
	<string name="LSLTipText_llGetAgentInfo">
integer llGetAgentInfo(key id)
Returns an integer bitfield containing the agent information about id.
Returns AGENT_FLYING, AGENT_ATTACHMENTS, AGENT_SCRIPTED, AGENT_SITTING, AGENT_ON_OBJECT, AGENT_MOUSELOOK, AGENT_AWAY, AGENT_BUSY, AGENT_TYPING, AGENT_CROUCHING, AGENT_ALWAYS_RUN, AGENT_WALKING and/or AGENT_IN_AIR.
	</string>
	<string name="LSLTipText_llAdjustSoundVolume">
llAdjustSoundVolume(float volume)
Adjusts volume of attached sound (0.0 - 1.0)
	</string>
	<string name="LSLTipText_llSetSoundQueueing">
llSetSoundQueueing(integer queue)
Sets whether attached sounds wait for the current sound to finish (If queue == TRUE then queuing is enabled, if FALSE queuing is disabled [default])
	</string>
	<string name="LSLTipText_llSetSoundRadius">
llSetSoundRadius(float radius)
Establishes a hard cut-off radius for audibility of scripted sounds (both attached and triggered)
	</string>
	<string name="LSLTipText_llKey2Name">
string llKey2Name(key id)
Returns the name of the prim or avatar specified by id.
(The id must be a valid rezzed prim or avatar key in the current simulator, otherwise an empty string is returned.)
	</string>
	<string name="LSLTipText_llSetTextureAnim">
llSetTextureAnim(integer mode, integer face, integer sizex, integer sizey, float start, float length, float rate)
Animates the texture on the specified face/faces
	</string>
	<string name="LSLTipText_llTriggerSoundLimited">
llTriggerSoundLimited(string sound, float volume, vector top_north_east, vector bottom_south_west)
Plays sound at volume (0.0 - 1.0), centered at but not attached to object, limited to the box defined by vectors top_north_east and bottom_south_west
	</string>
	<string name="LSLTipText_llEjectFromLand">
llEjectFromLand(key avatar)
Ejects avatar from the parcel
	</string>
	<string name="LSLTipText_llParseString2List">
list llParseString2List(string src, list separators, list spacers)
Breaks src into a list, discarding separators, keeping spacers
(separators and spacers must be lists of strings, maximum of 8 each)
	</string>
	<string name="LSLTipText_llOverMyLand">
integer llOverMyLand(key id)
Returns TRUE if id is over land owned by the script owner, otherwise FALSE
	</string>
	<string name="LSLTipText_llGetLandOwnerAt">
key llGetLandOwnerAt(vector pos)
Returns the key of the land owner, returns NULL_KEY if public
	</string>
	<string name="LSLTipText_llGetNotecardLine">
key llGetNotecardLine(string name, integer line)
Returns line line of notecard name via the dataserver event
	</string>
	<string name="LSLTipText_llGetAgentSize">
vector llGetAgentSize(key id)
If the avatar is in the same region, returns the size of the bounding box of the requested avatar by id, otherwise returns ZERO_VECTOR
	</string>
	<string name="LSLTipText_llSameGroup">
integer llSameGroup(key id)
Returns TRUE if avatar id is in the same region and has the same active group, otherwise FALSE
	</string>
	<string name="LSLTipText_llUnSit">
key llUnSit(key id)
If avatar identified by id is sitting on the object the script is attached to or is over land owned by the object&apos;s owner, the avatar is forced to stand up
	</string>
	<string name="LSLTipText_llGroundSlope">
vector llGroundSlope(vector offset)
Returns the ground slope below the object position + offset
	</string>
	<string name="LSLTipText_llGroundNormal">
vector llGroundNormal(vector offset)
Returns the ground normal below the object position + offset
	</string>
	<string name="LSLTipText_llGroundContour">
vector llGroundCountour(vector offset)
Returns the ground contour direction below the object position + offset
	</string>
	<string name="LSLTipText_llGetAttached">
integer llGetAttached()
Returns the object&apos;s attachment point, or 0 if not attached
	</string>
	<string name="LSLTipText_llGetFreeMemory">
integer llGetFreeMemory()
Returns the number of free bytes of memory the script can use
	</string>
	<string name="LSLTipText_llGetRegionName">
string llGetRegionName()
Returns the current region name
	</string>
	<string name="LSLTipText_llGetRegionTimeDilation">
float llGetRegionTimeDilation()
Returns the current time dilation as a float between 0.0 (full dilation) and 1.0 (no dilation)
	</string>
	<string name="LSLTipText_llGetRegionFPS">
float llGetRegionFPS()
Returns the mean region frames per second
	</string>
	<string name="LSLTipText_llParticleSystem">
llParticleSystem(list rules)
Creates a particle system based on rules.  An empty list removes the particle system.
List format is [ rule1, data1, rule2, data2 . . . rulen, datan ]
	</string>
	<string name="LSLTipText_llGroundRepel">
llGroundRepel(float height, integer water, float tau)
Critically damps to height if within height*0.5 of level (either above ground level, or above the higher of land and water if water == TRUE)
	</string>
	<string name="LSLTipText_llGiveInventoryList">
llGiveInventoryList(key target, string folder, list inventory)
Gives inventory items to target, creating a new folder to put them in
	</string>
	<string name="LSLTipText_llSetVehicleType">
llSetVehicleType(integer type)
Sets the vehicle to one of the default types
	</string>
	<string name="LSLTipText_llSetVehicleFloatParam">
llSetVehicleFloatParam(integer param, float value)
Sets the specified vehicle float parameter
	</string>
	<string name="LSLTipText_llSetVehicleVectorParam">
llSetVehicleVectorParam(integer param, vector vec)
Sets the specified vehicle vector parameter
	</string>
	<string name="LSLTipText_llSetVehicleRotationParam">
llSetVehicleVectorParam(integer param, rotation rot)
Sets the specified vehicle rotation parameter
	</string>
	<string name="LSLTipText_llSetVehicleFlags">
llSetVehicleFlags(integer flags)
Sets the enabled bits in &apos;flags&apos;
	</string>
	<string name="LSLTipText_llRemoveVehicleFlags">
llRemoveVehicleFlags(integer flags)
Removes the enabled bits in &apos;flags&apos;
	</string>
	<string name="LSLTipText_llSitTarget">
llSitTarget(vector offset, rotation rot)
Sets the sit location for the prim.  If offset == &lt;0,0,0&gt; then the sit target is removed.
	</string>
	<string name="LSLTipText_llAvatarOnSitTarget">
key llAvatarOnSitTarget()
If an avatar is seated on the sit target, returns the avatar&apos;s key, otherwise NULL_KEY
	</string>
	<string name="LSLTipText_llAddToLandPassList">
llAddToLandPassList(key avatar, float hours)
Adds avatar to the land pass list for hours, or indefinitely if hours is 0
	</string>
	<string name="LSLTipText_llSetTouchText">
llSetTouchText(string text)
Displays text rather than the default &apos;Touch&apos; in the pie menu
	</string>
	<string name="LSLTipText_llSetSitText">
llSetSitText(string text)
Displays text rather than the default &apos;Sit Here&apos; in the pie menu
	</string>
	<string name="LSLTipText_llSetCameraEyeOffset">
llSetCameraEyeOffset(vector offset)
Sets the camera eye offset for avatars that sit on the object
	</string>
	<string name="LSLTipText_llSetCameraAtOffset">
llSetCameraAtOffset(vector offset)
Sets the point the camera is looking at to offset for avatars that sit on the object
	</string>
	<string name="LSLTipText_llDumpList2String">
string llDumpList2String(list src, string separator)
Returns the list in a single string, using separator between the entries
	</string>
	<string name="LSLTipText_llScriptDanger">
integer llScriptDanger(vector pos)
Returns TRUE if pos is over public land, sandbox land, land that doesn&apos;t allow everyone to edit and build, or land that doesn&apos;t allow outside scripts
	</string>
	<string name="LSLTipText_llDialog">
llDialog(key avatar, string message, list buttons, integer chat_channel)
Shows a dialog box on the avatar&apos;s screen with a message and up to 12 buttons.
If a button is pressed, the avatar says the text of the button label on chat_channel.
	</string>
	<string name="LSLTipText_llVolumeDetect">
llVolumeDetect(integer detect)
If detect = TRUE, object works much like Phantom, but triggers collision_start and collision_end events when other objects start and stop interpenetrating.
Must be applied to the root prim.
	</string>
	<string name="LSLTipText_llResetOtherScript">
llResetOtherScript(string name)
Resets script name
	</string>
	<string name="LSLTipText_llGetScriptState">
integer llGetScriptState(string name)
Returns TRUE if the script name is running
	</string>
	<string name="LSLTipText_llRemoteLoadScript">
DEPRECATED!  Please use llRemoteLoadScriptPin instead.
	</string>
	<string name="LSLTipText_llSetRemoteScriptAccessPin">
llSetRemoteScriptAccessPin(integer pin)
If pin is set to a non-zero number, allows a prim to have scripts remotely loaded via llRemoteLoadScriptPin when it passes in the correct pin. Otherwise, llRemoteLoadScriptPin is ignored.
	</string>
	<string name="LSLTipText_llRemoteLoadScriptPin">
llRemoteLoadScriptPin(key target, string name, integer pin, integer running, integer start_param)
Copies script name onto target, if the owner of this scripted object can modify target and is in the same region, and the matching pin is used.
If running == TRUE, starts the script with start_param
	</string>
	<string name="LSLTipText_llOpenRemoteDataChannel">
llOpenRemoteDataChannel()
Creates a channel to listen for XML-RPC calls, and will trigger a remote_data event with channel id once it is available
	</string>
	<string name="LSLTipText_llSendRemoteData">
key llSendRemoteData(key channel, string dest, integer idata, string sdata)
Sends an XML-RPC request to dest through channel with payload of channel (in a string), integer idata and string sdata.
Returns a key that is the message_id for the resulting remote_data events.
	</string>
	<string name="LSLTipText_llRemoteDataReply">
llRemoteDataReply(key channel, key message_id, string sdata, integer idata)
Sends an XML-RPC reply to message_id on channel with payload of string sdata and integer idata
	</string>
	<string name="LSLTipText_llCloseRemoteDataChannel">
llCloseRemoteDataChannel(key channel)
Closes XML-RPC channel
	</string>
	<string name="LSLTipText_llMD5String">
string llMD5String(string src, integer nonce)
Returns a string of 32 hex characters that is a RSA Data Security, Inc. MD5 Message-Digest Algorithm of src with nonce
	</string>
	<string name="LSLTipText_llSetPrimitiveParams">
llSetPrimitiveParams(list rules)
Sets the prim&apos;s parameters according to rules
	</string>
	<string name="LSLTipText_llStringToBase64">
string llStringToBase64(string str)
Converts a string to the Base64 representation of the string
	</string>
	<string name="LSLTipText_llBase64ToString">
string llBase64ToString(string str)
Converts a Base64 string to a conventional string.
If the conversion creates any unprintable characters, they are converted to spaces.
	</string>
	<string name="LSLTipText_llXorBase64Strings">
string llXorBase64Strings(string s1, string s2)
DEPRECATED!  Please use llXorBase64StringsCorrect instead.
Incorrectly performs an exclusive or on two Base64 strings and returns a Base64 string.  s2 repeats if it is shorter than s1.  Retained for backwards compatability.
	</string>
	<string name="LSLTipText_llRemoteDataSetRegion">
llRemoteDataSetRegion()
DEPRECATED!  Please use llOpenRemoteDataChannel instead.
If an object using remote data channels changes regions, you must call this function to reregister the remote data channels. This call is not needed if the prim does not change regions.
	</string>
	<string name="LSLTipText_llLog10">
float llLog10(float val)
Returns the base 10 logarithm of val.  Returns zero if val &lt;= 0.
	</string>
	<string name="LSLTipText_llLog">
float llLog(float val)
Returns the natural logarithm of val.  Returns zero if val &lt;= 0.
	</string>
	<string name="LSLTipText_llGetAnimationList">
list llGetAnimationList(key id)
Returns a list of keys of playing animations for avatar described by id
	</string>
	<string name="LSLTipText_llSetParcelMusicURL">
llSetParcelMusicURL(string url)
Sets the streaming audio URL for the parcel which the object is on
	</string>
	<string name="LSLTipText_llGetRootPosition">
vector llGetRootPosition()
Returns the position (in region coordinates) of the root prim of the object which the script is attached to
	</string>
	<string name="LSLTipText_llGetRootRotation">
rotation llGetRootRotation()
Returns the rotation (relative to the region) of the root prim of the object which the script is attached to
	</string>
	<string name="LSLTipText_llGetObjectDesc">
string llGetObjectDesc()
Returns the description of the prim the script is attached to
	</string>
	<string name="LSLTipText_llSetObjectDesc">
llSetObjectDesc(string name)
Sets the prim&apos;s description
	</string>
	<string name="LSLTipText_llGetCreator">
key llGetCreator()
Returns a key for the creator of the prim
	</string>
	<string name="LSLTipText_llGetTimestamp">
string llGetTimestamp()
Returns the timestamp in the UTC time zone in the format: YYYY-MM-DDThh:mm:ss.ff..fZ
	</string>
	<string name="LSLTipText_llSetLinkAlpha">
llSetLinkAlpha(integer linknumber, float alpha, integer face)
If a prim exists in the link chain at linknumber, sets face to alpha
	</string>
	<string name="LSLTipText_llGetNumberOfPrims">
integer llGetNumberOfPrims()
Returns the number of prims in a link set the script is attached to
	</string>
	<string name="LSLTipText_llGetNumberOfNotecardLines">
key llGetNumberOfNotecardLines(string name)
Returns number of lines in notecard name via the dataserver event (cast return value to integer)
	</string>
	<string name="LSLTipText_llGetBoundingBox">
list llGetBoundingBox(key object)
Returns the bounding box around the object (including any linked prims) relative to its root prim, in a list in the format [ (vector) min_corner, (vector) max_corner ]
	</string>
	<string name="LSLTipText_llGetGeometricCenter">
vector llGetGeometricCenter()
Returns the geometric center of the linked set the script is attached to.
	</string>
	<string name="LSLTipText_llGetPrimitiveParams">
list llGetPrimitiveParams(list params)
Returns the primitive parameters specified in the params list.
	</string>
	<string name="LSLTipText_llIntegerToBase64">
string llIntegerToBase64(integer number)
Returns a string that is a Base64 big endian encode of number
	</string>
	<string name="LSLTipText_llBase64ToInteger">
integer llBase64ToInteger(string str)
Returns an integer that is the str Base64 decoded as a big endian integer
	</string>
	<string name="LSLTipText_llGetGMTclock">
float llGetGMTclock()
Returns the time in seconds since midnight GMT
	</string>
	<string name="LSLTipText_llGetSimulatorHostname">
string llGetSimulatorHostname()
Returns the hostname of the machine which the script is running on (same as string in viewer Help dialog)
	</string>
	<string name="LSLTipText_llSetLocalRot">
llSetLocalRot(rotation rot)
Sets the rotation of a child prim relative to the root prim
	</string>
	<string name="LSLTipText_llParseStringKeepNulls">
list llParseStringKeepNulls(string src, list separators, list spacers)
Breaks src into a list, discarding separators, keeping spacers, keeping any null values generated.
(separators and spacers must be lists of strings, maximum of 8 each)
	</string>
	<string name="LSLTipText_llRezAtRoot">
llRezAtRoot(string inventory, vector pos, vector vel, rotation rot, integer param)
Instantiates owner&apos;s inventory object rotated to rot with its root at pos, moving at vel, using param as the start parameter
	</string>
	<string name="LSLTipText_llGetObjectPermMask">
integer llGetObjectPermMask(integer mask)
Returns the requested permission mask for the root object the task is attached to
	</string>
	<string name="LSLTipText_llSetObjectPermMask">
llSetObjectPermMask(integer mask, integer value)
Sets the given permission mask to the new value on the root object the task is attached to (requires God Mode)
	</string>
	<string name="LSLTipText_llGetInventoryPermMask">
integer llGetInventoryPermMask(string item, integer mask)
Returns the requested permission mask for the inventory item
	</string>
	<string name="LSLTipText_llSetInventoryPermMask">
llSetInventoryPermMask(string item, integer mask, integer value)
Sets the given permission mask to the new value on the inventory item (requires God Mode)
	</string>
	<string name="LSLTipText_llGetInventoryCreator">
key llGetInventoryCreator(string item)
Returns a key for the creator of the inventory item
	</string>
	<string name="LSLTipText_llOwnerSay">
llOwnerSay(string msg)
Says msg to owner only.  (Owner must be in the same region.)
	</string>
	<string name="LSLTipText_llRequestSimulatorData">
key llRequestSimulatorData(string simulator, integer data)
Requests data about simulator.  When data is available the dataserver event will be raised.
	</string>
	<string name="LSLTipText_llForceMouselook">
llForceMouselook(integer mouselook)
If mouselook is TRUE, any avatar that sits upon the prim will be forced into mouselook mode
	</string>
	<string name="LSLTipText_llGetObjectMass">
float llGetObjectMass(key id)
Returns the mass of the avatar or object in the region
	</string>
	<string name="LSLTipText_llListReplaceList">
list llListReplaceList(list dest, list src, integer start, integer end)
Returns a list that is dest with start through end removed and src inserted at start
	</string>
	<string name="LSLTipText_llLoadURL">
llLoadURL(key avatar, string message, string url)
Shows a dialog to avatar offering to load the web page at url with a message.
If user clicks yes, launches the page in their web browser.
	</string>
	<string name="LSLTipText_llParcelMediaCommandList">
llParcelMediaCommandList(list command)
Sends a list of commands, some with arguments, to a parcel to control the playback of movies and other media
	</string>
	<string name="LSLTipText_llParcelMediaQuery">
list llParcelMediaQuery(list query)
Returns a list containing results of the sent query
	</string>
	<string name="LSLTipText_llModPow">
integer llModPow(integer a, integer b, integer c)
Returns a raised to the b power, mod c. ( (a**b)%c )
b is capped at 0xFFFF (16 bits).
	</string>
	<string name="LSLTipText_llGetInventoryType">
integer llGetInventoryType(string name)
Returns the type of the inventory item name
	</string>
	<string name="LSLTipText_llSetPayPrice">
llSetPayPrice(integer price, list quick_pay_buttons)
Sets the default amount on the dialog that appears when someone chooses to pay this prim
	</string>
	<string name="LSLTipText_llGetCameraPos">
vector llGetCameraPos()
Returns the current camera position for the agent the task has permissions for
	</string>
	<string name="LSLTipText_llGetCameraRot">
rotation llGetCameraRot()
Returns the current camera orientation for the agent the task has permissions for
	</string>
	<string name="LSLTipText_llSetPrimURL">
llSetPrimURL(string url)
Updates the URL for the web page shown on the sides of the object
	</string>
	<string name="LSLTipText_llRefreshPrimURL">
llRefreshPrimURL()
Reloads the web page shown on the sides of the object
	</string>
	<string name="LSLTipText_llEscapeURL">
string llEscapeURL(string url)
Returns an escaped/encoded version of url, replacing spaces with %20 etc.
	</string>
	<string name="LSLTipText_llUnescapeURL">
string llUnescapeURL(string url)
Returns an unescaped/ unencoded version of url, replacing %20 with spaces etc.
	</string>
	<string name="LSLTipText_llMapDestination">
llMapDestination(string simname, vector pos, vector look_at)
Opens the World Map centered on the region simname with pos highlighted. (NOTE: look_at currently does nothing.)
Only works for scripts attached to avatar, or during touch events.
	</string>
	<string name="LSLTipText_llAddToLandBanList">
llAddToLandBanList(key avatar, float hours)
Adds avatar to the land ban list for hours, or indefinitely if hours is 0
	</string>
	<string name="LSLTipText_llRemoveFromLandPassList">
llRemoveFromLandPassList(key avatar)
Removes avatar from the land pass list
	</string>
	<string name="LSLTipText_llRemoveFromLandBanList">
llRemoveFromLandBanList(key avatar)
Removes avatar from the land ban list
	</string>
	<string name="LSLTipText_llSetCameraParams">
llSetCameraParams(list rules)
Sets multiple camera parameters at once.
List format is [ rule1, data1, rule2, data2 . . . rulen, datan ]
	</string>
	<string name="LSLTipText_llClearCameraParams">
llClearCameraParams()
Resets all camera parameters to default values and turns off scripted camera control
	</string>
	<string name="LSLTipText_llListStatistics">
float llListStatistics(integer operation, list src)
Performs statistical aggregate functions on list src using LIST_STAT_* operations
	</string>
	<string name="LSLTipText_llGetUnixTime">
integer llGetUnixTime()
Returns the number of seconds elapsed since 00:00 hours, Jan 1, 1970 UTC from the system clock
	</string>
	<string name="LSLTipText_llGetParcelFlags">
integer llGetParcelFlags(vector pos)
Returns a mask of the parcel flags (PARCEL_FLAG_*) for the parcel that includes the point pos
	</string>
	<string name="LSLTipText_llGetRegionFlags">
integer llGetRegionFlags()
Returns the region flags (REGION_FLAG_*) for the region the object is in
	</string>
	<string name="LSLTipText_llXorBase64StringsCorrect">
string llXorBase64StringsCorrect(string s1, string s2)
Correctly performs an exclusive or on two Base64 strings and returns a Base64 string.
s2 repeats if it is shorter than s1.
	</string>
	<string name="LSLTipText_llHTTPRequest">
llHTTPRequest(string url, list parameters, string body)
Sends an HTTP request to the specified url with the body of the request and parameters
	</string>
	<string name="LSLTipText_llResetLandBanList">
llResetLandBanList()
Removes all Residents from the land ban list
	</string>
	<string name="LSLTipText_llResetLandPassList">
llResetLandPassList()
Removes all Residents from the land access/pass list
	</string>
	<string name="LSLTipText_llGetObjectPrimCount">
integer llGetObjectPrimCount(key object_id)
Returns the total number of prims for an object in the region
	</string>
	<string name="LSLTipText_llGetParcelPrimOwners">
list llGetParcelPrimOwners(vector pos)
Returns a list of all Residents who own objects on the parcel at pos and with individual prim counts.
Requires owner-like permissions for the parcel.
	</string>
	<string name="LSLTipText_llGetParcelPrimCount">
integer llGetParcelPrimCount(vector pos, integer category, integer sim_wide)
Returns the number of prims on the parcel at pos of the given category.
Categories: PARCEL_COUNT_TOTAL, _OWNER, _GROUP, _OTHER, _SELECTED, _TEMP
	</string>
	<string name="LSLTipText_llGetParcelMaxPrims">
integer llGetParcelMaxPrims(vector pos, integer sim_wide)
Returns the maximum number of prims allowed on the parcel at pos
	</string>
	<string name="LSLTipText_llGetParcelDetails">
list llGetParcelDetails(vector pos, list params)
Returns the parcel details specified in params for the parcel at pos.
Params is one or more of: PARCEL_DETAILS_NAME, _DESC, _OWNER, _GROUP, _AREA, _ID, _SEE_AVATARS
	</string>
	<string name="LSLTipText_llSetLinkPrimitiveParams">
llSetLinkPrimitiveParams(integer linknumber, list rules)
Sets primitive parameters for linknumber based on rules
	</string>
	<string name="LSLTipText_llSetLinkTexture">
llSetLinkTexture(integer linknumber, string texture, integer face)
Sets the texture of face for a task that exists in the link chain at linknumber
	</string>
	<string name="LSLTipText_llStringTrim">
string llStringTrim(string src, integer trim_type)
Trims the leading and/or trailing white spaces from a string.
trim_type can be STRING_TRIM, STRING_TRIM_HEAD or STRING_TRIM_TAIL.
	</string>
	<string name="LSLTipText_llRegionSay">
llRegionSay(integer channel, string msg)
Broadcasts msg on channel (not 0) that can be heard anywhere in the region by a script listening on channel
	</string>
	<string name="LSLTipText_llGetObjectDetails">
list llGetObjectDetails(key id, list params)
Returns the object details specified in params for the object with key id.
Params are OBJECT_NAME, _DESC, _POS, _ROT, _VELOCITY, _OWNER, _GROUP, _CREATOR
	</string>
	<string name="LSLTipText_llSetClickAction">
llSetClickAction(integer action)
Sets the action performed when a prim is clicked upon
	</string>
	<string name="LSLTipText_llGetRegionAgentCount">
integer llGetRegionAgentCount()
Returns the number of avatars in the region
	</string>
	<string name="LSLTipText_llTextBox">
llTextBox(key avatar, string message, integer chat_channel)
Shows a dialog box on the avatar&apos;s screen with the message.
It contains a text box for input, and if entered that text is chatted on chat_channel.
	</string>
	<string name="LSLTipText_llGetAgentLanguage">
string llGetAgentLanguage(key avatar)
Returns the language code of the preferred interface language of the avatar
	</string>
	<string name="LSLTipText_llDetectedTouchUV">
vector llDetectedTouchUV(integer index)
Returns the u and v coordinates in the first two components of a vector, for the texture coordinates where the prim was touched in a triggered touch event
	</string>
	<string name="LSLTipText_llDetectedTouchFace">
integer llDetectedTouchFace(integer index)
Returns the index of the face where the avatar clicked in a triggered touch event
	</string>
	<string name="LSLTipText_llDetectedTouchPos">
vector llDetectedTouchPos(integer index)
Returns the position where the object was touched in a triggered touch event
	</string>
	<string name="LSLTipText_llDetectedTouchNormal">
vector llDetectedTouchNormal(integer index)
Returns the surface normal for a triggered touch event
	</string>
	<string name="LSLTipText_llDetectedTouchBinormal">
vector llDetectedTouchBinormal(integer index)
Returns the surface binormal for a triggered touch event
	</string>
	<string name="LSLTipText_llDetectedTouchST">
vector llDetectedTouchST(integer index)
Returns the s and t coordinates in the first two components of a vector, for the surface coordinates where the prim was touched in a triggered touch event
	</string>
	<string name="LSLTipText_llSHA1String">
string llSHA1String(string src)
Returns a string of 40 hex characters that is the SHA1 security Hash of src
	</string>
	<string name="LSLTipText_llGetFreeURLs">
integer llGetFreeURLs()
Returns the number of available URLs for the current script
	</string>
	<string name="LSLTipText_llRequestURL">
key llRequestURL()
Requests one HTTP:// url for use by this object.
An http_request event is triggered with the results.
	</string>
	<string name="LSLTipText_llRequestSecureURL">
key llRequestSecureURL()
Requests one HTTPS:// (SSL) url for use by this object.
An http_request event is triggered with the results.
	</string>
	<string name="LSLTipText_llReleaseURL">
llReleaseURL(string url)
Releases the specified URL, it will no longer be usable
	</string>
	<string name="LSLTipText_llHTTPResponse">
llHTTPResponse(key request_id, integer status, string body)
Responds to request_id with status and body
	</string>
	<string name="LSLTipText_llGetHTTPHeader">
string llGetHTTPHeader(key request_id, string header)
Returns the value for header for request_id
	</string>
	<string name="LSLTipText_llSetPrimMediaParams">
integer llSetPrimMediaParams(integer face, list params)
Sets the media params for a particular face on an object. If media is not already on this object, add it.
List is a set of name/value pairs in no particular order.  Params not specified are unchanged, or if new media is added then set to the default specified.
The possible names are below, along with the types of values and what they mean.
	</string>
	<string name="LSLTipText_llGetPrimMediaParams">
list llGetPrimMediaParams(integer face, list params)
Returns the media params for a particular face on an object, given the desired list of names, in the order requested.
(Returns an empty list if no media exists on the face.)
	</string>
	<string name="LSLTipText_llClearPrimMedia">
integer llClearPrimMedia(integer face)
Clears (deletes) the media and all params from the given face.
	</string>
	<string name="LSLTipText_llSetLinkPrimitiveParamsFast">
llSetLinkPrimitiveParamsFast(integer linknumber, list rules)
Set primitive parameters for linknumber based on rules with no built-in script sleep.
	</string>
	<string name="LSLTipText_llGetLinkPrimitiveParams">
list llGetLinkPrimitiveParams(integer linknumber,list rules)
Get primitive parameters for linknumber based on rules.
	</string>
	<string name="LSLTipText_llLinkParticleSystem">
list llLinkParticleSystem(integer linknumber, list rules)
Creates a particle system based on rules.  Empty list removes particle system from object.
List format is [ rule1, data1, rule2, data2 . . . rulen, datan ].
	</string>
	<string name="LSLTipText_llSetLinkTextureAnim">
llSetLinkTextureAnim(integer link, integer mode, integer face, integer sizex, integer sizey, float start, float length, float rate)
Animate the texture on the specified face/faces of the specified prim/prims by setting the texture scale and offset.
	</string>
	<string name="LSLTipText_llGetLinkNumberOfSides">
integer llGetLinkNumberOfSides(integer link)
Returns the number of sides of the specified linked prim.
	</string>
	<string name="LSLTipText_llGetUsername">
string llGetUsername(key id)
Returns the single-word username of an avatar, if the avatar is in the current region, otherwise the empty string.
	</string>
	<string name="LSLTipText_llRequestUsername">
key llRequestUsername(key id)
Requests single-word username of an avatar.  When data is available the dataserver event will be raised.
	</string>
	<string name="LSLTipText_llGetDisplayName">
string llGetDisplayName(key id)
Returns the name of an avatar, if the avatar is in the current simulator, and the name has been cached, otherwise the same as llGetUsername. Use llRequestDisplayName if you absolutely must have the display name.
	</string>
	<string name="LSLTipText_llRequestDisplayName">
key llRequestDisplayName(key id)
Requests name of an avatar.  When data is available the dataserver event will be raised.
	</string>
	<string name="LSLTipText_llGetEnv">
string llGetEnv(string name)
Returns a string with the requested data about the region
	</string>
	<string name="LSLTipText_llCastRay">
list llCastRay(vector start, vector end, list params)
Returns a list consisting of the following three values for each hit: UUID, Link number, Hit position.
	</string>
	<string name="LSLTipText_llRegionSayTo">
llRegionSayTo(key target, integer channel, string msg)
Sends msg on channel (not DEBUG_CHANNEL) directly to prim or avatar target anywhere within the region.
	</string>
	<string name="LSLTipText_llGetSPMaxMemory">
integer llGetSPMaxMemory()
Returns the maximum used memory for the current script. Only valid after using PROFILE_SCRIPT_MEMORY. Non-mono scripts always use 16k.
	</string>
	<string name="LSLTipText_llGetUsedMemory">
integer llGetUsedMemory()
Returns the current used memory for the current script. Non-mono scripts always use 16k.
	</string>
	<string name="LSLTipText_llScriptProfiler">
llScriptProfiler(integer flags)
Enables or disables script profiling options. Currently only supports PROFILE_SCRIPT_MEMORY (mono only) and PROFILE_NONE.
MAY SIGNIFICANTLY REDUCE SCRIPT PERFORMANCE!
	</string>
	<string name="LSLTipText_llSetMemoryLimit">
integer llSetMemoryLimit(integer limit)
Request limit bytes to be reserved for this script.
Returns a success/failure flag (STATUS_OK when sucessful, another of the STATUS_* flags on failure) for whether the memory limit was set.
Only relevant for Mono-compiled scripts.
	</string>
	<string name="LSLTipText_llGetMemoryLimit">
integer llGetMemoryLimit()
Get the maximum memory a script can use.
Returns the integer amount of memory the script can use in bytes.
	</string>
	<string name="LSLTipText_llSetLinkMedia">
llSetLinkMedia(integer link, integer face, list params)
Set the media params for a particular face on linked prim.  List is a set of name/value pairs (in no particular order). The possible names are below, along with the types of values and what they mean.  If media is not already on this object, add it. Params not specified are unchanged, or if new media is added set to the default specified.
	</string>
	<string name="LSLTipText_llGetLinkMedia">
list llGetLinkMedia(integer link, integer face, list params)
Get the media params for a particular face on linked prim, given the desired list of names. Returns a list of values in the order requested.  Returns an empty list if no media exists on the face.
	</string>
	<string name="LSLTipText_llClearLinkMedia">
integer llClearLinkMedia(integer link, integer face)
Clears (deletes) the media and all params from the given face on linked prim(s).
	</string>
	<string name="LSLTipText_llSetContentType">
llSetContentType(key id, integer content_type)
Set the Internet media type of an LSL HTTP server response.
content_type may be one of CONTENT_TYPE_TEXT (default) "text/plain", or CONTENT_TYPE_HTML "text/html", only valid for embedded browsers on content owned by the person viewing. Falls back to "text/plain" otherwise.
	</string>
	<string name="LSLTipText_llLinkSitTarget">
llLinkSitTarget(integer link, vector offset, rotation rot)
Set the sit location for the linked prim(s). The sit location is relative to the prim's position and rotation.
	</string>
	<string name="LSLTipText_llAvatarOnLinkSitTarget">
key llAvatarOnLinkSitTarget(integer link)
If an avatar is sitting on the sit target, return the avatar&apos;s key, NULL_KEY otherwise
	</string>
	<string name="LSLTipText_llSetLinkCamera">
llSetLinkCamera(integer link, vector eye, vector at)
Sets the camera eye offset, and the offset that camera is looking at, for avatars that sit on the linked prim.
The two vector parameters are offsets relative to the object's center and expressed in local coordinates.
	</string>
	<string name="LSLTipText_llSetVelocity">
llSetVelocity(vector velocity, integer local)
Sets an objects velocity, in local coords if local == TRUE (if the script is physical)
	</string>
	<string name="LSLTipText_llSetAngularVelocity">
llSetAngularVelocity(vector angular_velocity, integer local)
Sets an objects angular velocity, in local coords if local == TRUE (if the script is physical)
	</string>
	<string name="LSLTipText_llSetPhysicsMaterial">
llSetPhysicsMaterial(integer flags, float gravity_multiplier, float restitution, float friction, float density )
Sets the requested attributes of the root object&apos;s physics material.
	</string>
	<string name="LSLTipText_llGetPhysicsMaterial">
llGetPhysicsMaterial() returns the gravity multiplier, restitution, friction, and density of the linkset as a list in that order.
	</string>
	<string name="LSLTipText_llGetMassMKS">
llGetMassMKS() returns the mass of the linkset in kilograms.
	</string>
	<string name="LSLTipText_llGenerateKey">
key llGenerateKey()
Return a unique generated key
	</string>
	<string name="LSLTipText_llSetKeyframedMotion">
llSetKeyframedMotion(list keyframes, list options)
Requests that a nonphysical object be keyframed according to keyframe list.
	</string>
	<string name="LSLTipText_llTransferLindenDollars">
key llTransferLindenDollars(key destination, integer amount)
Transfer amount of linden dollars ([CURRENCY]) from script owner to destination. Returns a key to a corresponding transaction_result event for the success of the transfer.
	</string>
	<string name="LSLTipText_llGetParcelMusicURL">
string llGetParcelMusicURL()
Gets the streaming audio URL for the parcel of land on which the object is located.
	</string>
	<string name="LSLTipText_llSetRegionPos">
integer llSetRegionPos(vector pos)
Sets the position anywhere within the region (if the object isn&apos;t physical)
	</string>
	<string name="LSLTipText_llNavigateTo">
llNavigateTo(vector point, list options)
For AI Character: Navigate to destination.
	</string>
	<string name="LSLTipText_llCreateCharacter">
llCreateCharacter(list options)
Convert linkset to AI Character which can navigate the world.
	</string>
	<string name="LSLTipText_llPursue">
llPursue(key target, list options)
For AI Character: Chase after a target.
	</string>
	<string name="LSLTipText_llWanderWithin">
llWanderWithin(vector center, vector dist, list options)
For AI Character: Wander within a specified volume.
	</string>
	<string name="LSLTipText_llFleeFrom">
llFleeFrom(vector source, float radius, list options)
For AI Character: Flee from a point.
	</string>
	<string name="LSLTipText_llPatrolPoints">
llPatrolPoints(list points, list options)
For AI Character: Patrol a list of points.
	</string>
	<string name="LSLTipText_llExecCharacterCmd">
llExecCharacterCmd(integer cmd, list options)
For AI Character: Execute a character command.
	</string>
	<string name="LSLTipText_llDeleteCharacter">
llDeleteCharacter()
Convert linkset from AI Character to Physics object.
	</string>
	<string name="LSLTipText_llUpdateCharacter">
llUpdateCharacter(list options)
Change the AI Character&apos;s settings.
	</string>
	<string name="LSLTipText_llEvade">
llEvade(key target, list options)
For AI Character: Evade a specified target.
	</string>
	<string name="LSLTipText_llGetClosestNavPoint">
list llGetClosestNavPoint(vector point, list options)
For AI Character: Get the closest navigable point to the point provided.
	</string>
	<string name="LSLTipText_llGetStaticPath">
list llGetStaticPath(vector start, vector end, float radius, list params)
Returns a list of position vectors indicating pathfinding waypoints between positions at start and end, for a character of a given radius. The waypoints this function returns are for the 'static' nav mesh, meaning that dynamic objects are ignored.
	</string>
<!-- Not in LL list yes -->
	<string name="LSLTipText_llManageEstateAccess" translate="false">
integer llManageEstateAccess(integer action, key id)
To add or remove agents from the estate's agent access or ban lists or groups from the estate's group access list.
Only works for objects owned by the Estate Owner or an Estate Manager.
Returns TRUE if successful and FALSE if throttled, on invalid action, on invalid or null id, or if object owner is not allowed to manage the estate.
'action' can be any of: ESTATE_ACCESS_ALLOWED_[AGENT/GROUP]_[ADD/REMOVE] or ESTATE_ACCESS_BANNED_AGENT_[ADD/REMOVE]
	</string>
	<string name="LSLTipText_llGetAgentList" translate="false">
list llGetAgentList(integer scope, list options)
Requests a list of agents currently in the region, limited by the scope parameter.
	</string>
	<string name="LSLTipText_llAttachToAvatarTemp" translate="false">
llAttachToAvatarTemp(integer attach_point)
Attaches the object to the avatar who has granted permission to the script, with the exception that the object will not create new inventory for the user, and will disappear on detach or disconnect.
	</string>
	<string name="LSLTipText_llTeleportAgent" translate="false">
llTeleportAgent(key avatar, string landmark, vector position, vector look_at)
Requests a teleport of avatar to a landmark stored in the object's inventory. If no landmark is provided (an empty string), the avatar is teleported to the location position in the current region. In either case, the avatar is turned to face the position given by look_at in local coordinates.
	</string>
	<string name="LSLTipText_llTeleportAgentGlobalCoords" translate="false">
llTeleportAgentGlobalCoords(key agent, vector global_coordinates, vector region_coordinates, vector look_at)
Teleports an agent to set of a region_coordinates within a region at the specified global_coordinates. The agent lands facing the position defined by look_at local coordinates.
A region's global coordinates can be retrieved using llRequestSimulatorData(region_name, DATA_SIM_POS)
	</string>
	<string name="LSLTipText_llGetSimStats" translate="false">
float llGetSimStats(integer stat_type)
Returns the value of a particular simulator statistic.
	</string>
	<string name="LSLTipText_llSetAnimationOverride">
llSetAnimationOverride(string anim_state, string anim)
Set the animation (anim) that will play for the given animation state (anim_state).
	</string>
	<string name="LSLTipText_llGetAnimationOverride">
string llGetAnimationOverride(string anim_state)
Returns a string that is the name of the animation that is being used for the specified animation state (anim_state).
	</string>
	<string name="LSLTipText_llResetAnimationOverride">
llResetAnimationOverride(string anim_state)
Resets the animation override of the specified animation state (anim_state) to the corresponding default value.
	</string>
	<string name="LSLTipText_llJson2List" translate="false">
list llJson2List(string json)
Converts the top level of the json string to a list.
	</string>
	<string name="LSLTipText_llList2Json" translate="false">
string llList2Json(string type, list values)
Converts either a strided list of key:value pairs to a JSON_OBJECT or a list of values to a JSON_ARRAY
	</string>
	<string name="LSLTipText_llJsonGetValue" translate="false">
string llJsonGetValue(string json, list specifiers)
Gets the value indicated by specifiers from the json string.
	</string>
	<string name="LSLTipText_llJsonSetValue" translate="false">
string llJsonSetValue(string json, list specifiers, string value)
Returns a new json string that is the json given with the value indicated by specifiers set to value.
	</string>
  <string name="LSLTipText_llJsonValueType" translate="false">
string llJsonValueType(string json, list specifiers)
Returns the type constant for the value in json indicated by specifiers.
  </string>
	<string name="LSLTipText_llReturnObjectsByID" translate="false">
integer llReturnObjectsByID(list objects)
Returns a list of objects by their IDs or an ERR_* flag.
  </string>
  <string name="LSLTipText_llReturnObjectsByOwner" translate="false">
integer llReturnObjectsByOwner(key owner, integer scope)
Returns all objects of a particular owner in the given scope or an ERR_* flag.
  </string>
  <string name="LSLTipText_llXorBase64" translate="false">
string llXorBase64(string str1, string str2)
Returns a string that is a Base64 XOR of Base64-formatted input strings.
  </string>
  <string name="LSLTipText_llScaleByFactor" translate="false">
integer llScaleByFactor(float scaling_factor)
Returns a string that is a Base64 XOR of Base64-formatted input strings.
Uniformly resizes the linkset by the given multiplicative scale factor (e.g. 2.0 to double the scale in all dimensions)
Returns TRUE if rescaling was successful or FALSE otherwise
This function only succeeds in non-physical objects
  </string>
  <string name="LSLTipText_llGetMinScaleFactor" translate="false">
float llGetMinScaleFactor()
Returns the minimum multiplicative scale factor which can be used by llScaleByFactor(); i.e. such that every prim in the linkset is &gt;=1cm in scale
  </string>
  <string name="LSLTipText_llGetMaxScaleFactor" translate="false">
float llGetMaxScaleFactor()
Returns the maximum multiplicative scale factor which can be used by llScaleByFactor(); i.e. such that every prim in the linkset is &lt;=64m and the resulting linkset meets the linkability requirements
  </string>
<!-- GOD FUNCTIONS -->
	<string name="LSLTipText_llGodLikeRezObject">
llGodLikeRezObject( key inventory, vector pos )
Rez directly off of UUID if owner has god-bit set.
(Requires god mode)
	</string>
	<string name="LSLTipText_llSetInventoryPermMask">
llSetInventoryPermMask( string item, integer mask, integer value )
Sets the given permission mask to the new value on the inventory item.
(Requires god mode)
	</string>
	<string name="LSLTipText_llSetObjectPermMask">
llSetObjectPermMask( integer mask, integer value )
Sets the given permission mask to the new value on the root object the task is attached to.
(Requires god mode)
	</string>

<!-- 
    Please keep LL-LSL above this section
    ** DATA SOURCES **
       OpenSim OS Functions:      \OpenSim\Region\ScriptEngine\Shared\Api\Interface\IOSSL_Api.cs
       WhiteCore AA Functions:    \WhiteCore\ScriptEngine\DotNetEngine\APIs\AA\AA_API.cs
       WhiteCore BOT Functions:   \WhiteCore\BotManager\Bot_API.cs
-->

	<string name="LSLTipText_osSetDynamicTextureURL">
osSetDynamicTextureURL(key dynamicID, string contentType, string url, string extraParams, integer timer )
Renders a web texture on the prim containing the script, and returns the UUID of the newly created texture.
	</string>
	<string name="LSLTipText_osSetDynamicTextureURLBlend">
osSetDynamicTextureURLBlend(key dynamicID, string contentType, string url, string extraParams, integer timer, integer alpha)
Allows for two dynamic textures to blend on the prim containing this script.
	</string>
	<string name="LSLTipText_osSetDynamicTextureURLBlendFace">
osSetDynamicTextureURLBlendFace(key dynamicID, string contentType, string url, string extraParams, integer blend, integer disp, integer timer, integer alpha, integer face)
Loads a web texture on a prim.
	</string>
	<string name="LSLTipText_osSetDynamicTextureData">
osSetDynamicTextureData(key dynamicID, string contentType, string data, string extraParams, integer timer)
Writes text and vector graphics onto a prim face.
	</string>
	<string name="LSLTipText_osSetDynamicTextureDataBlend">
osSetDynamicTextureDataBlend(key dynamicID, string contentType, string data, string extraParams, integer timer, integer alpha)
Allows for two dynamic textures to blend on the prim containing this script.
	</string>
	<string name="LSLTipText_osSetDynamicTextureDataBlendFace">
osSetDynamicTextureDataBlendFace(key dynamicID, string contentType, string data, string extraParams, integer blend, integer disp, integer timer, integer alpha, integer face)
Allows for two dynamic textures to blend on the specified face of the prim containing this script.
	</string>
	<string name="LSLTipText_osGetTerrainHeight">
osGetTerrainHeight(integer x, integer y)
Returns current terrain height as float at the given coordinates.
	</string>
	<string name="LSLTipText_osSetTerrainHeight">
osSetTerrainHeight(integer x, integer y, float val)
Sets terrain height at the given coordinates. Use osTerrainFlush() afterwards.
	</string>
	<string name="LSLTipText_osTerrainFlush">
osTerrainFlush()
Updates terrain data. Call this after you are done using osTerrainSetHeight.
	</string>
	<string name="LSLTipText_osRegionRestart">
osRegionRestart(float seconds)
Restart the current region in the specified number of seconds from now.
	</string>
	<string name="LSLTipText_osRegionNotice">
osRegionNotice(string msg)
Broadcasts a notification message to all agents on the current region.
	</string>
	<string name="LSLTipText_osConsoleCommand">
osConsoleCommand(string command)
Issues commands directly to the OpenSim server console.
	</string>
	<string name="LSLTipText_osSetParcelMediaURL">
osSetParcelMediaURL(string url)
Sets parcel media URL.
	</string>
	<string name="LSLTipText_osSetPrimFloatOnWater">
osSetPrimFloatOnWater(integer floatYN)
Make physical prims float at the water level, TRUE or FALSE.
	</string>
	<string name="LSLTipText_osSetParcelSIPAddress">
osSetParcelSIPAddress(string SIPAddress)
Sets parcel SIP Address for Voice.
	</string>
	<string name="LSLTipText_osGetAgentIP">
osGetAgentIP(key agent)
Returns the Avatars IP Address as a string.	Allows in-world tools be used to coordinate out of world network services that need access to client IP addresses.
Should *ONLY* be used by Region Server Owner.
	</string>
	<string name="LSLTipText_osGetAgents">
osGetAgents()
Returns a list of all avatars in the region in which the script is running.
	</string>
	<string name="LSLTipText_osTeleportAgent">
    POLYMORPHIC COMMAND
osTeleportAgent(key agent, integer regionX, integer regionY, vector position, vector lookat)
osTeleportAgent(key agent, string regionName, vector position, vector lookat)
osTeleportAgent(key agent, vector position, vector lookat)

Teleports the specified agent to a specified location in the region, the grid, or the hypergrid.
	</string>
	<string name="LSLTipText_osTeleportOwner">
    POLYMORPHIC COMMAND
osTeleportOwner(integer regionX, integer regionY, vector position, vector lookat)
osTeleportOwner(string regionName, vector position, vector lookat)
osTeleportOwner(vector position, vector lookat)

Teleports the owner of the object that holds the script to a specified location in the region, the grid, or the hypergrid.
	</string>
	<string name="LSLTipText_osAvatarPlayAnimation">
osAvatarPlayAnimation(key UUID, string animation)
Triggers animations contained within the same prim as the script. Does not need the target avatar's permission.
	</string>
	<string name="LSLTipText_osAvatarStopAnimation">
osAvatarStopAnimation(key UUID, string animation)
Stops specified animation on the specified avatar.
	</string>
	<string name="LSLTipText_osMovePen">
osMovePen(string drawList, integer x, integer y)
Moves the pen's location to the coordinates specified by the x and y parameters, without drawing anything.
	</string>
	<string name="LSLTipText_osDrawLine">
    POLYMORPHIC COMMAND
osDrawLine(string drawList, integer startX, integer startY, integer endX, integer endY)
osDrawLine(string drawList, integer endX, integer endY)
Draws a line on a dynamic texture.
	</string>
	<string name="LSLTipText_osDrawText">
osDrawText(string drawList, string text)
Renders text on a dynamic texture.
	</string>
	<string name="LSLTipText_osDrawEllipse">
osDrawEllipse(string drawList, integer width, integer height)
Draws an ellipse on a dynamic texture.
	</string>
	<string name="LSLTipText_osDrawRectangle">
osDrawRectangle(string drawList, integer width, integer height)
Draws a rectangle on a dynamic texture.
	</string>
	<string name="LSLTipText_osDrawFilledRectangle">
osDrawFilledRectangle(string drawList, integer width, integer height)
Draws a rectangle on a dynamic texture, and fills it with the current pen color.
	</string>
	<string name="LSLTipText_osDrawPolygon">
osDrawPolygon (string drawList, list x, list y)
Draws a polygon on a dynamic texture.
	</string>
	<string name="LSLTipText_osDrawFilledPolygon">
osDrawFilledPolygon (string drawList, list x, list y)
Draws a polygon on a dynamic texture, and fills it with the current pen color.
	</string>
	<string name="LSLTipText_osSetFontName">
osSetFontName(string drawList, string fontName)
Sets current font to be used by osDrawText. Font must exist on region server to display.
	</string>
	<string name="LSLTipText_osSetFontSize">
osSetFontSize(string drawList, integer fontSize)
Sets the font size to be used in osDrawText.
	</string>
	<string name="LSLTipText_osSetPenSize">
osSetPenSize(string drawList, integer penSize)
Sets the pen size (line thickness) that is to be used when drawing dynamic textures.
	</string>
	<string name="LSLTipText_osSetPenColor">
osSetPenColor(string drawList, string color)
Sets the pen color that is to be used when drawing dynamic textures.
	</string>
	<string name="LSLTipText_osSetPenCap">
osSetPenCap(string drawList, string direction, string type)
Apply a shape on the end of a line. This allows using arrow, diamond, round and flat caps.
	</string>
	<string name="LSLTipText_osDrawImage">
osDrawImage(string drawList, integer width, integer height, string imageUrl)
Retrieves an image specified by the imageUrl parameter and draws it at the specified height and width.
	</string>
	<string name="LSLTipText_osGetDrawStringSize">
vector osGetDrawStringSize(string contentType, string text, string fontName, integer fontSize)
Returns a vector containing the horizontal and vertical dimensions in pixels of the specified text.
	</string>
	<string name="LSLTipText_osSetStateEvents">
osSetStateEvents(integer events)
Used in the past as a workaround for a bug with Opensim, which has long since been fixed.
	</string>
	<string name="LSLTipText_osList2Double">
double osList2Double(list src, integer index)
Returns double-precision value from src at index.
	</string>
	<string name="LSLTipText_osSetRegionWaterHeight">
osSetRegionWaterHeight(float height)
Adjusts water height on region.
	</string>
	<string name="LSLTipText_osSetRegionSunSettings">
osSetRegionSunSettings(integer useEstateSun, integer sunFixed, float sunHour)
Changes the estate sun settings, then triggers a sun update
'sunFixed' TRUE to keep the sun stationary, FALSE to use global time
'sunHour' The sun hour that is desired, 0...24, 0 is sunrise.
	</string>
	<string name="LSLTipText_osSetEstateSunSettings">
osSetEstateSunSettings(integer sunFixed, float sunHour)
sunFixed = TRUE or FALSE, sunHour = 00.00 to 24.00.
	</string>
	<string name="LSLTipText_osGetCurrentSunHour">
float osGetCurrentSunHour()
Returns float value of current sun hour 0...24 0 is sunrise.
	</string>
	<string name="LSLTipText_osGetSunParam">
float osGetSunParam(string param)
Returns current float values for param, where param = day_length, year_length, day_night_offset, update_interval.
	</string>
	<string name="LSLTipText_osSetSunParam">
osSetSunParam(string param, float value)
Sets region's sun parameters, where param = day_length, year_length, day_night_offset, update_interval.
	</string>
	<string name="LSLTipText_osWindActiveModelPluginName">
string osWindActiveModelPluginName()
Returns the current working wind module installed
These are SimpleRandomWind or ConfigurableWind.
	</string>
	<string name="LSLTipText_osSetWindParam">
osSetWindParam(string plugin, string param, float value)
Sets value of param for plugin.  SimpleRandomWind plugin param = strength.
ConfigurableWind plugin params = avgStrength, avgDirection, varStrength, varDirection, rateChange.
	</string>
	<string name="LSLTipText_osGetWindParam">
float osGetWindParam(string plugin, string param)
Returns float value of param for plugin.  SimpleRandomWind plugin param = strength.
ConfigurableWind plugin params = avgStrength, avgDirection, varStrength, varDirection, rateChange.
	</string>
	<string name="LSLTipText_osParcelJoin">
osParcelJoin(vector start, vector end)
Where start = top corner, end = bottom corner.
Subdivides from start vector to end vector.  Z is ignored but must exist in syntax
	</string>
	<string name="LSLTipText_osParcelSubdivide">
osParcelSubdivide(vector start, vector end)
Where start = top corner, end = bottom corner.
Subdivides from start vector to end vector.  Z is ignored but must exist in syntax
	</string>
	<string name="LSLTipText_osSetParcelDetails">
osSetParcelDetails(vector pos, list rules)
Set parcel details at position x,y,x.
Rules = PARCEL_DETAILS_NAME, PARCEL_DETAILS_DESC, PARCEL_DETAILS_OWNER, PARCEL_DETAILS_GROUP
	</string>
	<string name="LSLTipText_osGetScriptEngineName">
string osGetScriptEngineName()
Returns the name of the script engine which is currently enabled on the server.
	</string>
	<string name="LSLTipText_osGetSimulatorVersion">
string osGetSimulatorVersion()
Returns current server version information as a string.
	</string>
	<string name="LSLTipText_osParseJSON">
string osParseJSON(string JSON)
Returns a deserialized JSON.
	</string>
	<string name="LSLTipText_osParseJSONNew">
string osParseJSON(string JSON)
Returns a deserialized JSON object.
	</string>
	<string name="LSLTipText_osMessageObject">
osMessageObject(key UUID, string message)
Sends string to object identified by UUID.
Receiving object requires a dataserver(key queryid, string data) in a contained script(s).
The queryid passed will be the id of the calling object.
	</string>
	<string name="LSLTipText_osMakeNotecard">
osMakeNotecard(string notecardName, list contents)
Write a Notecard contained in Prim with contents of list.
	</string>
	<string name="LSLTipText_osGetNotecardLine">
string osGetNotecardLine(string name, integer line)
Reads the requested notecard line and return its data as a string.
	</string>
	<string name="LSLTipText_osGetNotecard">
string osGetNotecard(string name)
Reads the entire notecard and return its data as a string.
	</string>
	<string name="LSLTipText_osGetNumberOfNotecardLines">
integer osGetNumberOfNotecardLines(string name)
Returns total number of lines in a notecard.
	</string>
	<string name="LSLTipText_osAvatarName2Key">
key osAvatarName2Key(string firstname, string lastname)
Returns the avatar's UUID from their firstname, lastname.
	</string>
	<string name="LSLTipText_osKey2Name">
string osKey2Name(key UUID)
Returns avatar name from their UUID key.
	</string>
	<string name="LSLTipText_osGetGridNick">
string osGetGridNick()
Returns the grid's nickname.
	</string>
	<string name="LSLTipText_osGetGridName">
string osGetGridName()
Returns the grid's name.
	</string>
	<string name="LSLTipText_osGetGridLoginURI">
string osGetGridLoginURI()
Returns the grid's LoginURI.
	</string>
	<string name="LSLTipText_osGetGridHomeURI">
string osGetGridHomeURI()
Returns the current grid URI.
	</string>
	<string name="LSLTipText_osGetGridCustom">
string osGetGridCustom(string key)
Returns the grid's Grid Info.
	</string>
	<string name="LSLTipText_osFormatString">
string osFormatString(string to_format, list strings)
Returns string. OsFormatString("My name is {0}, I'm located in {1}”, [llGetObjectName(), llGetRegionName()])
Where {num} parameters must be incremented for each list item, starting at zero, surrounded by curly brackets.
	</string>
	<string name="LSLTipText_osMatchString">
list osMatchString(string src, string pattern, integer start)
Returns list of matches for the pattern and its components inside the source string. The pattern is a regular expression.
Each match in the result is the string that matched and its position in the source.
	</string>
	<string name="LSLTipText_osReplaceString">
string osReplaceString(string src, string pattern, string replace, integer count, integer start)
Returns new string with replacements completed.
	</string>
	<string name="LSLTipText_osLoadedCreationDate">
string osLoadedCreationDate()
Returns Creation Date from meta data of OAR.
	</string>
	<string name="LSLTipText_osLoadedCreationTime">
string osLoadedCreationTime()
Returns Creation Time from meta data of OAR.
	</string>
	<string name="LSLTipText_osLoadedCreationID">
string osLoadedCreationID()
Returns creation ID from meta data of OAR. Can not be used to identify a machine.
	</string>
	<string name="LSLTipText_osGetLinkPrimitiveParams">
list osGetLinkPrimitiveParams(integer linknumber, list rules)
Returns prim params for the linkset prims specified by linknum.
If using linkset constants (e.g. LINK_SET, LINK_ALL_CHILDREN, etc), the requested params of each relevant prim are concatenated to the end of the list.
Otherwise, usage is identical to llGetPrimitiveParams().
	</string>
	<string name="LSLTipText_osIsNpc">
key osIsNpc(key NPC)
Returns TRUE if 'key' is an NPC (non-player-character).
	</string>
  <string name="LSLTipText_osNpcCreate">
    POLYMORPHIC
osNpcCreate(string firstname, string lastname, vector position, string notecard)
osNpcCreate(string firstname, string lastname, vector position, string notecard, integer options)
Creates an NPC (Non Player Character) clone named firstname lastname at position from a notecard containing the specifications.
	</string>
	<string name="LSLTipText_osNpcSaveAppearance">
osNpcSaveAppearance(key npc, string notecard)
Save NPC's current body part, clothing and attachments data to notecard in prim inventory.
The avatar must be present in the region when this function is invoked.
The baked textures for the avatar (necessary to recreate appearance) are saved permanently.)
	</string>
	<string name="LSLTipText_osNpcLoadAppearance">
osNpcLoadAppearance(key npc, string notecard)
Load NPC appearance from notecard.
This notecard must contain appearance data created with the save appearance function.
	</string>
	<string name="LSLTipText_osNpcGetPos">
vector osNpcGetPos(key npc)
Returns current position vector of the NPC.
	</string>
	<string name="LSLTipText_osNpcMoveTo">
osNpcMoveTo(key npc, vector position)
Moves an NPC to a location within the region.
	</string>
	<string name="LSLTipText_osNpcMoveToTarget">
osNpcMoveToTarget(key npc, vector target, integer options)
Moves NPC to given target over time.
Options = OS_NPC_FLY, OS_NPC_NO_FLY, OS_NPC_LAND_AT_TARGET, OS_NPC_RUNNING 
	</string>
	<string name="LSLTipText_osNpcGetOwner">
rotation osNpcGetOwner(key npc)
Returns the NPC owner UUID.
	</string>
	<string name="LSLTipText_osNpcGetRot">
rotation osNpcGetRot(key npc)
Gets the rotation of the avatar. Only the rotation around the Z plane in Euler rotation (horizontal rotation) has any meaning.
	</string>
	<string name="LSLTipText_osNpcSetRot">
osNpcSetRot(key npc, rotation rot)
Set the rotation of the NPC. Only setting the rotation in the Z plane in Euler rotation will have any meaningful effect (turning NPC facing direction).
Setting X or Y Euler values will result in the avatar rotating in an undefined manner.
	</string>
	<string name="LSLTipText_osNpcStopMoveToTarget">
osNpcStopMoveToTarget(key npc)
Stop a current move to a target.
	</string>
	<string name="LSLTipText_osNpcSay">
osNpcSay(key npc, string message)
Makes an NPC say something.
	</string>
	<string name="LSLTipText_osNpcSit">
osNpcSit(key npc, key primkey, integer options)
Makes NPC sit on prim/item.
	</string>
	<string name="LSLTipText_osNpcStand">
osNpcStand(key npc)
Makes NPC identified by UUID to stand.
	</string>
	<string name="LSLTipText_osNpcRemove">
osNpcRemove(key npc)
Removes an NPC.
	</string>
	<string name="LSLTipText_osNpcPlayAnimation">
osNpcPlayAnimation(key npc, string animation)
Makes NPC identified by key npc to play animation.
	</string>
	<string name="LSLTipText_osNpcStopAnimation">
osNpcStopAnimation(key npc, string animation)
Makes NPC identified by key npc stop playing animation.
	</string>
	<string name="LSLTipText_osOwnerSaveAppearance">
osOwnerSaveAppearance(string notecard)
Save Owner's current body part, clothing and attachments data to notecard in prim inventory.
The avatar must be present in the region when this function is invoked.
The baked textures for the avatar (necessary to recreate appearance) are saved permanently.)
	</string>
	<string name="LSLTipText_osAgentSaveAppearance">
osAgentSaveAppearance(key agentId, string notecard)
Save an Avatar's current body part, clothing and attachments data to specified notecard in prim inventory.
The avatar must be present in the region when this function is invoked.
The baked textures for the avatar (necessary to recreate appearance) are saved permanently.)
	</string>
	<string name="LSLTipText_osGetMapTexture">
key osGetMapTexture()
Returns the map texture UUID of current region.
	</string>
	<string name="LSLTipText_osGetRegionMapTexture">
key osGetRegionMapTexture(string regionName)
Returns the map texture UUID for the regionName requested.
	</string>
	<string name="LSLTipText_osGetRegionStats">
list osGetRegionStats()
Returns a list of float values representing a number of region statistics (21 of the values shown in the statistics bar of LL-based clients).
	</string>
	<string name="LSLTipText_osGetSimulatorMemory">
integer osGetSimulatorMemory()
Returns integer of current memory used by simulator instance.
	</string>
	<string name="LSLTipText_osKickAvatar">
osKickAvatar(string FirstName, string LastName, string alert)
Kicks avatar from region with an alert message.
	</string>
	<string name="LSLTipText_osSetSpeed">
osSetSpeed(key UUID, float SpeedModifier)
Multiplies the normal running, walking, and flying speed of the specified avatar.
	</string>
	<string name="LSLTipText_osCauseHealing">
osCauseHealing(key UUID, float healing)
Causes healing to specified avatar.
	</string>
	<string name="LSLTipText_osCauseDamage">
osCauseDamage(key UUID, float damage)
Causes damage to specified avatar.  Region must be damage enabled.
	</string>
	<string name="LSLTipText_osGetPrimitiveParams">
list osGetPrimitiveParams(key prim, list rules)
Gets the parameters of the primitive, specified by key.
	</string>
	<string name="LSLTipText_osSetPrimitiveParams">
osSetPrimitiveParams(key prim, list rules)
Sets primitive Params.
	</string>
	<string name="LSLTipText_osSetProjectionParams">
    POLYMORPHIC COMMAND
osSetProjectionParams(key prim. integer projection, key texture, float fov, float focus, float ambience)
osSetProjectionParams(integer projection, key texture, float fov, float focus, float ambience)
osSetProjectionParams(key prim, integer projection, key texture, float fov, float focus, float ambience)
	</string>
	<string name="LSLTipText_osGetAvatarList">
list osGetAvatarList()
Returns strided list of the UUID, position, and name of each avatar in the region, except the owner.
	</string>
	<string name="LSLTipText_osUnixTimeToTimestamp">
string osUnixTimeToTimestamp(integer unixtime)
Converts unixtime to an llGetTimeStamp() formated string.
	</string>
	<string name="LSLTipText_osGetGridGatekeeperURI">
string osGetGridGatekeeperURI()
returns the value of Gatekeeper in [GridService] section for both standalone and grids.
	</string>
	<string name="LSLTipText_osGetInventoryDesc">
string osGetInventoryDesc(string itemName)
returns the description of an inventory item contained within a prim.
	</string>
	<string name="LSLTipText_osForceAttachToAvatar">
Attach the object containing this script to the avatar that owns it without checking for PERMISSION_ATTACH
For example, osForceAttachToAvatar(ATTACH_CHEST)
	</string>
	<string name="LSLTipText_osForceDetachFromAvatar">
Detach the object containing this script from the avatar it is attached to without checking for PERMISSION_ATTACH
Nothing happens if the object is not attached
	</string>
	<string name="LSLTipText_osNpcSay">
osNpcSay(key npc, integer channel, string message)
	</string>
	<string name="LSLTipText_osNpcShout">
osNpcShout(key npc, integer channel, string message)
	</string>
	<string name="LSLTipText_osNpcWhisper">
osNpcWhisper(key npc, integer channel, string message)
	</string>
	<string name="LSLTipText_osSetTerrainTexture">
osSetTerrainTexture(integer level, key texture)
sets terrain texture to level specified using the specific UUID of the texture
	</string>
	<string name="LSLTipText_osSetTerrainTextureHeight">
osSetTerrainTextureHeight(int corner, float low, float high)
sets terrain texture in corner specified between the low and high levels.  Identical to setting textures in Region Manager within the viewer.
	</string>
	<string name="LSLTipText_osInviteToGroup">
integer osInviteToGroup(key agentId)
Returns True / False if user identified by agentID is successfully added to group. (Object containing script must be attached to a group)
	</string>
	<string name="LSLTipText_osEjectFromGroup">
integer osEjectFromGroup(key agentId)
Returns True / False if user identified by agentID is successfully removed from group. (Object containing script must be attached to a group)
	</string>
	<string name="LSLTipText_osForceAttachToAvatar">
osForceAttachToAvatar(integer attachPoint)
Attach the object containing this script to the avatar that owns it without asking for PERMISSION_ATTACH to the attachPoint. For example, ATTACH_CHEST.
	</string>
	<string name="LSLTipText_osForceAttachToAvatarFromInventory">
osForceAttachToAvatarFromInventory(string itemName, integer attachPoint)
Attach the inventory item in the object containing this script to the avatar that owns it without checking for PERMISSION_ATTACH
If itemName is not found in the inventory then a warning is sent to the owner.  An example of attachPoint is ATTACH_CHEST.
	</string>
	<string name="LSLTipText_osForceAttachToOtherAvatarFromInventory">
osForceAttachToOtherAvatarFromInventory(string rawAvatarId, string itemName, integer attachPoint) 
Attach an inventory item in the object containing this script to any avatar in the region without asking for PERMISSION_ATTACH.
rawAvatarId = The UUID of the avatar to which to attach.  itemName = The name of the item.  attachPoint = The attachment point. Example, ATTACH_CHEST.
	</string>
	<string name="LSLTipText_osNpcTouch">
osNpcTouch(key npcKey, key object_key, integer link_num)
Allows the NPC, npcKey, to touch the specified object, object_key, and its link number, link_num.
	</string>
	<string name="LSLTipText_osIsUUID">
osIsUUID(string thing)
Checks if thing is a UUID.  Returns 1 if thing is a valid UUID, 0 otherwise.
	</string>
	<string name="LSLTipText_osMin">
osMin(float A, float B)
Returns the smaller of two numbers. Wraps to system Math.Min()
	</string>
	<string name="LSLTipText_osMax">
osMax(float A, float B)
Returns the larger of two numbers. Wraps to system Math.Max()
	</string>
	<string name="LSLTipText_osGetRezzingObject">
osGetRezzingObject()
Get the key of the object that rezzed this object. Will return NULL_KEY if rezzed by agent or otherwise unknown source.
	</string>
	<string name="LSLTipText_osGetHealth">
osGetHealth(key avatar)
Returns avatar's health in float value.
	</string>
	<string name="LSLTipText_osSetContentType">
osSetContentType(key id, string type)
Sets the response type for an HTTP request/response.
	</string>
	<string name="LSLTipText_osGetNumberOfAttachments">
osGetNumberOfAttachments(key avatar, list attachmentPoints)
Returns a strided list of the specified attachmentPoints and the number of attachments on those points.  "avatar" = avatar UUID,  "attachmentPoints" = list of ATTACH_* constants.
	</string>
	<string name="LSLTipText_osMessageAttachments">
osMessageAttachments(key avatar, string message, list attachmentPoints, integer flags)
Sends message to avatar's attachments on the specified attachmentPoints. Behaves as osMessageObject(), without the sending script needing to know the attachment keys in advance.  "avatar" =avatar UUID,  "message" = message string. "attachmentPoints" = list of ATTACH_* constants, or -1 for all attachments. If -1 is specified and OS_ATTACH_MSG_INVERT_POINTS is present in flags, no action is taken.. "flags" = flags further constraining the attachments to deliver the message to.
	</string>
	<string name="LSLTipText_osDropAttachment">
osDropAttachment()
Attempts to drop an attachment to the ground.
	</string>
	<string name="LSLTipText_osDropAttachmentAt">
osDropAttachmentAt(vector pos, rotation rot)
Attempts to drop an attachment at the specified coordinates.  "pos" = vector position "rot" = rotation of object.
	</string>
	<string name="LSLTipText_osForceDropAttachment">
osForceDropAttachment()
Attempts to drop an attachment to the ground while bypassing the script permissions.
	</string>
	<string name="LSLTipText_osForceDropAttachmentAt">
osForceDropAttachmentAt(vector pos, rotation rot)
Attempts to drop an attachment at the specified coordinates while bypassing the script permissions.  "pos" = vector position "rot" = rotation of object.
	</string>
	<string name="LSLTipText_osListenRegex">
osListenRegex(integer channelID, string name, string ID, string msg, integer regexBitfield)
Identical to llListen except for a bitfield which indicates which string parameters should be parsed as regex patterns.  Params = integer channelID, string name, string ID, string msg, integer regexBitfield.  Where regexBitfield = OS_LISTEN_REGEX_NAME or OS_LISTEN_REGEX_MESSAGE.
	</string>
	<string name="LSLTipText_osRegexIsMatch">
osRegexIsMatch(string input, string pattern)
Wraps to bool Regex.IsMatch(string input, string pattern)
string input = string to test for match
string pattern = string to use as pattern
returns boolean TRUE/FALSE.
	</string>
	<string name="LSLTipText_osForceCreateLink">
osForceCreateLink(key target, integer parent)
Link the script's object with target, without requiring link permissions.
	</string>
	<string name="LSLTipText_osForceBreakLink">
osForceBreakLink(integer link)
De-links the prim with the given link number in a linked set, without requiring link permissions.
	</string>
	<string name="LSLTipText_osForceBreakAllLinks">
osForceBreakAllLinks()
De-links all prims in a link set, without requiring link permissions.
	</string>
	<string name="LSLTipText_osGetRegionSize">
vector osGetRegionSize()
Returns the size of the region in metres.
	</string>
	<string name="LSLTipText_osGetPhysicsEngineType">
string osGetPhysicsEngineType()
Returns a string containing the name of the Physics Engine.
	</string>
	<string name="LSLTipText_cmSetWindlightScene">
cmSetWindlightScene(list rules)
Set the current WindLight scene. Estate managers and owners only.
(Reguires LightShare Enabled Viewer)
	</string>
	<string name="LSLTipText_cmSetWindlightSceneTargeted">
cmSetWindlightSceneTargeted(list rules, key target)
Set the current WindLight scene directed at a specific avatar. Estate managers and owners only.
(Reguires LightShare Enabled Viewer)
	</string>
	<string name="LSLTipText_cmGetWindlightScene">
list cmGetWindlightScene(list rules)
Get the current LightShare settings.
(Reguires LightShare Enabled Viewer)
	</string>
	<string name="LSLTipText_lsSetWindlightScene">
lsSetWindlightScene(list rules)
Set the current WindLight scene. Estate managers and owners only.
(Reguires LightShare Enabled Viewer)
	</string>
	<string name="LSLTipText_lsSetWindlightSceneTargeted">
lsSetWindlightSceneTargeted(list rules, key target)
Set the current WindLight scene directed at a specific avatar. Estate managers and owners only.
(Reguires LightShare Enabled Viewer)
	</string>
	<string name="LSLTipText_lsGetWindlightScene">
list lsGetWindlightScene(list rules)
Get the current WindLight settings.
(Reguires LightShare Enabled Viewer)
	</string>
<!-- WhiteCore OSSL-Functions  (unique to WhiteCore Only)  'osReturnObject', 'osReturnObjects', 'osShutDown', 'osaddAgentToGroup', 'osRezObject',
   WhiteCore aaFunctions (\WhiteCore\ScriptEngine\DotNetEngine\APIs\AA\AA_Api.cs)
   WhiteCore botFunctions (\WhiteCore\BotManager\Bot_Api.cs)
-->
	<string name="LSLTipText_osReturnObject">
osReturnObject(key userID)
Returns object to specified avatars UUID.
	</string>
	<string name="LSLTipText_osReturnObjects">
osReturnObjects(float Parameter)
Returns group of objects. Parameter's are numeric, values are owner objects = 0, everyone except owner objects = 1, group objects = 2.
	</string>
	<string name="LSLTipText_osShutDown">
osShutDown()
Shut's down current Simulator.  Authorized Admin Only by config.
	</string>
	<string name="LSLTipText_osAddAgentToGroup">
osAddAgentToGroup(key avatarID, string group_name, string role_name)
Adds an avatar to a group.  Where group_name = name of the target group, role_name = role to assign within the group.
	</string>
	<string name="LSLTipText_osRezObject">
osRezObject(string inventory, vector position, vector velocity, rotation rot, integer param, integer isRezAtRoot, integer doRecoil, integer SetDieAtEdge, integer CheckPos)
Where inventory = object to rez.  Position = vector to rez object.  Velocity = initial velocity.  Rot = initial rotation.  Param = onrez event.
IzAtRoot = TRUE/FALSE flag changes llRezAtRoot to llRezObject.  doRecoil =TRUE/FALSE to push avatar.  SetDieAtEdge = TRUE/FALSE for rezzed object to die at edge of region.
CheckPos = TRUE/FALSE enable/disable 10m rez limit.
	</string>
	<string name="LSLTipText_aaSetCloudDensity">
aaSetCloudDensity(float density)
AaSetCloudDensity(0.5)  Where float density values are 0.0 =  no cloud to 1.0 = 100% cloud.
	</string>
	<string name="LSLTipText_aaUpdateDatabase">
aUpdateDatabase(string Key, string value, string token)
Where Key = database field name, xmlDataToPutIntoTheDatabase = serialized XML data,  Token = data-password
	</string>
	<string name="LSLTipText_aaQueryDatabase">
aaQueryDatabase(string Key, string Token)
Returns a list with first value is the token, the second the Key, and the third the value
Where Key = database field name, Token = data-password
	</string>
	<string name="LSLTipText_aaDeserializeXMLValues">
aaDeserializeXMLValues(string xmlData)
Returns a list of Values from XML data. Where xmlData = xml formatted data Values.
	</string>
	<string name="LSLTipText_aaDeserializeXMLKeys">
aaDeserializeXMLKeys(string xmlData)
Returns a list of keys from XML data. Where xmlData = xml formatted data keys.
	</string>
	<string name="LSLTipText_aaSetConeOfSilence">
aaSetConeOfSilence(float radius)
Where radius = metres radius from centre of scripted item.  This creates an area that sounds can only be heard by the people within the area(radius) and not heard outside and visa-versa.
	</string>
	<string name="LSLTipText_aaSerializeXML">
aaSerializeXML(list keys, list values)
Returns xml formatted string of the keys and values.  Where keys = list of keys in the database, values = fields to retrieve from database.
	</string>
	<string name="LSLTipText_aaGetTeam">
aaGetTeam(key uuid)
Returns a string of avatars team name.  Where uuid = avatar key.
	</string>
	<string name="LSLTipText_aaGetHealth">
aaGetHealth(key uuid)
Returns float value (0.0 to 100.0) of current health.  Where uuid = avatar key.
	</string>
	<string name="LSLTipText_aaJoinCombat">
aaJoinCombat(key uuid)
Where uuid = avatar key.  If (PERMISSION_COMBAT == PERMISSION_COMBAT) and permission is granted then join combat.
	</string>
	<string name="LSLTipText_aaLeaveCombat">
aaLeaveCombat(key uuid)
Where uuid = avatar key.
	</string>
	<string name="LSLTipText_aaJoinCombatTeam">
aaJoinCombatTeam(key uuid, string team)
Where uuid = key of avatar, team = string of the team name.
	</string>
	<string name="LSLTipText_aaRequestCombatPermission">
aaRequestCombatPermission(key ID)
Where ID = avatar uuid.  Requests target avatar for Permissions to enter into combat mode.
Raises a run_time_permissions event. (PERMISSION_COMBAT == PERMISSION_COMBAT).
	</string>
	<string name="LSLTipText_aaThawAvatar">
aaThawAvatar(key ID)
Where ID = avatar uuid. If combat permission are granted then avatar can be un-frozen (movement re-enabled).
	</string>
	<string name="LSLTipText_aaFreezeAvatar">
aaFreezeAvatar(key ID)
Where ID = avatar uuid. If combat permission are granted then avatar can be frozen (no movement).
	</string>
	<string name="LSLTipText_aaGetTeamMembers">
aaGetTeamMembers(string team)
Return a list of team members.  Where team = string of team name.
	</string>
	<string name="LSLTipText_aaGetLastOwner">
    POLYMORPHIC FUNCTION.
aaGetLastOwner(string PrimID)  returns last owner UUID of PrimID where PrimID = uuid of prim.
AaGetLastOwner()  returns last owner uuid of prim containg script.
	</string>
	<string name="LSLTipText_aaSayDistance">
aaSayDistance(integer channelID, float Distance, string text)
Where channelID = channel to say on, Distance = float in meters  for distance to say, text = string to say.
	</string>
	<string name="LSLTipText_aaSayTo">
aaSayTo(key userID, string text)
Where userID = avatar key, text = string msg.  Similar to llOwnerSay but can be directly targeted to an avatar.
	</string>
	<string name="LSLTipText_aaGetWalkDisabled">
aaGetWalkDisabled(key ID)
Returns integer of TRUE or FALSE for specifid ID.  Where ID = avatar uuid.
	</string>
	<string name="LSLTipText_aaSetWalkDisabled">
aaSetWalkDisabled(key ID, integer Value)
Where ID = avatar uuid, Value = TRUE or FALSE. If PERMISSION_COMBAT is accepted, this disables walk, forcing avatar to fly.
	</string>
	<string name="LSLTipText_aaGetFlyDisabled">
aaGetFlyDisabled(key ID)
Returns integer of TRUE or FALSE for specifid ID. Where ID = avatar uuid.
	</string>
	<string name="LSLTipText_aaSetFlyDisabled">
aaSetFlyDisabled(key ID, integer Value)
Where ID = avatar uuid, Value = TRUE or FALSE. If PERMISSION_COMBAT is accepted, this disables flying, forcing avatar to walk.
	</string>
	<string name="LSLTipText_aaAvatarFullName2Key">
aaAvatarFullName2Key(string FullName)
Returns the avatar uuid from their fullname.  Where FullName = "Firstname Lastname”.
	</string>
	<string name="LSLTipText_aaRaiseError">
aaRaiseError(string message)
Allows you to have errors that end the execution of the event and fire another event in the script.
	</string>
	<string name="LSLTipText_aaGetText">
aaGetText()
Returns a string of the hover text of an object.
	</string>
	<string name="LSLTipText_aaGetTextColor">
aaGetTextColor()
Returns the hovertext color in rotation. Use Ex: rotation color = aaGetTextColor() to separate color.x, color.y, color.z, color.s  Where s = value of alpha in llSetText.
	</string>
	<string name="LSLTipText_aaSetEnv">
aaSetEnv(string EnvName, list Value)
Sets environment values.  Where EnvName = ENABLE_GRAVITY, GRAVITY_FORCE_X, GRAVITY_FORCE_Y, GRAVITY_FORCE_Z, ADD_GRAVITY_POINT, ADD_GRAVITY_FORCE, START_TIME_REVERSAL_SAVING,
STOP_TIME_REVERSAL_SAVING, START_TIME_REVERSAL, STOP_TIME_REVERSAL.
	</string>
	<string name="LSLTipText_aaGetIsInfiniteRegion">
aaGetIsInfiniteRegion()
Returns TRUE or FALSE if region is an infinite region.
	</string>
	<string name="LSLTipText_aaSetCharacterStat">
aaSetCharacterStat( ID, StatName, statValue)
Sets Character Stats.  Where ID = avatar uuid, StatName = stat to change, statValue the value to change it to.
	</string>
	<string name="LSLTipText_aaAllRegionInstanceSay">
aaAllRegionInstanceSay(integer channelID, string text)
	</string>
	<string name="LSLTipText_aaWindlightGetDayCycle">
aaWindlightGetDayCycle()
Returns a List of settings
	</string>
	<string name="LSLTipText_aaWindlightAddDayCycleFrame">
aaWindlightAddDayCycleFrame(float dayCyclePosition, integer dayCycleFrameToCopy)
Returns TRUE / FALSE on success status
	</string>
	<string name="LSLTipText_aaWindlightRemoveDayCycleFrame">
aaWindlightRemoveDayCycleFrame(int dayCycleFrame)
Returns TRUE / FALSE on success status
	</string>
	<string name="LSLTipText_aaWindlightSetScene">
aaWindlightSetScene(list list)
aaWindlightSetScene(integer dayCycleIndex, list list)
Returns TRUE/FALSE on success
	</string>
	<string name="LSLTipText_aaWindlightGetScene">
aaWindlightGetScene(list rules)
aaWindlightGetScene(integer dayCycleKeyFrame, list rules)
Returns a list
	</string>
	<string name="LSLTipText_aaWindlightGetSceneIsStatic">
aaWindlightGetSceneIsStatic()
Returns TRUE / FALSE
	</string>
	<string name="LSLTipText_aaWindlightGetSceneDayCycleKeyFrameCount">
aaWindlightGetSceneDayCycleKeyFrameCount()
Returns integer value
	</string>
	<string name="LSLTipText_botGetWaitingTime">
botGetWaitingTime(integer waitTime)
Returns waitTime as vector.
	</string>
	<string name="LSLTipText_botSetMap">
botSetMap(key keyOfBot, list positions, list movementType, integer flags)
keyOfBot = bot uuid, positions = list of position vectors, movementType = corresponding list of move modes:  0 – walk, 1 – fly,
flags = BOT_FOLLOW_FLAG_NONE and BOT_FOLLOW_FLAG_INDEFINITELY.
	</string>
	<string name="LSLTipText_botCreateBot">
botCreateBot(string FirstName, string LastName, key idToClone, vector startPos)
Where FirstName and LastName = strings for new bot name.  idToClone = uuid of prebuild avatar to clone OR another existing avatar.  startPos = vector of starting position on region.
	</string>
	<string name="LSLTipText_botRemoveBot">
botRemoveBot(key botID)
Where botID = uuid of bot.  Removes bot identified by botID.
	</string>
	<string name="LSLTipText_botPauseMovement">
botPauseMovement(key botID)
Where botID = bot uuid.  Pauses bot at current position.
	</string>
	<string name="LSLTipText_botResumeMovement">
botResumeMovement(key botID)
Where botID = bot uuid.  Resumes bot movement.
	</string>
	<string name="LSLTipText_botFollowAvatar">
botFollowAvatar(key botID, string avName, float startFollowDistance, float endFollowDistance)
Where botID = bot uuid.  AvName = sting of avatar name OR avatar uuid.  StartFollowDistance = distance to start following from.  EndFollowDistance = distance to stop following avatar.
	</string>
	<string name="LSLTipText_botStopFollowAvatar">
botStopFollowAvatar(key botID)
Where botID = bot uuid.  Stops bot from following an avatar.
	</string>
	<string name="LSLTipText_botSendChatMessage">
botSendChatMessage(key botID, string message, integer channel, integer sayType)
Where  botID = bot uuid.  Message = string msg.  Channel = channel to speak on.  SayType = (0=whisper, 1=say, 2=shout).
	</string>
	<string name="LSLTipText_botSendIM">
botSendIM(string bot, string user, string message)
Send IM to bot.
	</string>
	<string name="LSLTipText_botSetShouldFly">
botSetShouldFly(key botID, integer ShouldFly)
Where botID = bot uuid.  ShouldFly = TRUE/FALSE.  Enables or disables flight mode.
	</string>
	<string name="LSLTipText_botSitObject">
botSitObject(key botID, key objectID, vector offset)
Where botID = bot uuid,  objectID = uuid of object to sit on,  offset = Vector for sit position (note that VECTOR_ZERO = default sit pos).
	</string>
	<string name="LSLTipText_botStandUp">
botStandUp(key botID)
Where botID = bot uuid.  Command bot to stand up.
	</string>
	<string name="LSLTipText_botTouchObject">
botTouchObject(key botID, key objectID)
Where botID = bot uuid,  objectID = object uuid.  Causes bot to touch object identified.
	</string>
	<string name="LSLTipText_botAddTag">
botAddTag(key botID, string tag)
Where botID = bot uuid,  tag = string tag over bot.
	</string>
	<string name="LSLTipText_botGetBotsWithTag">
botGetBotsWithTag(string tag)
Where tag = tag string to match.  Return a list of bot UUID's in region with the matching tag.
	</string>
	<string name="LSLTipText_botRemoveBotsWithTag">
botRemoveBotsWithTag(string tag)
Where tag = tag string to match.  Removes bot's matching the tag.
	</string>
<!-- *** END OF OpenSimulator & WhiteCore syntax section *** -->

	<!-- Strings needed by drop targets -->
	<string name="CurrentlyNotSet">No definido actualmente </string>
	<string name="CurrentlySetTo">Actualmente definido a: [ITEM]</string>
	<string name="CurrentlySetToAnItemNotOnThisAccount">Definido para un artículo que no está en esta cuenta</string>
	<string name="NotLoggedIn">Desconectado,  visualización de ítem no disponible</string>

    <!-- Non-standard LLChat strings -->
	<string name="ScriptCounting">Contando scripts, espera por favor...</string>
    <string name="ScriptCountAvatar">Contados [SCRIPTS] scripts en [OBJECTS] Accesorios en [NAME]. ([RUNNING] ejecutándose, [MONO] mono.)</string>
    <string name="ScriptCountObject">Contados [SCRIPTS] scripts en [OBJECTS] objetos. ([RUNNING] ejecutándose, [MONO] mono.)</string>
    <string name="ScriptDeleteObject">Borrados [SCRIPTS] scripts en [OBJECTS] objetos.</string>
    <string name="took_a_snapshot">ha tomado una fotografía</string>
	
    <!-- Radar Alert Strings -->
    <string name="radar_alert_template">[NAME] [ACTION] [RANGE].</string>
    <!-- [ACTION] -->
    <string name="has_triggered_your_avatar_age_alert">ha disparado el Alerta de Edad de Avatar</string>
    <string name="has_entered">ha entrado en</string>
	<string name="has_entered_flood">detectado en</string>
    <string name="has_left">se ha retirado de</string>
	<string name="has_left_flood">fuera del radar para</string>
    <!-- [RANGE] -->
    <string name="the_sim">este sim</string>
    <string name="draw_distance">la distancia de dibujo</string>
    <string name="shout_range">la distancia de grito</string>
    <string name="chat_range">la distancia de chat</string>
	 
	<!-- Avatar busy/away mode -->
	<string name="AvatarSetNotAway">No ausente</string>
	<string name="AvatarSetAway">Ausente</string>
	<string name="AvatarSetNotBusy">No Ocupado</string>
	<string name="AvatarSetBusy">Ocupado</string>

	<!-- Wearable List-->
	<string name="NewWearable">Nueva/o [WEARABLE_ITEM]</string>
  
	<!-- Wearable Types -->
	<string name="shape">Forma</string>
	<string name="skin">Piel</string>
	<string name="hair">Pelo</string>
	<string name="eyes">Ojos</string>
	<string name="shirt">Camisa</string>
	<string name="pants">Pantalones</string>
	<string name="shoes">Zapatos</string>
	<string name="socks">Medias</string>
	<string name="jacket">Chaqueta</string>
	<string name="gloves">Guantes</string>
	<string name="undershirt">Camiseta</string>
	<string name="underpants">Ropa Interior</string>
	<string name="skirt">Falda</string>
	<string name="alpha">Alfa</string>
	<string name="tattoo">Tatuaje</string>
	<string name="universal">Universal</string>	
	<string name="physics">Física</string>
	<string name="invalid">inválido</string>
	<string name="unknown">Desconocido</string>
	<string name="none">ninguno</string>

	<!-- Not Worn Wearable Types -->
	<string name="shirt_not_worn">Camisa no puesta</string>
	<string name="pants_not_worn">Pantalones no puestos</string>
	<string name="shoes_not_worn">Zapatos no puestos</string>
	<string name="socks_not_worn">Medias no puestas</string>
	<string name="jacket_not_worn">Chaqueta no puesta</string>
	<string name="gloves_not_worn">Guantes no puestos</string>
	<string name="undershirt_not_worn">Camiseta no puesta</string>
	<string name="underpants_not_worn">Ropa Interior no puesta</string>
	<string name="skirt_not_worn">Falda no puesta</string>
	<string name="alpha_not_worn">Alfa no puesta</string>
	<string name="tattoo_not_worn">Tatuaje no puesto</string>
	<string name="universal_not_worn">Universal no puesta</string>
	<string name="physics_not_worn">Física no puesta</string>
	<string name="invalid_not_worn">inválido</string>

	<!-- Create new wearable of the specified type -->
	<string name="create_new_shape">Crear nueva forma</string>
	<string name="create_new_skin">Crear nueva piel</string>
	<string name="create_new_hair">Crear nuevo pelo</string>
	<string name="create_new_eyes">Crear nuevos ojos</string>
	<string name="create_new_shirt">Crear nueva camisa</string>
	<string name="create_new_pants">Crear nuevos pantalones</string>
	<string name="create_new_shoes">Crear nuevos zapatos</string>
	<string name="create_new_socks">Crear nuevas medias</string>
	<string name="create_new_jacket">Crear nueva chaqueta</string>
	<string name="create_new_gloves">Crear nuevos guantes</string>
	<string name="create_new_undershirt">Crear nueva ropa interior</string>
	<string name="create_new_underpants">Create new underpants</string>
	<string name="create_new_skirt">Crear nueva falda</string>
	<string name="create_new_alpha">Crear nueva capa alfa</string>
	<string name="create_new_tattoo">Crear nuevo tatuaje</string>
	<string name="create_new_universal">Crear nueva capa universal</string>
	<string name="create_new_physics">Crear nueva física</string>
	<string name="create_new_invalid">inválido</string>

  <!-- Wearable List-->
  <string name="NewWearable">Nueva/o [WEARABLE_ITEM]</string>


	<!-- LLGroupNotify -->
	<!-- used in the construction of a Group Notice blue dialog box, buttons, tooltip etc. Seems to be no longer utilized by code in Viewer 2.0 -->
	<string name="next">Siguiente</string>
	<string name="ok">OK</string>
	<string name="GroupNotifyGroupNotices">Avisos de Grupo</string>
	<string name="GroupNotifyBy">
por [NAME]
en [GROUP]
</string>
	<string name="GroupNotifyAttached">Anexado:</string>
	<string name="GroupNotifyViewPastNotices">Ver noticias anteriores o bien optar por no recibir estos mensajes aquí.</string>
	<string name="GroupNotifyOpenAttachment">Abrir Adjunto</string>
	<string name="GroupNotifySaveAttachment">Guardar Adjunto</string>

	<!-- body parts -->
	<string name="BodyPartsRightArm">Brazo Derecho</string>
	<string name="BodyPartsHead">Cabeza</string>
	<string name="BodyPartsLeftArm">Brazo Izquierdo</string>
	<string name="BodyPartsLeftLeg">Pierna Izqquierda</string>
	<string name="BodyPartsTorso">Torso</string>
	<string name="BodyPartsRightLeg">Pierna Derecha</string>
	<string name="BodyPartsEnhancedSkeleton">Esqueleto mejorado</string>
	<string name="BodyPartsWaist">Cintura</string>

	<!-- mouselook -->
	<string name="LeaveMouselook">Pulsa ESC para regresar a la vista del mundo</string>

	<!-- inventory -->
	<string name="InventoryNoMatchingItems">Elementos no hallados en el inventario.</string>
	<string name="MarketplaceNoMatchingItems">No se han encontrado artículos. Comprueba si has escrito correctamente la cadena de búsqueda y vuelve a intentarlo.</string>
	<string name="InventoryNoTexture">No tienes en tu inventario una copia de esta textura</string>
	<string name="MarketplaceURL">https://marketplace.[MARKETPLACE_DOMAIN_NAME]/</string>
	<string name="MarketplaceURL_CreateStore">http://community.secondlife.com/t5/English-Knowledge-Base/Selling-in-the-Marketplace/ta-p/700193#Section_.3</string>
	<string name="MarketplaceURL_Dashboard">https://marketplace.[MARKETPLACE_DOMAIN_NAME]/merchants/store/dashboard</string>
	<string name="MarketplaceURL_Imports">https://marketplace.[MARKETPLACE_DOMAIN_NAME]/merchants/store/imports</string>
	<string name="MarketplaceURL_LearnMore">https://marketplace.[MARKETPLACE_DOMAIN_NAME]/learn_more</string>
	<string name="InventoryOutboxNotMerchantTitle">Cualquiera puede vender ítems en el Mercado.</string>
	<string name="InventoryOutboxNotMerchantTooltip"></string>
	<string name="InventoryOutboxNotMerchant">Si quieres convertirte en un comerciante, tendrás que [[MARKETPLACE_CREATE_STORE_URL] crear una tienda en el Mercado].</string>
	<string name="InventoryOutboxNoItemsTitle">Tu Buzón de Salida está vacío.</string>
	<string name="InventoryOutboxNoItemsTooltip"></string>
	<string name="InventoryOutboxNoItems">Arrastra carpetas a esta zona y pulsa "Enviar al Mercado" para listarlos y ponerlos en venta en el [[MARKETPLACE_DASHBOARD_URL] mercado]</string>
	<string name="InventoryOutboxInitializingTitle">Inicializando el Mercado en Línea.</string>
	<string name="InventoryOutboxInitializingTooltip"></string>
	<string name="InventoryOutboxInitializing">Estamos accediendo a tu cuenta en la [[MARKETPLACE_CREATE_STORE_URL] Tienda del Mercado].</string>
	<string name="InventoryOutboxErrorTitle">Errores del Mercado en Línea.</string>
	<string name="InventoryOutboxErrorTooltip"></string>
	<string name="InventoryOutboxError">La [[MARKETPLACE_CREATE_STORE_URL] Tienda en el Mercado] está retornando errores</string>
	<string name="InventoryMarketplaceError">
		Se ha producido un error al abrir Artículos del Mercado.
Si sigues recibiendo el mismo mensaje, solicita ayuda al personal de asistencia de Second Life en http://support.secondlife.com
	</string>
	<string name="InventoryMarketplaceListingsNoItemsTitle">Tu carpeta Artículos del mercado está vacía.</string>
	<string name="InventoryMarketplaceListingsNoItemsTooltip"></string>
	<string name="InventoryMarketplaceListingsNoItems">
		Arrastra carpetas a esta sección para incluirlas en la lista de venta del [[MARKETPLACE_DASHBOARD_URL] Mercado].
	</string>

	<string name="Marketplace Validation Log"></string>
	<string name="Marketplace Validation Warning Stock">La carpeta de stock debe estar contenida en una carpeta de versión</string>
	<string name="Marketplace Validation Error Mixed Stock">: Error: todos los artículos de una carpeta de stock deben ser del mismo tipo y que no se puedan copiar</string>
	<string name="Marketplace Validation Error Subfolder In Stock">: Error: la carpeta de stock no puede contener subcarpetas</string>
	<string name="Marketplace Validation Warning Empty">: Atención: la carpeta no contiene ningún artículo</string>
	<string name="Marketplace Validation Warning Create Stock">: Atención: creando carpeta de stock</string>
	<string name="Marketplace Validation Warning Create Version">: Atención: creando la carpeta de versión</string>
	<string name="Marketplace Validation Warning Move">: Atención: moviendo artículos</string>
	<string name="Marketplace Validation Warning Delete">: Atención: se ha transferido el contenido de la carpeta a la carpeta de stock, y se eliminará la carpeta vacía</string>
	<string name="Marketplace Validation Error Stock Item">: Error: los artículos que no se pueden copiar deben estar contenidos en una carpeta de stock</string>
	<string name="Marketplace Validation Warning Unwrapped Item">: Atención: los artículos deben estar contenidos en una carpeta de versión</string>
	<string name="Marketplace Validation Error">: Error: </string>
	<string name="Marketplace Validation Warning">: Atención: </string>
	<string name="Marketplace Validation Error Empty Version">: Atención: la carpeta de versión debe contener al menos un artículo</string>
	<string name="Marketplace Validation Error Empty Stock">: Atención: la carpeta de stock debe contener al menos un artículo</string>

	<string name="Marketplace Validation No Error">No se han producido errores ni advertencias</string>
	<string name="Marketplace Error None">Sin errores</string>
	<string name="Marketplace Error Prefix">Error: </string>
	<string name="Marketplace Error Not Merchant">Para poder enviar objetos al mercado, debes registrarte como comerciante (es gratis).</string>
	<string name="Marketplace Error Not Accepted">No se puede mover el artículo a esa carpeta.</string>
	<string name="Marketplace Error Unsellable Item">Este artículo no se puede vender en el Mercado.</string>

	<string name="MarketplaceNoID">no Mkt ID</string>
	<string name="MarketplaceLive">en la lista</string>
	<string name="MarketplaceActive">activa</string>
	<string name="MarketplaceMax">máx</string>
	<string name="MarketplaceStock">stock</string>
	<string name="MarketplaceNoStock">existencias agotadas</string>
	<string name="MarketplaceUpdating">actualizando...</string>
	 
	<!-- use value="" because they have preceding spaces -->
	<string name="no_transfer" value=" (no transferible)"/>
	<string name="no_modify"   value=" (no modificable)"/>
	<string name="no_copy"     value=" (no copiable)"/>
	<string name="temporary"   value=" (temporal)"/>
	<string name="worn"        value=" (vestido)"/>
	<string name="locked" value=" (bloqueado)"/>
	<string name="link"        value=" (enlace)"/>
	<string name="broken_link" value=" (enlace roto)"/>
	<string name="LoadingContents">Cargando contenidos...</string>
	<string name="NoContents">Sin Contenido</string>
	<string name="WornOnAttachmentPoint" value=" (vestido en [ATTACHMENT_POINT])"/>
	<string name="LockedOnAttachmentPoint" value=" (bloqueado en [ATTACHMENT_POINT])"/>
	<string name="ActiveGesture" value="[GESLABEL] (activo)"/>

	<!-- Inventory permissions -->
	<string name="PermYes">Si</string>
	<string name="PermNo">No</string>
	
	<!-- Gestures labels -->
    <!-- use value="" because they have preceding spaces -->
    <string name="Chat Message"  value=" Chat : "/>
    <string name="Sound"         value=" Sonido : "/>
	<string name="Wait"          value=" --- Esperar : "/>
	<string name="AnimFlagStop"  value=" Detener Animación :    "/>
	<string name="AnimFlagStart" value=" Iniciar Animación :   "/>
	<string name="Wave"          value=" Onda "/>
	<string name="GestureActionNone" value="Nada"/>
	<string name="HelloAvatar"   value=" ¡Hola Avatar! "/>
	<string name="ViewAllGestures"  value="  Ver Todo &gt;&gt;"/>
	<string name="GetMoreGestures"  value="  Obtener Más &gt;&gt;"/>

	<!-- inventory filter -->
    <!-- use value="" because they have preceding spaces -->
	<string name="Animations"    value=" Animaciones,"/>
	<string name="Calling Cards" value=" Tarjetas de Visita,"/>
	<string name="Clothing"      value=" Ropa,"/>
	<string name="Gestures"      value=" Gestos,"/>
	<string name="Landmarks"     value=" Hitos,"/>
	<string name="Notecards"     value=" Notas,"/>
	<string name="Objects"       value=" Objetos,"/>
	<string name="Scripts"       value=" Scripts,"/>
	<string name="Sounds"        value=" Sonidos,"/>
	<string name="Textures"      value=" Texturas,"/>
	<string name="Snapshots"     value=" Fotos,"/>
	<string name="No Filters"    value="No "/>
	<string name="Since Logoff"  value=" - Desde Fin Sesión Anterior"/>
	<string name="Worn"          value=" - Vestido"/>

	<!-- inventory FVBridge -->
	<!--  This is used in llpanelinventory.cpp when constructing a context menu for an item for Sale  -->
	<string name="Buy">Comprar</string>
	<!-- Grid currency is appended automatically -->	
	<string name="Buyfor" value="Comprar para "/>
	
	<string name="Stone">Piedra</string>
	<string name="Metal">Metal</string>
	<string name="Glass">Vidrio</string>
	<string name="Wood">Madera</string>
	<string name="Flesh">Carne</string>
	<string name="Plastic">Plástico</string>
	<string name="Rubber">Goma</string>
	<string name="Light">Luz</string>

<!-- Avatar Skeleton -->
	<string name="Chest">Pecho</string>
	<string name="Skull">Cráneo</string>
	<string name="Left Shoulder">Hombro Izquierdo</string>
	<string name="Right Shoulder">Hombro Derecho</string>
	<string name="Left Hand">Mano Izquierda</string>
	<string name="Right Hand">Mano Derecha</string>
	<string name="Left Foot">Pié Izquierdo</string>
	<string name="Right Foot">Pié Derecho</string>
	<string name="Spine">Columna</string>
	<string name="Pelvis">Pelvis</string>
	<string name="Mouth">Boca</string>
	<string name="Chin">Mentón</string>
	<string name="Left Ear">Oreja Izquierda</string>
	<string name="Right Ear">Oreja Derecha</string>
	<string name="Left Eyeball">Globo Ocular Izquierdo</string>
	<string name="Right Eyeball">Globo Ocular Derecho</string>
	<string name="Nose">Nariz</string>
	<string name="R Upper Arm">Brazo Derecho</string>
	<string name="R Forearm">Antebrazo Derecho</string>
	<string name="L Upper Arm">Brazo Izquierdo</string>
	<string name="L Forearm">Antebrazo Izquierdo</string>
	<string name="Right Hip">Cadera Derecha</string>
	<string name="R Upper Leg">Muslo Derecho</string>
	<string name="R Lower Leg">Pierna Derecha</string>
	<string name="Left Hip">Cadera Izquierda</string>
	<string name="L Upper Leg">Muslo Izquierdo</string>
	<string name="L Lower Leg">Pierna Izquierda</string>
	<string name="Stomach">Estómago</string>
	<string name="Left Pec">Pectoral Izquierdo</string>
	<string name="Right Pec">Pectoral Derecho</string>
    <string name="Neck">Cuello</string>
    <string name="Avatar Center">Base</string>
    <string name="Left Ring Finger">Anillo dedo Izquierdo</string>
    <string name="Right Ring Finger">Anillo dedo Derecho</string>
    <string name="Tail Base">Base de la cola</string>
    <string name="Tail Tip">Punta de la cola</string>
    <string name="Left Wing">Ala Izquierda</string>
    <string name="Right Wing">Ala Derecha</string>
    <string name="Jaw">Mandíbula</string>
    <string name="Alt Left Ear">Oreja Izquierda Alterna</string>
    <string name="Alt Right Ear">Oreja Derecha Alterna</string>
    <string name="Alt Left Eye">Ojo Izquierda Alterno</string>
    <string name="Alt Right Eye">Ojo Derecho Alterno</string>
    <string name="Tongue">Lengua</string>
    <string name="Groin">Pelvis</string>
    <string name="Left Hind Foot">Pata trasera Izquierda</string>
    <string name="Right Hind Foot">Pata trasera Derecha</string>
    <string name="Invalid Attachment">Punto de anexión inválido</string>
	<string name="ATTACHMENT_MISSING_ITEM">Error: ítem desaparecido</string>
	<string name="ATTACHMENT_MISSING_BASE_ITEM">Error: ítem base desaparecido</string>
	<string name="ATTACHMENT_NOT_ATTACHED">Error: el objeto está en el vestuario actual pero anexado</string>

  <!-- Account types, see LLAvatarPropertiesProcessor -->
	<string name="AcctTypeResident">Residente</string>
	<string name="AcctTypeTrial">Prueba</string>
	<string name="AcctTypeCharterMember">Miembro Fundador</string>
	<string name="AcctTypeEmployee">Empleado de [GRID_OWNER]</string>
	<string name="PaymentInfoUsed">Información de Pago utilizada</string>
	<string name="PaymentInfoOnFile">Información de Pago en Archivo</string>
	<string name="NoPaymentInfoOnFile">Sin Información de Pago</string>
	<string name="AgeVerified">Edad Verificada</string>
	<string name="NotAgeVerified">Edad No Verificada</string>

  <!-- HUD Position -->
	<string name="Center 2">Centro 2</string>
	<string name="Top Right">Superior Derecho</string>
	<string name="Top">Superior</string>
	<string name="Top Left">Superior Izquierdo</string>
	<string name="Center">Centro</string>
	<string name="Bottom Left">Inferior Izquierdo</string>
	<string name="Bottom">Inferior</string>
	<string name="Bottom Right">Inferior Derecha</string>

	<!-- compile queue-->
	<string name="CompileQueueDownloadedCompiling">Descargado, compilando</string>
	<string name="CompileQueueServiceUnavailable">El servicio de compilación de scripts no está disponible</string>
	<string name="CompileQueueScriptNotFound">El Script no ha sido hallado en el servidor.</string>
	<string name="CompileQueueProblemDownloading">Problema al descargar</string>
	<string name="CompileQueueProblemUploading">El Sim carece de capacidades UpdateScriptTask. No se puede pedir la recompilación</string>	
	<string name="CompileQueueProblemWriting">Error escribiendo en disco local. ¿Disco lleno?</string>  
	<string name="CompileQueueInsufficientPermDownload">Permisos insuficientes para descargar un script.</string>
	<string name="CompileQueueInsufficientPermFor">Permisos insuficientes para</string>
	<string name="CompileQueueUnknownFailure">Fallo desconocido en la descarga</string>
	<string name="CompileNoExperiencePerm">Omitiendo el script [SCRIPT] con la experiencia [EXPERIENCE].</string>
	<string name="CompileQueueTitle">Progreso de Recompilación</string>
	<string name="CompileQueueStart">recompilar</string>
	<string name="ResetQueueTitle">Progeso de Reinicio</string>
	<string name="ResetQueueStart">reiniciar</string>
	<string name="RunQueueTitle">Definir ejecución en Progreso</string>
	<string name="RunQueueStart">Definir ejecutando</string>
	<string name="NotRunQueueTitle">Definir no ejecutando en progreso</string>
	<string name="NotRunQueueStart">Definir no ejecutando</string>
	<string name="DeleteQueueTitle">Configurar sin ejecutar</string>
	<string name="DeleteQueueStart">Configurando sin ejecutarlo
</string>

	<!-- compile comment text-->
	<string name="CompileSuccessful">¡Compilación correcta!</string>
	<string name="CompileSuccessfulSaving">Compilación satisfactoria, guardando...</string>
	<string name="SaveComplete">Guardado completado.</string>
	<string name="UploadFailed">Error al subir el archivo: </string>
	<string name="ObjectOutOfRange">Script (objeto fuera de rango)</string>
	<string name="ScriptWasDeleted">Script (eliminado del inventario)</string>

	<!-- god tools -->
	<string name="GodToolsObjectOwnedBy">Objeto [OBJECT] propiedad de [OWNER]</string>

	<!-- groups -->
	<string name="GroupsNone">ninguno</string>
	<string name="Group" value=" (grupo)" />
	<string name="Unknown">(Desconocido)</string>
	<string name="SummaryForTheWeek"    value="Sumario para esta semana, comenzada el "/>
	<string name="NextStipendDay"       value="Siguiente día de estipendio es "/>
	<string name="GroupIndividualShare" value="                      Grupo       Participación Individual"/>
	<string name="GroupColumn"          value="                      Grupo"/>
	<string name="Balance">Saldo</string>
	<string name="Credits">Créditos</string>
	<string name="Debits">Débitos</string>
	<string name="Total">Total</string>
	<string name="NoGroupDataFound">Información no hallada para el grupo </string>

	<!-- floater IM bonus_info: When a Linden with Admin/god status receives a new IM this displays the estate (Mainland vs. teen grid) of the source avatar.
		This is to help Lindens when answering questions. -->
	<string name="IMParentEstate">estado padre</string>
	<string name="IMMainland">Continente</string>
	<string name="IMTeen">teen</string>

    <!-- floater about land -->
    <string name="Anyone">Cualquiera</string>
	 
	<!-- floater region info -->
	<!-- The following will replace variable [ALL_ESTATES] in notifications EstateAllowed*, EstateBanned*, EstateManager* -->
	<string name="RegionInfoError">error</string>
	<string name="RegionInfoAllEstatesOwnedBy">todos los Estados propiedad de [OWNER]</string>
	<string name="RegionInfoAllEstatesYouOwn">todos los Estados de tu propiedad</string>
	<string name="RegionInfoAllEstatesYouManage">todos los estados que administras para [OWNER]</string>
	<string name="RegionInfoAllowedResidents">Residentes Permitidos: ([ALLOWEDAGENTS], máx [MAXACCESS])</string>
	<string name="RegionInfoAllowedGroups">Grupos Permitidos: ([ALLOWEDGROUPS], máx [MAXACCESS])</string>
	<string name="RegionInfoEstateManagers">Aministradores de Estado: ([ESTATEMANAGERS], máx [MAXMANAGERS])</string>
	<string name="RegionInfoBannedResidents">Residentes Prohibidos: ([BANNEDAGENTS], máx [MAXBANNED])</string>
	<string name="RegionInfoListTypeAllowedAgents">Residentes Permitidos</string>
	<string name="RegionInfoListTypeBannedAgents">Residentes Prohibidos</string>
	<string name="RegionInfoAllEstates">todos los estados</string>
	<string name="RegionInfoManagedEstates">estados administrados</string>
	<string name="RegionInfoThisEstate">este estado</string>
	<string name="AndNMore">y [EXTRA_COUNT] más</string>

	<!-- script limits floater -->
	<string name="ScriptLimitsParcelScriptMemory">Memoria de Scripts en la Parcela</string>
	<string name="ScriptLimitsParcelsOwned">Parcelas Listadas: [PARCELS]</string>
	<string name="ScriptLimitsMemoryUsed">Memoria utilizada: [COUNT] kb de un máximo de [MAX] kb; [AVAILABLE] kb disponibles</string>
	<string name="ScriptLimitsMemoryUsedSimple">Memoria utilizada: [COUNT] kb</string>
	<string name="ScriptLimitsParcelScriptURLs">URLs de Script de la Parcela</string>
	<string name="ScriptLimitsURLsUsed">URLs usadas: [COUNT] de un máximo de [MAX]; [AVAILABLE] disponibles</string>
	<string name="ScriptLimitsURLsUsedSimple">URLs usadas: [COUNT]</string>
	<string name="ScriptLimitsRequestError">Error al requerir información</string>
	<string name="ScriptLimitsRequestNoParcelSelected">No se ha seleccionado una Parcela</string>
	<string name="ScriptLimitsRequestWrongRegion">Error: la información de scripts sólo está disponible en región actual</string>
	<string name="ScriptLimitsRequestWaiting">Recuperando información...</string>
	<string name="ScriptLimitsRequestDontOwnParcel">No tienes permisos para examinar esta parcela</string>

	<string name="SITTING_ON">Sentado en</string>
	<string name="ATTACH_CHEST">Pecho</string>
	<string name="ATTACH_HEAD">Cabeza</string>
	<string name="ATTACH_LSHOULDER">Hombro Izquierdo</string>
	<string name="ATTACH_RSHOULDER">Hombro Derecho</string>
	<string name="ATTACH_LHAND">Mano Izquierda</string>
	<string name="ATTACH_RHAND">Mano Derecha</string>
	<string name="ATTACH_LFOOT">Pié Izquierdo</string>
	<string name="ATTACH_RFOOT">Pié Derecho</string>
	<string name="ATTACH_BACK">Espalda</string>
	<string name="ATTACH_PELVIS">Pelvis</string>
	<string name="ATTACH_MOUTH">Boca</string>
	<string name="ATTACH_CHIN">Mentón</string>
	<string name="ATTACH_LEAR">Oreja Izquierda</string>
	<string name="ATTACH_REAR">Oreja Derecha</string>
	<string name="ATTACH_LEYE">Ojo Izquierdo</string>
	<string name="ATTACH_REYE">Ojo Derecho</string>
	<string name="ATTACH_NOSE">Nariz</string>
	<string name="ATTACH_RUARM">Brazo Derecho</string>
	<string name="ATTACH_RLARM">Antebrazo Derecho</string>
	<string name="ATTACH_LUARM">Brazo Izquierdo</string>
	<string name="ATTACH_LLARM">Antebrazo Izquierdo</string>
	<string name="ATTACH_RHIP">Cadera Derecha</string>
	<string name="ATTACH_RULEG">Muslo Derecho</string>
	<string name="ATTACH_RLLEG">Pierna Derecha</string>
	<string name="ATTACH_LHIP">Cadera Izquierda</string>
	<string name="ATTACH_LULEG">Muslo Izquierdo</string>
	<string name="ATTACH_LLLEG">Pierna Izquierda</string>
	<string name="ATTACH_BELLY">Vientre</string>
	<string name="ATTACH_RPEC">Pectoral Deeecho</string>
	<string name="ATTACH_LPEC">Pectoral Izquierdo</string>
	<string name="ATTACH_HUD_CENTER_2">HUD Centro 2</string>
	<string name="ATTACH_HUD_TOP_RIGHT">HUD Superior Derecho</string>
	<string name="ATTACH_HUD_TOP_CENTER">HUD Superior Centro</string>
	<string name="ATTACH_HUD_TOP_LEFT">HUD Superior Izquierdo</string>
	<string name="ATTACH_HUD_CENTER_1">HUD Centro 1</string>
	<string name="ATTACH_HUD_BOTTOM_LEFT">HUD Inferior Izquierdo</string>
	<string name="ATTACH_HUD_BOTTOM">HUD Inferior</string>
	<string name="ATTACH_HUD_BOTTOM_RIGHT">HUD Inferior Derecho</string>
	<string name="ATTACH_NECK">Cuello</string>
	<string name="ATTACH_AVATAR_CENTER">Base</string>
    <string name="ATTACH_LHAND_RING1">Anillo Dedo Izquierdo</string>
    <string name="ATTACH_RHAND_RING1">Anillo Dedo Derechoa</string>
    <string name="ATTACH_TAIL_BASE">Base de la Cola</string>
    <string name="ATTACH_TAIL_TIP">Punta de la Cola</string>
    <string name="ATTACH_LWING">Ala Izquierda</string>
    <string name="ATTACH_RWING">Ala DerechaRight </string>
    <string name="ATTACH_FACE_JAW">Mandíbula</string>
    <string name="ATTACH_FACE_LEAR">Oreja Izquierda Alterna</string>
    <string name="ATTACH_FACE_REAR">Oreja Derecha Alterna</string>
    <string name="ATTACH_FACE_LEYE">Ojo Izquierdo Alterno</string>
    <string name="ATTACH_FACE_REYE">Ojo Derecho Alterno</string>
    <string name="ATTACH_FACE_TONGUE">Lengua</string>
    <string name="ATTACH_GROIN">Ingle</string>
    <string name="ATTACH_HIND_LFOOT">Pata Trasera Izquierda</string>
    <string name="ATTACH_HIND_RFOOT">Pata Trasera Derecha</string>

	<!-- script editor -->
	<string name="CursorPos">Línea [LINE], Columna [COLUMN]</string>
	
	<!-- panel contents -->
	<string name="PanelContentsNewScript">Nuevo Script</string>

	<!-- Mute -->
	<string name="MuteByName">(Por nombre)</string>
	<string name="MuteAgent">(Residente)</string>
	<string name="MuteObject">(Objeto)</string>
	<string name="MuteGroup">(Grupo)</string>
	<string name="MuteExternal">(Externo)</string>

	<!-- Region/Estate Covenant -->
	<string name="RegionNoCovenant">No hay un Convenio provisto para este Estado.</string>
	<string name="RegionNoCovenantOtherOwner">No hay un Convenio provisto para este Estado. El terreno de este Estado está siendo vendido por el propietario del Estado, no por Linden Lab. Por favor, contacta al propietario del Estado para más detalles.</string>
	<string name="none_text"  value=" (ninguno) "/>

	<!-- Environment settings -->
	<string name="Local">Local</string>
	<string name="LocalSettings">Configuración Local</string>
	<string name="Region">Región</string>
	<string name="RegionSettings">Configuración de Región</string>

	<!-- Multi Preview Floater -->
	<string name="MultiPreviewTitle">Vista previa</string>
	<string name="MultiPropertiesTitle">Propiedades</string>

	<!-- inventory offer -->
	<string name="InvOfferAnObjectNamed">Un objeto llamado</string>
	<string name="InvOfferOwnedByGroup">propiedad del grupo</string>
	<string name="InvOfferOwnedByUnknownGroup">propiedad de un grupo desconocido</string>
	<string name="InvOfferOwnedBy">propiedad de</string>
	<string name="InvOfferOwnedByUnknownUser">propiedad de un usuario desconocido</string>
	<string name="InvOfferGaveYou">te ha dado</string>
	<string name="InvOfferDecline">Has rechazado [DESC] de [NAME].</string>
	<string name="InvOfferDeclineSilent">Has rechazado [DESC] sin notificar a [NAME].</string>
	<string name="InvOfferAcceptSilent">Has aceptado [DESC] sin notificar a [NAME].</string>

	<!-- group money -->
	<string name="GroupMoneyTotal">Total</string>
	<string name="GroupMoneyBought">comprado</string>
	<string name="GroupMoneyPaidYou">te ha pagado</string>
	<string name="GroupMoneyPaidInto">pagado en</string>
	<string name="GroupMoneyBoughtPassTo">pase comprado para</string>
	<string name="GroupMoneyPaidFeeForEvent">tasa del evento pagada</string>
	<string name="GroupMoneyPaidPrizeForEvent">precio del evento pagado</string>
	<string name="GroupMoneyBalance">Balance</string>
	<string name="GroupMoneyCredits">Créditos</string>
	<string name="GroupMoneyDebits">Débitos</string>

	<!-- Viewer menu -->
	<string name="AcquiredItems">Ítems adquiridos</string>
	<string name="Cancel">Cancelar</string>
	<string name="UploadingCosts">Subiendo [NAME] a un costo de [CURRENCY] [AMOUNT]</string>
	<string name="BuyingCosts">Comprar esto costará</string>	
	<string name="UnknownFileExtension">
		Extensión de archivo %s deconocida.
Se espera .wav, .tga, .bmp, .jpg, .jpeg, o .bvh
	</string>
  <string name="MuteObject2">Ignorar</string>
  <string name="MuteAvatar">Ignorar</string>
  <string name="UnmuteObject">Dejar de Ignorar</string>
  <string name="UnmuteAvatar">Dejar de Ignorar</string>

	<!-- menu accelerators -->
	<string name="accel-mac-control">Ctrl-</string>
	<string name="accel-mac-command">Cmd-</string>
	<string name="accel-mac-option">Opt-</string>
	<string name="accel-mac-shift">Mayús-</string>
	<string name="accel-win-control">Ctrl-</string>
	<string name="accel-win-alt">Alt-</string>
	<string name="accel-win-shift">Mayús-</string>
	
	<!-- Tab Containers -->
	<string name="tab_tooltip_prev">[ALT]Flecha Izq. para pestaña previa</string>
	<string name="tab_tooltip_next">[ALT]Flecha Der. para pestaña siguiente</string>

	<!-- Previews -->
	<string name="FileSaved">Archivo Guardado</string>
	<string name="Receiving">Recibiendo</string>

	<!-- Directions, HUD -->
	<string name="Direction_Forward">Adelante</string>
	<string name="Direction_Left">Izquierda</string>
	<string name="Direction_Right">Derecha</string>
	<string name="Direction_Back">Atrás</string>
	<string name="Direction_North">Norte</string>
	<string name="Direction_South">Sur</string>
	<string name="Direction_West">Oeste</string>
	<string name="Direction_East">Este</string>
	<string name="Direction_Up">Arriba</string>
	<string name="Direction_Down">Abajo</string>

	<string name="None">Nada</string>

	<!-- punctuations -->
	<string name=":">:</string>
	<string name=",">,</string>
	<string name="...">...</string>
	<string name="***">***</string>
	<string name="(">(</string>
	<string name=")">)</string>
	<string name=".">.</string>
	<string name="'">'</string>
	<string name="---">---</string>

	<!-- media -->
	<string name="Multiple Media">Múltiple Media</string>
	<string name="Play Media">Ejecutar/Pausar Media</string>

	<!-- OSMessageBox messages -->
	<string name="MBCmdLineError">
		Se ha encontrado un error analizando la línea de comandos-
Por favor, mira en: http://wiki.secondlife.com/wiki/Client_parameters
Error:
	</string>
	
	<string name="MBCmdLineUsg">
		[APP_NAME] Uso de la Línea de Comandos:
	</string>
	
	<string name="MBUnableToAccessFile">
		[APP_NAME] es incapaz de acceder a un archivo que necesita.

Esto puede ser porque de alguna manera tienes varias copias en ejecución, o tu sistema de forma incorrecta piensa que un archivo está abierto.
Si este mensaje persiste, reinicia el equipo y vuelve a intentarlo.
Si persiste, puede que tengas que desinstalar completamente [APP_NAME] y volver a instalarlo.
	</string>
	
	<string name="MBAlreadyRunning">
		[APP_NAME] ya está siendo ejecutado.
Revisa tu barra de tareas y busca copia minimizada del programa.
Si este mensaje persiste, reinicia tu equipo.
	</string>
	
	<string name="MBFrozenCrashed">
		[APP_NAME] parece haberse congelado o sufrido un fallo en la ejecución anterior.
¿Quieres enviar un reporte de fallos?

(Puedes modificar esta opción de reporte de fallos en Prefencias -> General -> Reporte de Fallos)
	</string>
	
	<string name="MBAlert">Notificación</string>
	
	<string name="MBNoDirectX">
		[APP_NAME] es incapaz de detectar DirectX 9.0b o superior.
[APP_NAME] usa DirecX para detectar el hardware y/o los controladores desactualizados que pueden causar inestabilidad, pobre rendmiento y caídas. Si bien puedes ejecutar [APP_NAME] sin esto, recomendamos encarecidamente ejecutarlo con DirectX 9.0b.

¿Quieres continuar?
	</string>
	
	<string name="MBWarning">Atención</string>
	
	<string name="MBRegClassFailed">Fallo de RegisterClass</string>
	
	<string name="MBError">Error</string>
	
	<string name="MBFullScreenErr">
		Incapaz de ejecutar a pantalla completa en [WIDTH] x [HEIGHT].
Ejecutando en ventana.
	</string>
	
	<string name="MBDestroyWinFailed">Error de cierre mientras se destruía la ventana (falló DestroyWindow())</string>
	<string name="MBShutdownErr">Error de Cierre</string>
	<string name="MBDevContextErr">Imposible crear el contexto de dispositivo GL</string>
	<string name="MBPixelFmtErr">No se puede encontrar el formato de píxel adecuado</string>
	<string name="MBPixelFmtDescErr">No se puede ver la descripción del formato de píxel	</string>
	<string name="MBTrueColorWindow">
		[APP_NAME] requiere True Color (32-bit) para ser ejecutado.
Por favor, ve a la configuración de pantalla de tu equipo y configura el modo de color en 32-bit.
	</string>
	
	<string name="MBAlpha">
		[APP_NAME] es incapaz de ejecutarse porque no puede obtener un canal alfa de 8 bit.  Usualmente esto ocurre debido a problemas con la tarjeta gráfica.
Por favor, asegurate que tienes actualizados los controladores de tu tarjeta gráfica.
Además, asegurate que tu pantalla esta definida en Color Verdadero (32-bit) En el Panel de Control &gt; Pantalla &gt; Configuraciones.

Si continuas recibiendo este mensaje, contacta con [SUPPORT_SITE].
	</string>
	
	<string name="MBPixelFmtSetErr">No se puede establecer el formato de píxel</string>
	<string name="MBGLContextErr">No se puede crear el contexto de renderizado GL</string>
	<string name="MBGLContextActErr">No se puede activar contexto de renderizado GL</string>
	
	<string name="MBVideoDrvErr">
		[APP_NAME] es incapaz de ejecutarse porque tu tarjeta gráfica no está instalada correctamente, es obsoleta o no está soportada. Por favor, asegurate que tienes actualizados los controladores de tu tarjeta gráfica, incluso, si están actualizados, intenta reinstalarlos..

Si continuas recibiendo este mensaje, contacta con [SUPPORT_SITE].
	</string>

	<!-- Avatar Shape Information -->
	<string name="5 O'Clock Shadow">Sombreado de las 5 en Punto</string>

	<string name="All White">Todo Blanco</string>
	<string name="Anime Eyes">Ojos de Animé</string>
	<string name="Arced">Arqueado</string>
	<string name="Arm Length">Largo de Brazo</string>
	<string name="Attached">Anexado</string>
	<string name="Attached Earlobes">Anexado a lóbulos de las orejas</string>

	<string name="Back Fringe">Flequillo</string>

	<string name="Baggy">Holgado</string>
	<string name="Bangs">Flecos</string>

	<string name="Beady Eyes">Ojos Pequeños y Brillantes</string>
	<string name="Belly Size">Tamaño del Vientre</string>
	<string name="Big">Grande</string>
	<string name="Big Butt">Glúteos Grandes</string>

	<string name="Big Hair Back">Pelo grande: Atrás</string>
	<string name="Big Hair Front">Pelo Grande: Frente</string>
	<string name="Big Hair Top">Pelo Grande: Arriba</string>
	<string name="Big Head">Cabeza Grande</string>
	<string name="Big Pectorals">Pectorales Grandes</string>
	<string name="Big Spikes">Picos Grandes</string>
	<string name="Black">Negro</string>
	<string name="Blonde">Rubio</string>
	<string name="Blonde Hair">Pelo Rubio</string>
	<string name="Blush">Rubor</string>
	<string name="Blush Color">Color del Rubor</string>
	<string name="Blush Opacity">Opacidad del Rubor</string>
	<string name="Body Definition">Definición del Cuerpo</string>
	<string name="Body Fat">Gordura</string>
	<string name="Body Freckles">Pecas del Cuerpo</string>
	<string name="Body Thick">Grosor del Cuerpo</string>
	<string name="Body Thickness">Delgadez corporal</string>
	<string name="Body Thin">Finura corporal</string>

	<string name="Bow Legged">Arqueado de Piernas</string>
	<string name="Breast Buoyancy">Firmeza de Senos</string>
	<string name="Breast Cleavage">Escote</string>
	<string name="Breast Size">Tamaño de Senos</string>
	<string name="Bridge Width">Ancho de Puente</string>
	<string name="Broad">Extensión</string>
	<string name="Brow Size">Arco Frontal</string>
	<string name="Bug Eyes">Ojos Saltones</string>
	<string name="Bugged Eyes">Ojos Saltones</string>
	<string name="Bulbous">Bulbosa</string>
	<string name="Bulbous Nose">Nariz Bulbosa</string>

	<string name="Breast Physics Mass">Senos: Masa</string>
	<string name="Breast Physics Smoothing">Senos. Alisado</string>
	<string name="Breast Physics Gravity">Senos: Gravedad</string>
	<string name="Breast Physics Drag">Senos: Arrastre</string>

	<string name="Breast Physics InOut Max Effect">Efecto Máximo</string>
	<string name="Breast Physics InOut Spring">Elasticidad</string>
	<string name="Breast Physics InOut Gain">Ganancia</string>
	<string name="Breast Physics InOut Damping">Amortiguación</string>

	<string name="Breast Physics UpDown Max Effect">Efecto Máximo</string>
	<string name="Breast Physics UpDown Spring">Elasticidad</string>
	<string name="Breast Physics UpDown Gain">Ganancia</string>
	<string name="Breast Physics UpDown Damping">Amortiguación</string>

	<string name="Breast Physics LeftRight Max Effect">Efecto Máximo</string>
	<string name="Breast Physics LeftRight Spring">Elasticidad</string>
	<string name="Breast Physics LeftRight Gain">Ganancia</string>
	<string name="Breast Physics LeftRight Damping">Amortiguación</string>

	<string name="Belly Physics Mass">Vientre: Masa</string>
	<string name="Belly Physics Smoothing">Vientre: Alisado</string>
	<string name="Belly Physics Gravity">Vientre: Gravedad</string>
	<string name="Belly Physics Drag">Vientre: Arrastre</string>

	<string name="Belly Physics UpDown Max Effect">Efecto Máximo</string>
	<string name="Belly Physics UpDown Spring">Elasticidad</string>
	<string name="Belly Physics UpDown Gain">Ganancia</string>
	<string name="Belly Physics UpDown Damping">Amortiguación</string>

	<string name="Butt Physics Mass">Nalgas: Masa</string>
	<string name="Butt Physics Smoothing">Nalgas: Alisado</string>
	<string name="Butt Physics Gravity">Nalgas: Gravedad</string>
	<string name="Butt Physics Drag">Nalgas: Arrastre</string>

	<string name="Butt Physics UpDown Max Effect">Efecto Máximo</string>
	<string name="Butt Physics UpDown Spring">Elasticidad</string>
	<string name="Butt Physics UpDown Gain">Ganancia</string>
	<string name="Butt Physics UpDown Damping">Amortiguación</string>

	<string name="Butt Physics LeftRight Max Effect">Efecto Máximo</string>
	<string name="Butt Physics LeftRight Spring">Elasticidad</string>
	<string name="Butt Physics LeftRight Gain">Ganancia</string>
	<string name="Butt Physics LeftRight Damping">Amortiguación</string>

	<string name="Bushy Eyebrows">Cejas Tupidas</string>
	<string name="Bushy Hair">Cabello Espeso</string>
	<string name="Butt Size">Tamaño de las Nalgas</string>
	<string name="Butt Gravity">Gravedad de Nalgas</string>
	<string name="bustle skirt">Movimiento de Falda</string>
	<string name="no bustle">Sin Movimiento</string>
	<string name="more bustle">Más Movimiento</string>

	<string name="Chaplin">Chaplin</string>
	<string name="Cheek Bones">Huesos de la Mejilla</string>
	<string name="Chest Size">Tamaño del Pecho</string>
	<string name="Chin Angle">Ángulo del Mentón</string>
	<string name="Chin Cleft">Mentón Hendido</string>
	<string name="Chin Curtains">Barba Cortina</string>

	<string name="Chin Depth">Mentón Profundo</string>
	<string name="Chin Heavy">Mentón Fuerte</string>
	<string name="Chin In">Mentón hundido</string>
	<string name="Chin Out">Mentón prominente</string>
	<string name="Chin-Neck">Mentón-Cuello</string>
	<string name="Clear">Limpia</string>
	<string name="Cleft">Hendidura</string>
	<string name="Close Set Eyes">Ojos juntos</string>
	<string name="Closed">Cerrado</string>
	<string name="Closed Back">Espalda Cerrada</string>
	<string name="Closed Front">Frontal Cerrado</string>
	<string name="Closed Left">Lado Izq. Cerrado</string>
	<string name="Closed Right">lado Der. Cerrado</string>
	<string name="Coin Purse">Monedero</string>
	<string name="Collar Back">Cuello posterior</string>

	<string name="Collar Front">Cuello Frontal</string>

	<string name="Corner Down">Hacia Abajo</string>

	<string name="Corner Up">Hacia Arriba</string>
	<string name="Creased">Arrugado</string>
	<string name="Crooked Nose">Naríz Torcida</string>

	<string name="Cuff Flare">Acampanado</string>
	<string name="Dark">Oscuro</string>
	<string name="Dark Green">Verde Oscuro</string>
	<string name="Darker">Mas Oscuro</string>
	<string name="Deep">Profundo</string>
	<string name="Default Heels">Tacones Predeterminados</string>

	<string name="Dense">Denso</string>

	<string name="Double Chin">Mucha papada</string>
	<string name="Downturned">Poco</string>
	<string name="Duffle Bag">Muy abultada</string>
	<string name="Ear Angle">Orejas: ángulo</string>
	<string name="Ear Size">Orejas: tamaño</string>
	<string name="Ear Tips">Orejas: forma</string>
	<string name="Egg Head">Cabeza: ahuevada</string>
	<string name="Eye Bags">Ojos: bolsas</string>
	<string name="Eye Color">Ojos: color</string>
	<string name="Eye Depth">Ojos: profundidad</string>
	<string name="Eye Lightness">Ojos: brillo</string>
	<string name="Eye Opening">Ojos: apertura</string>
	<string name="Eye Pop">Ojos: simetría</string>
	<string name="Eye Size">Ojos: tamaño</string>
	<string name="Eye Spacing">Ojos: separación</string>

	<string name="Eyebrow Arc">Cejas: arco</string>
	<string name="Eyebrow Density">Cejas: densidad</string>

	<string name="Eyebrow Height">Cejas: altura</string>
	<string name="Eyebrow Points">Cejas: en V</string>
	<string name="Eyebrow Size">Cejas: tamaño</string>

	<string name="Eyelash Length">Pestañas: longitud</string>
	<string name="Eyeliner">Contorno de ojos</string>
	<string name="Eyeliner Color">Contorno de ojos: color</string>

	<string name="Eyes Bugged">Ojos Desorbitados</string>

	<string name="Face Shear">Cara: simetría</string>
	<string name="Facial Definition">Rasgos marcados</string>
	<string name="Far Set Eyes">Ojos separados</string>

	<string name="Fat Lips">Labios prominentes</string>

	<string name="Female">Mujer</string>
	<string name="Fingerless">Sin dedos</string>
	<string name="Fingers">Con dedos</string>
	<string name="Flared Cuffs">Campana</string>
	<string name="Flat">Redondeadas</string>
	<string name="Flat Butt">Culo plano</string>
	<string name="Flat Head">Cabeza plana</string>
	<string name="Flat Toe">Empeine bajo</string>
	<string name="Foot Size">Pie: tamaño</string>
	<string name="Forehead Angle">Frente: ángulo</string>
	<string name="Forehead Heavy">Hacia la frente</string>
	<string name="Freckles">Pecas</string>

	<string name="Front Fringe">Flequillo</string>

	<string name="Full Back">Sin cortar atrás</string>
	<string name="Full Eyeliner">Contorno completo</string>
	<string name="Full Front">Sin cortar</string>
	<string name="Full Hair Sides">Pelo: volumen a los lados</string>
	<string name="Full Sides">Volumen total</string>
	<string name="Glossy">Con brillo</string>
	<string name="Glove Fingers">Guantes: dedos</string>
	
	<string name="Glove Length">Guantes: largo</string>

	<string name="Hair">Pelo</string>
	<string name="Hair Back">Pelo: Atrás</string>
	<string name="Hair Front">Pelo: Adelante</string>
	<string name="Hair Sides">Pelo: Costados</string>
	<string name="Hair Sweep">Peinado</string>
	<string name="Hair Thickess">Pelo Grueso</string>
	<string name="Hair Thickness">Pelo Grueso</string>
	<string name="Hair Tilt">Pelo inclinado</string>
	<string name="Hair Tilted Left">Pelo inclinado a Izquierda</string>
	<string name="Hair Tilted Right">Pelo inclinado a Derecha</string>
	<string name="Hair Volume">Pelo: Volumen</string>
	<string name="Hand Size">Tamaño de la Mano</string>
	<string name="Handlebars">Manillar</string>
	<string name="Head Length">Cabeza: Longitud</string>
	<string name="Head Shape">Cabeza: Forma</string>
	<string name="Head Size">Cabeza: Tamaño</string>
	<string name="Head Stretch">Cabeza Estirada</string>
	<string name="Heel Height">Altura del Tacón</string>
	<string name="Heel Shape">Forma del Tacón</string>
	<string name="Height">Altura</string>
	<string name="High">Alto</string>
	<string name="High Heels">Tacones Altos</string>
	<string name="High Jaw">Altura Mandíbula</string>
	<string name="High Platforms">Plataformas Altas</string>
	<string name="High and Tight">Alto y Estrecho</string>
	<string name="Higher">Más Grande</string>
	<string name="Hip Length">Largo de Cadera</string>
	<string name="Hip Width">Ancho de Cadera</string>
	<string name="Hover">Flotar</string>
	<string name="In">Interior</string>
	<string name="In Shdw Color">Color Sombra Interior</string>
	<string name="In Shdw Opacity">Opacidad Sombra Interior</string>
	<string name="Inner Eye Corner">Ángulo Interior del Ojo</string>
	<string name="Inner Eye Shadow">Sombra Interior del Ojo</string>
	<string name="Inner Shadow">Sombra Interior</string>

	<string name="Jacket Length">Largo de Chaqueta</string>

	<string name="Jacket Wrinkles">Arrugas de Chaqueta</string>
	<string name="Jaw Angle">Ángulo de la Mandíbula</string>
	<string name="Jaw Jut">Protuberancia Mandíbula</string>
	<string name="Jaw Shape">Forma Mandíbula</string>
	<string name="Join">Unión</string>
	<string name="Jowls">Papada</string>
	<string name="Knee Angle">Ángulo Rodilla</string>
	<string name="Knock Kneed">Rodillazo</string>

	<string name="Large">Largo</string>
	<string name="Large Hands">Largo de Manos</string>
	<string name="Left Part">Parte Izquierda</string>
	<string name="Leg Length">Largo de Pierna</string>
	<string name="Leg Muscles">Musculos de las Piernas</string>
	<string name="Less">Menos</string>
	<string name="Less Body Fat">Menos gordura</string>
	<string name="Less Curtains">Menos tupida</string>
	<string name="Less Freckles">Menos pecas</string>
	<string name="Less Full">Menos grosor</string>
	<string name="Less Gravity">Más levantado</string>
	<string name="Less Love">Menos michelines</string>
	<string name="Less Muscles">Pocos músculos</string>
	<string name="Less Muscular">Poca musculatura</string>
	<string name="Less Rosy">Menos sonrosada</string>
	<string name="Less Round">Menos redondeada</string>
	<string name="Less Saddle">Menos cartucheras</string>
	<string name="Less Square">Menos cuadrada</string>
	<string name="Less Volume">Menos volumen</string>
	<string name="Less soul">Pequeña</string>
	<string name="Lighter">Más luminosos</string>
	<string name="Lip Cleft">Labio: hoyuelo</string>
	<string name="Lip Cleft Depth">Hoyuelo marcado</string>
	<string name="Lip Fullness">Labios: grosor</string>
	<string name="Lip Pinkness">Labios sonrosados</string>
	<string name="Lip Ratio">Labios: ratio</string>
	<string name="Lip Thickness">Labios: prominencia</string>
	<string name="Lip Width">Labios: ancho</string>
	<string name="Lipgloss">Brillo de labios</string>
	<string name="Lipstick">Barra de labios</string>
	<string name="Lipstick Color">Barra de labios: color</string>
	<string name="Long">Más</string>
	<string name="Long Head">Cabeza alargada</string>
	<string name="Long Hips">Cadera larga</string>
	<string name="Long Legs">Piernas largas</string>
	<string name="Long Neck">Cuello largo</string>
	<string name="Long Pigtails">Coletas largas</string>
	<string name="Long Ponytail">Cola de caballo larga</string>
	<string name="Long Torso">Torso largo</string>
	<string name="Long arms">Brazos largos</string>

	<string name="Loose Pants">Pantalón suelto</string>
	<string name="Loose Shirt">Camiseta suelta</string>
	<string name="Loose Sleeves">Puños anchos</string>

	<string name="Love Handles">Michelines</string>
	<string name="Low">Bajar</string>
	<string name="Low Heels">Tacones bajos</string>
	<string name="Low Jaw">Mandíbula baja</string>
	<string name="Low Platforms">Suela fina</string>
	<string name="Low and Loose">Suelta</string>
	<string name="Lower">Abajo</string>
	<string name="Lower Bridge">Puente: abajo</string>
	<string name="Lower Cheeks">Mejillas: abajo</string>

	<string name="Male">Varón</string>
	<string name="Middle Part">Raya: en medio</string>
	<string name="More">Más</string>
	<string name="More Blush">Más colorete</string>
	<string name="More Body Fat">Más gordura</string>
	<string name="More Curtains">Más tupida</string>
	<string name="More Eyeshadow">Más</string>
	<string name="More Freckles">Más pecas</string>
	<string name="More Full">Más grosor</string>
	<string name="More Gravity">Menos levantado</string>
	<string name="More Lipstick">Más barra de labios</string>
	<string name="More Love">Más michelines</string>
	<string name="More Lower Lip">Más el inferior</string>
	<string name="More Muscles">Más músculos</string>
	<string name="More Muscular">Más musculatura</string>
	<string name="More Rosy">Más sonrosada</string>
	<string name="More Round">Más redondeada</string>
	<string name="More Saddle">Más cartucheras</string>
	<string name="More Sloped">Más inclinada</string>
	<string name="More Square">Más cuadrada</string>
	<string name="More Upper Lip">Más el superior</string>
	<string name="More Vertical">Más recta</string>
	<string name="More Volume">Más volumen</string>
	<string name="More soul">Grande</string>
	<string name="Moustache">Bigote</string>

	<string name="Mouth Corner">Comisuras</string>
	<string name="Mouth Position">Boca: posición</string>
	<string name="Mowhawk">Rapado</string>
	<string name="Muscular">Muscular</string>
	<string name="Mutton Chops">Patillas largas</string>

	<string name="Nail Polish">Uñas pintadas</string>
	<string name="Nail Polish Color">Uñas pintadas: color</string>
	<string name="Narrow">Disminuir</string>
	<string name="Narrow Back">Rapada</string>
	<string name="Narrow Front">Entradas</string>
	<string name="Narrow Lips">Labios estrechos</string>
	<string name="Natural">Natural</string>
	<string name="Neck Length">Cuello: longitud</string>
	<string name="Neck Thickness">Cuello: grosor</string>
	<string name="No Blush">Sin colorete</string>
	<string name="No Eyeliner">Sin contorno</string>
	<string name="No Eyeshadow">Menos</string>

	<string name="No Lipgloss">Labios sin brillo</string>
	<string name="No Lipstick">Sin barra de labios</string>
	<string name="No Part">Sin raya</string>
	<string name="No Polish">Sin pintar</string>
	<string name="No Red">Sin rojoNadastring</string>
	<string name="No Spikes">Sin crestas</string>
	<string name="No White">Sin blanco</string>
	<string name="No Wrinkles">Sin arrugas</string>
	<string name="Normal Lower">Labio Inf. Normal</string>
	<string name="Normal Upper">Labio Sup. Normal</string>
	<string name="Nose Left">Nariz a la izq.</string>
	<string name="Nose Right">Nariz a la der.</string>
	<string name="Nose Size">Nariz: tamaño</string>
	<string name="Nose Thickness">Nariz: grosor</string>
	<string name="Nose Tip Angle">Nariz: respingona</string>
	<string name="Nose Tip Shape">Nariz: punta</string>
	<string name="Nose Width">Nariz: ancho</string>
	<string name="Nostril Division">Fosa Nasal: altura</string>
	<string name="Nostril Width">Fosa Nasal: ancho</string>

	<string name="Opaque">Opaco</string>
	<string name="Open">Abrir</string>
	<string name="Open Back">Apertura trasera</string>
	<string name="Open Front">Apertura frontal</string>
	<string name="Open Left">Apertura izquierda</string>
	<string name="Open Right">Apertura derecha</string>
	<string name="Orange">Anaranjado</string>
	<string name="Out">Externo</string>
	<string name="Out Shdw Color">Sombra de ojos: color</string>
	<string name="Out Shdw Opacity">Sombra de ojos: opacidad</string>
	<string name="Outer Eye Corner">Ojos: comisura</string>
	<string name="Outer Eye Shadow">Sombra externa de Ojos</string>
	<string name="Outer Shadow">Sombra de ojos</string>
	<string name="Overbite">Retraído</string>

	<string name="Package">Pubis</string>
	<string name="Painted Nails">Pintadas</string>
	<string name="Pale">Pálida</string>
	<string name="Pants Crotch">Pantalón: cruz</string>
	<string name="Pants Fit">Ceñido</string>
	<string name="Pants Length">Pernera: largo</string>

	<string name="Pants Waist">Caja</string>
	<string name="Pants Wrinkles">Pantalón: arrugas</string>
	<string name="Part">Raya</string>
	<string name="Part Bangs">Flequillo partido</string>
	<string name="Pectorals">Pectorales</string>
	<string name="Pigment">Tono</string>
	<string name="Pigtails">Coletas</string>
	<string name="Pink">Rosa</string>
	<string name="Pinker">Más sonrosados</string>
	<string name="Platform Height">Suela: altura</string>
	<string name="Platform Width">Suela: ancho</string>
	<string name="Pointy">En punta</string>
	<string name="Pointy Heels">De aguja</string>

	<string name="Ponytail">Cola de caballo</string>
	<string name="Poofy Skirt">Con vuelo</string>
	<string name="Pop Left Eye">Izquierdo más grande</string>
	<string name="Pop Right Eye">Derecho más grande</string>
	<string name="Puffy">Hinchadas</string>
	<string name="Puffy Eyelids">Ojeras</string>
	<string name="Rainbow Color">Irisación</string>
	<string name="Red Hair">Pelirrojo</string>

	<string name="Regular">Regular</string>

	<string name="Right Part">Raya: der.</string>
	<string name="Rosy Complexion">Tez sonrosada</string>
	<string name="Round">Redondear</string>

	<string name="Ruddiness">Rubicundez</string>
	<string name="Ruddy">Rojiza</string>
	<string name="Rumpled Hair">Pelo encrespado</string>
	<string name="Saddle Bags">Cartucheras</string>

	<string name="Scrawny Leg">Piernas flacas</string>
	<string name="Separate">Más ancho</string>

	<string name="Shallow">Sin marcar</string>
	<string name="Shear Back">Nuca: corte</string>
	<string name="Shear Face">Shear Face</string>
	<string name="Shear Front">Shear Front</string>

	<string name="Shear Left Up">Arriba - izq.</string>
	<string name="Shear Right Up">Arriba - der.</string>
	<string name="Sheared Back">Rapada</string>
	<string name="Sheared Front">Rapada</string>
	<string name="Shift Left">A la izq.</string>
	<string name="Shift Mouth">Boca: ladeada</string>
	<string name="Shift Right">A la der.</string>
	<string name="Shirt Bottom">Alto de cintura</string>
	<string name="Shirt Fit">Ceñido</string>
	<string name="Shirt Wrinkles">Camisa: arrugas</string>
	<string name="Shoe Height">Caña: altura</string>

	<string name="Short">Bajo</string>
	<string name="Short Arms">Brazos cortos</string>
	<string name="Short Legs">Piernas cortas</string>
	<string name="Short Neck">Cuello corto</string>
	<string name="Short Pigtails">Coletas cortas</string>
	<string name="Short Ponytail">Cola de caballo corta</string>
	<string name="Short Sideburns">Patillas cortas</string>
	<string name="Short Torso">Torso corto</string>
	<string name="Short hips">Cadera corta</string>
	<string name="Shoulders">Hombros</string>

	<string name="Side Fringe">Lados: franja</string>
	<string name="Sideburns">Patillas</string>

	<string name="Sides Hair">Pelo: lados</string>
	<string name="Sides Hair Down">Bajar lados del pelo</string>
	<string name="Sides Hair Up">Subir lados del pelo</string>

	<string name="Skinny Neck">Cuello estrecho</string>
	<string name="Skirt Fit">Falda: vuelo</string>
	<string name="Skirt Length">Falda: largo</string>
	<string name="Slanted Forehead">Frente Inclinada</string>
	<string name="Sleeve Length">Largo de manga</string>

	<string name="Sleeve Looseness">Ancho de puños</string>
	<string name="Slit Back">Raja trasera</string>
	<string name="Slit Front">Raja frontal</string>
	<string name="Slit Left">Raja a la izq.</string>
	<string name="Slit Right">Raja a la der.</string>
	<string name="Small">Disminuir</string>
	<string name="Small Hands">Manos pequeñas</string>
	<string name="Small Head">Cabeza pequeña</string>
	<string name="Smooth">Leves</string>
	<string name="Smooth Hair">Pelo liso</string>
	<string name="Socks Length">Calcetines: largo</string>

	<string name="Soulpatch">Perilla</string>

	<string name="Sparse">Depiladas</string>
	<string name="Spiked Hair">Crestas</string>
	<string name="Square">Cuadrada</string>
	<string name="Square Toe">Punta cuadrada</string>
	<string name="Squash Head">Cabeza aplastada</string>

	<string name="Stretch Head">Cabeza estirada</string>
	<string name="Sunken">Chupadas</string>
	<string name="Sunken Chest">Estrecho de pecho</string>
	<string name="Sunken Eyes">Ojos hundidos</string>
	<string name="Sweep Back">Extensión posterior</string>
	<string name="Sweep Forward">Extensión adelante</string>

	<string name="Tall">Alto</string>
	<string name="Taper Back">Cubierta trasera</string>
	<string name="Taper Front">Cubierta frontal</string>
	<string name="Thick Heels">Tacones grandes</string>
	<string name="Thick Neck">Cuello ancho</string>
	<string name="Thick Toe">Empeine alto</string>

	<string name="Thin">Delgadas</string>
	<string name="Thin Eyebrows">Cejas finas</string>
	<string name="Thin Lips">Hacia dentro</string>
	<string name="Thin Nose">Nariz fina</string>
	<string name="Tight Chin">Poca papada</string>
	<string name="Tight Cuffs">Sin campana</string>
	<string name="Tight Pants">Pantalón ceñido</string>
	<string name="Tight Shirt">Camisa ceñida</string>
	<string name="Tight Skirt">Falda ceñida</string>
	<string name="Tight Sleeves">Puños ceñidos</string>

	<string name="Toe Shape">Punta: forma</string>
	<string name="Toe Thickness">Empeine</string>
	<string name="Torso Length">Torso: longitud</string>
	<string name="Torso Muscles">Torso: musculatura</string>
	<string name="Torso Scrawny">Torso flacucho</string>
	<string name="Unattached">Largos</string>
	<string name="Uncreased">Abiertos</string>
	<string name="Underbite">Prognatismo</string>
	<string name="Unnatural">No natural</string>
	<string name="Upper Bridge">Puente: arriba</string>
	<string name="Upper Cheeks">Mejillas: arriba</string>
	<string name="Upper Chin Cleft">Barbilla: prominencia</string>

	<string name="Upper Eyelid Fold">Párpados</string>
	<string name="Upturned">Mucho</string>
	<string name="Very Red">Del todo</string>
	<string name="Waist Height">Cintura</string>


<string name="Well-Fed">Bien Alimentado</string>
<string name="White Hair">Pelo Blanco</string>
<string name="Wide">Ancho</string>
<string name="Wide Back">Espalda Ancha</string>
<string name="Wide Front">Pecho Aancho</string>
<string name="Wide Lips">Labios Anchos</string>
<string name="Wild">Salvaje</string>
<string name="Wrinkles">Arrugas</string>

	<!-- System Messages -->
	<string name="ItemsComingInTooFastFrom">[APP_NAME]: Ítems llegando muy rápido desde [FROM_NAME], la vista previa automática ha sido deshabilitada por [TIME] segundos.</string>
	<string name="ItemsComingInTooFast">[APP_NAME]: Ítems llegando muy rápido, la vista previa automática ha sido deshabilitada por [TIME] segundos.</string>
	
	<!-- IM system messages -->
	<string name="IM_announce_incoming">ha iniciado una sesión de IM contigo.</string>
	<string name="IM_autoresponded_to">Respuesta Automática enviada a</string>
	<string name="IM_autoresponse_minutes">[MINS] minutos</string>
	<string name="IM_autoresponse_sent_item">se ha enviado un ítem con la respuesta automática</string>
	<string name="Unnamed">(Sin nombre)</string>
	<string name="inventory_item_offered_to">Ofrecido ítem de inventario a</string>	
	<string name="Saved_message">(Guardado [LONG_TIMESTAMP]) </string>
	<string name="IM_unblock_only_groups_friends">Para ver ese mensaje debes desmarcar&apos;Aceptar MIs solo de los amigos&apos; en Preferencias/Chat Avanzado/Chat-MI.</string>
	<string name="StartPointSet">Definir Punto Inicial</string>
	<string name="EndPointSet">Definir Punto Final</string>
	<string name="MeasuredDistance">Distancia: [DIST]</string>	
	<string name="PowerUser1">Te han sido otorgados poderes más allá de la comprensión mortal.</string>
	<string name="PowerUser2">Utiliza tus nuevas habilidades con sabiduría.</string>
	<string name="Unlocked:">Desbloqueado:</string>
	<string name="PowerUser3">- Prioridad de Animación hasta 7 - Destinado para animaciones que deben prevalecer sobre cualesquiera otras y en todo momento. NO UTILIZAR PARA ANIMACIONES EN GENERAL.</string>
	<string name="RightClick">Click Derecho</string>
	<string name="PowerUser4">Destruir Objetos - Borra en forma inmediata y permanente un objeto, cuando no tienes paciencia para esperar la respuesta del servidor.</string>
	<string name="PowerUser5">Explotar Objetos - Convierte un objeto Físico en temporal y desenlaza sus partes.</string>
	<string name="OnlineStatus">Conectado</string>
  <string name="OfflineStatus">Desconectado</string>
	<string name="not_online_msg">El usuario no está conectado: el mensaje se almacenará para entregárselo más tarde.</string>
	<string name="not_online_inventory">El usuario no está conectado: el inventario se ha guardado.</string>

	<string name="ReceivedGift">'Has recibido un regalo! [USER] te ha enviado "[PRODUCT]", y dice "[MESSAGE]". Puedes encontrar tu regalo en la carpeta Received Items.</string>
	<string name="ReceivedPurchase">Tu compra de [PRODUCT] ha sido enviada a tu carpeta Received Items.</string>

	<!-- voice calls -->

	<string name="ringing-im">Uniéndose a llamada de voz...</string>
	<string name="connected-im">Conectado, Pulsa Terminar Llamada para cortar</string>
	<string name="hang_up-im">Abandonar la conversación de voz</string>
	<string name="answering-im">Conectando...</string>
	<string name="conference-title">Chat grupal</string>
	<string name="inventory_item_offered-im">Ofrecido un Ítem de Inventario</string>
	<string name="inventory_item_offered_rlv">Ítem de Inventario ofrecido a [NAME]</string>	
	<string name="share_alert">Arrastra los ítems hacia aquí desde el inventario</string>

	<string name="only_user_message">eres el único usuario en esta sesión.</string>
	<string name="offline_message">[NAME] está desconectado.</string>
	<string name="invite_message">Pulsa el Botón [BUTTON NAME] para aceptar/conectar a este chat de voz.</string>
	<string name="muted_message">Tienes Ignorado a este residente. Enviándole un mensaje hará que dejes de ignorarlo automáticamente.</string>
  <!--Sometimes string name is gotten from the body of server response.
  For ex.: from gIMMgr::showSessionStartError in the LLViewerChatterBoxSessionStartReply::post.
  In case of the EXT-3115 issue 'generic' is passed into the gIMMgr::showSessionStartError as a string name.
  Also there are some other places where "generic" is used.
  So, let's add string with name="generic" with the same value as "generic_request_error" -->
	<string name="generic">Error al hacer la solicitud, por favor, inténtalo de nuevo más tarde.</string>
	<string name="generic_request_error">Error al hacer la solicitud, por favor, inténtalo de nuevo más tarde.</string>
	<string name="insufficient_perms_error">No tienes suficientes permisos.</string>
	<string name="session_does_not_exist_error">Esta sesión ya no existe</string>
	<string name="no_ability_error">No tienes esta capacidad.</string>
	<string name="no_ability">No tienes esta capacidad.</string>
	<string name="not_a_mod_error">No eres moderador en la sesión.</string>
  <!--Sometimes string name is gotten from the body of server response.
  For ex.: from gIMMgr::showSessionStartError in the LLViewerChatterBoxSessionStartReply::post.
  In case of the EXT-3562 issue 'muted' is passed into the gIMMgr::showSessionStartError as a string name.
  So, let's add string with name="muted" with the same value as "muted_error" -->
	<string name="muted">Un moderador del grupo ha bloqueado tu chat de texto.</string>
	<string name="muted_error">Un moderador del grupo ha bloqueado tu chat de texto.</string>
	<string name="add_session_event">No se pueden agregar usuarios a la sesión de chat con [RECIPIENT].</string>
  <!--Sometimes string name is gotten from the body of server response.
  For ex.: from gIMMgr::showSessionStartError in the LLViewerChatterBoxSessionStartReply::post.
  In case of the EXT-3562 issue 'message' is passed into the gIMMgr::showSessionStartError as a string name.
  So, let's add string with name="message" with the same value as "message_session_event" -->
	<string name="message">No se puede enviar tu mensaje a la sesión de chat con [RECIPIENT].</string>
	<string name="message_session_event">No se puede enviar tu mensaje a la sesión de chat con [RECIPIENT].</string>
	<string name="mute">Error al moderar.</string>
  <!--Sometimes string name is gotten from the body of server response.
  For ex.: from gIMMgr::showSessionStartError in the LLViewerChatterBoxSessionStartReply::post.
  In case of the EXT-3459 issue 'removed' is passed into the gIMMgr::showSessionStartError as a string name.
  So, let's add string with name="removed" with the same value as "removed_from_group" -->
	<string name="removed">Has sido expulsado del grupo.</string>
	<string name="removed_from_group">Has sido expulsado del grupo.</string>
	<string name="close_on_no_ability">Ya no tienes la capacidad para estar en esta sesión de chat.</string>

	<string name="Home position set.">Posición de la Base definida.</string>

  <string name="voice_morphing_url">http://secondlife.com/landing/voicemorphing</string>

<!-- Financial operations strings -->
	<string name="paid_you_ldollars">[NAME] te ha pagado [CURRENCY][AMOUNT] [REASON].</string>
	<string name="paid_you_ldollars_gift">[NAME] te ha pagado [CURRENCY][AMOUNT]: [REASON]</string>
	<string name="paid_you_ldollars_no_reason">[NAME] te ha pagado [CURRENCY][AMOUNT].</string>
	<string name="you_paid_ldollars">Has pagado a [NAME] [CURRENCY][AMOUNT] [REASON].</string>
	<string name="you_paid_ldollars_gift">Has pagado a [NAME] [CURRENCY][AMOUNT]: [REASON]</string>
	<string name="you_paid_ldollars_no_info">Has pagado [CURRENCY][AMOUNT].</string>
	<string name="you_paid_ldollars_no_reason">Has pagado a [NAME] [CURRENCY][AMOUNT].</string>
	<string name="you_paid_ldollars_no_name">Has pagado [CURRENCY][AMOUNT] [REASON].</string>
	<string name="you_paid_failure_ldollars">Ha fallado tu pago a [NAME] [CURRENCY][AMOUNT] [REASON].</string>
	<string name="you_paid_failure_ldollars_gift">Ha fallado tu pago a [NAME] [CURRENCY][AMOUNT]: [REASON]</string>
	<string name="you_paid_failure_ldollars_no_info">Ha fallado tu pago de [CURRENCY][AMOUNT].</string>
	<string name="you_paid_failure_ldollars_no_reason">Ha fallado tu pago a [NAME] [CURRENCY][AMOUNT].</string>
	<string name="you_paid_failure_ldollars_no_name">Ha fallado tu pago de [CURRENCY][AMOUNT] [REASON].</string>
	<string name="for item">para [ITEM]</string>
	<string name="for a parcel of land">por una parcela de terreno</string>
	<string name="for a land access pass">por acceso a una parcela</string>
	<string name="for deeding land">por transferir terreno</string>
	<string name="to create a group">por crear un grupo</string>
	<string name="to join a group">por unirte a un grupo</string>
	<string name="to upload">to upload</string>
	<string name="to publish a classified ad">por publicar un aviso clasificado</string>

	<string name="giving">dando [CURRENCY]</string>
	<string name="this_costs">Esto cuesta [CURRENCY]</string>
	<string name="this_object_costs">Este objeto cuesta</string>

	<string name="group_role_everyone">Cualquiera</string>
	<string name="group_role_officers">Oficiales</string>
	<string name="group_role_owners">Propietarios</string>
	<string name="group_member_status_online">En Línea</string>
	<string name="group_member_status_unknown">Desconocido</string>
  
	<string name="uploading_abuse_report">Enviando...

Denuncia</string>

	<!-- names for new inventory items-->
	<string name="New Shape">Nuevo Cuerpo</string>
	<string name="New Skin">Nueva Piel</string>
	<string name="New Hair">Nuevo Pelo</string>
	<string name="New Eyes">Nuevos Ojos</string>
	<string name="New Shirt">Nueva Camisa</string>
	<string name="New Pants">Nuevos Pantalones</string>
	<string name="New Shoes">Nuevos Zapatos</string>
	<string name="New Socks">Nuevos calcetines</string>
	<string name="New Jacket">Nueva Chaqueta</string>
	<string name="New Gloves">Nuevos Guantes</string>
	<string name="New Undershirt">Nueva Camiseta</string>
	<string name="New Underpants">Nueva Ropa Interior</string>
	<string name="New Skirt">Nueva Falda</string>
	<string name="New Alpha">Nueva Capa Alfa</string>
	<string name="New Tattoo">Nuevo Tatuaje</string>
	<string name="New Universal">Nueva Capa Universal</string>
	<string name="New Physics">Nueva Capa Física</string>
	<string name="Invalid Wearable">Vestimenta Inválida</string>
	<string name="New Gesture">Nuevo Gesto</string>
	<string name="New Script">Nuevo Script</string>
	<string name="New Note">Nueva Nota</string>
	<string name="New Folder">Nueva Carpeta</string>
	<string name="Contents">Contenido</string>
	<string name="Gesture">Gesto</string>
	<string name="Male Gestures">Gestos Masculinos</string>
	<string name="Female Gestures">Gestos Femeninos</string>
	<string name="Other Gestures">Otros Gestos</string>
	<string name="Speech Gestures">Gestos orales</string>
	<string name="Common Gestures">Gestos comunes</string>
	
  <!-- gestures -->
  <string name="Male - Excuse me">Masculino - Disculpame</string>
  <string name="Male - Get lost">Masculino - Déjame tranquilo</string>
  <string name="Male - Blow kiss">Masculino - Lanzar un Beso</string>
  <string name="Male - Boo">Masculino - Abuchear</string>
  <string name="Male - Bored">Masculino - Aburrido</string>
  <string name="Male - Hey">Masculino - ¡Eh!</string>
  <string name="Male - Laugh">Masculino - Risa</string>
  <string name="Male - Repulsed">Masculino - Rechazo</string>
  <string name="Male - Shrug">Masculino - Encogerse de hombros</string>
  <string name="Male - Stick tougue out">Masculino - Sacar la lengua</string>
  <string name="Male - Wow">Masculino - Admiración</string>

  <string name="Female - Chuckle">Femenimo - Risa Suave</string>
  <string name="Female - Cry">Femenino - Llorar</string>
  <string name="Female - Embarrassed">Femenino - Ruborizada</string>
  <string name="Female - Excuse me">Femenino - Disculpame</string>
  <string name="Female - Get lost">Femenino - Déjame tranquila</string>
  <string name="Female - Blow kiss">Femenino - Lanzar un Beso</string>
  <string name="Female - Boo">Femenino - Abuchear</string>
  <string name="Female - Bored">Femenino - Aburrida</string>
  <string name="Female - Hey">Femenino - ¡Eh!</string>
  <string name="Female - Hey baby">Femenino - 'Eh, encanto</string>
  <string name="Female - Laugh">Femenino - Risa</string>
  <string name="Female - Looking good">Femenino - Buen aspecto</string>
  <string name="Female - Over here">Femenino - Por aquí</string>
  <string name="Female - Please">Femenino - Por favor</string>
  <string name="Female - Repulsed">Femenino - Rechazo</string>
  <string name="Female - Shrug">Femenino - Encogerse de hombros</string>
  <string name="Female - Stick tougue out">Femenino - Sacar la lengua</string>
  <string name="Female - Wow">Femenino - Admiración</string>

  <string name="/bow">/reverencia</string>
  <string name="/clap">/aplaudir</string>
  <string name="/count">/contar</string>
  <string name="/extinguish">/apagar</string>
  <string name="/kmb">/bmc</string>
  <string name="/muscle">/músculo</string>
  <string name="/no">/no</string>
  <string name="/no!">/no!</string>
  <string name="/paper">/papel</string>
  <string name="/pointme">/señalarme</string>
  <string name="/pointyou">/señalarte</string>
  <string name="/rock">/piedra</string>
  <string name="/scissor">/tijera</string>
  <string name="/smoke">/fumar</string>
  <string name="/stretch">/estirar</string>
  <string name="/whistle">/silbar</string>
  <string name="/yes">/sí</string>
  <string name="/yes!">/sí!</string>
  <string name="afk">ausente</string>
  <string name="dance1">baile1</string>
  <string name="dance2">baile2</string>
  <string name="dance3">baile3</string>
  <string name="dance4">baile4</string>
  <string name="dance5">baile5</string>
  <string name="dance6">baile6</string>
  <string name="dance7">baile7</string>
  <string name="dance8">baile8</string>
	<string name="DefaultMimeType">ninguno/ninguno</string>
	
  <!-- language specific white-space characters, delimiters, spacers, item separation symbols -->
	<string name="words_separator" value=", "/>
  
	<string name="Chat">Chat</string>

	<!-- External editor status codes -->
	<string name="ExternalEditorNotSet">Selecciona un editor usando las configuraciones de Editor Externo.</string>
	<string name="ExternalEditorNotFound">No se puede hallar el editor externo que has especificado.
Intenta entrecomillando el camino al editor.
(P.ej. "/Camino al/editor" "%s")</string>
	<string name="ExternalEditorCommandParseError">Error analizando el comando del editor externo.</string>
	<string name="ExternalEditorFailedToRun">El Editor extreno ha fallado al ejecutarse.</string>

	<!--  Machine translation of chat messahes -->
	<string name="TranslationFailed">Error al traducir: [REASON]</string>
	<string name="TranslationResponseParseError">Error al analizar la respuesta de la traducción.</string>
 
   <string name="Left">Izquierda</string>
	<string name="Right">Derecha</string>

	<!-- llviewerwindow -->
	<string name="BeaconParticle">Viendo balizas de partículas (azul)</string>
	<string name="BeaconPhysical">Viendo balizas de objetos materiales (verde)</string>
	<string name="BeaconScripted">Viendo balizas de objetos con scripts (rojo)</string>
	<string name="BeaconScriptedTouch">Viendo balizas de objetos con scripts de función de toque (rojo)</string>
	<string name="BeaconSound">Viendo balizas de sonidos (amarillo)</string>
	<string name="BeaconMedia">Viendo balizas de medios (blanco)</string>
	<string name="ParticleHiding">Ocultando Partículas</string>

	<string name="Command_Profile_Label">Perfil</string>

	<!-- Pathfinding -->
	<string name="Pathfinding_Wiki_URL">http://wiki.secondlife.com/wiki/Pathfinding_Tools_in_the_Second_Life_Viewer</string>
	<string name="Pathfinding_Object_Attr_None">Ninguno</string>
	<string name="Pathfinding_Object_Attr_Permanent">Afecta al navmesh</string>
	<string name="Pathfinding_Object_Attr_Character">Personaje</string>
	<string name="Pathfinding_Object_Attr_MultiSelect">(Múltiple)</string>

  <!-- Experience Tools strings -->
  <string name="experience_tools_experience">Experiencia</string>
  <string name="ExperienceNameNull">(sin experiencia)</string>
  <string name="ExperienceNameUntitled">(experiencia sin título)</string>
  <string name="Land-Scope">Activa en el terreno</string>
  <string name="Grid-Scope">Activa en el Grid</string>
  <string name="Allowed_Experiences_Tab">Permitido</string>
  <string name="Blocked_Experiences_Tab">Bloqueado</string>
  <string name="Contrib_Experiences_Tab">Colaborador</string>
  <string name="Admin_Experiences_Tab">Administrador</string>
  <string name="Recent_Experiences_Tab">Reciente</string>
  <string name="Owned_Experiences_Tab">Propietario</string>
  <string name="ExperiencesCounter">([EXPERIENCES], máx. [MAXEXPERIENCES])</string>
  <string name="ExperiencePermission1">hacerte con tus controles</string>
  <string name="ExperiencePermission3">activar animaciones en tu avatar</string>
  <string name="ExperiencePermission4">anexar a tu avatar</string>
  <string name="ExperiencePermission9">seguimiento de la cámara</string>
  <string name="ExperiencePermission10">controlar tu cámara</string>
  <string name="ExperiencePermission11">teleportarte</string>
  <string name="ExperiencePermission12">aceptar automáticamente permisos de experiencias</string>
  <string name="ExperiencePermissionShortUnknown">realizar una operación desconocida: [Permission]</string>
  <string name="ExperiencePermissionShort1">Tomar controles</string>
  <string name="ExperiencePermissionShort3">Activar Animaciones</string>
  <string name="ExperiencePermissionShort4">Anexar</string>
  <string name="ExperiencePermissionShort9">Seguir la Cámara</string>
  <string name="ExperiencePermissionShort10">Controlar la Cámara</string>
  <string name="ExperiencePermissionShort11">Teleporte</string>
  <string name="ExperiencePermissionShort12">Otorgar permisos</string>
  <string name="ExperiencePermissionShortUnknown">Desconocido: [Permission]</string>

  <!-- Statistics -->
  <string name="na">n/a</string>
	<!-- teleport_strings.xml's strings we need -->
	<string name="completed_from">Teleporte completado desde</string>

	<!-- Media filter -->
	<string name="audio">audio</string>
	<string name="media">media</string>
	<string name="MediaFilterBlacklist">Lista Negra</string>
	<string name="MediaFilterWhitelist">Lista Blanca</string>

  <!-- AIAlert messages -->

    <!-- AIFile exception alerts -->
	<string name="AIFile_mkdir_Failed_to_create_DIRNAME">Fallo al crear la carpeta [DIRNAME]: [ERROR]</string>
	<string name="AIFile_rmdir_Failed_to_remove_DIRNAME">Fallo al borrar la carpeta [DIRNAME]: [ERROR]</string>
	<string name="AIFile_fopen_Failed_to_open_FILENAME">Fallo al abrir el archivo "[FILENAME]": [ERROR]</string>
	<string name="AIFile_close_Failed_to_close_file">Fallo al cerrar el archivo: [ERROR]</string>
	<string name="AIFile_remove_Failed_to_remove_FILENAME">Fallo al borrar el archivo [FILENAME]: [ERROR]</string>
	<string name="AIFile_rename_Failed_to_rename_FILE_to_NEWFILE">Fallo al renombrar el archivo [FILE] como [NEWFILE]: [ERROR]</string>

	<!-- AIXMLElement exception alerts -->
	<string name="AIXMLElement_attribute_Failed_to_write_DATA">Fallo al escribir '[DATA]', escribiendo datos de atributos.</string>
	<string name="AIXMLElement_child_Bad_ostream">ostream inválido luego de llamar a child.toXML</string>
	<string name="AIXMLElement_write_child_Failed_to_write_DATA">Fallo al escribir '[DATA]', escribiendo datos secundarios.</string>
	<string name="AIXMLElement_Failed_to_write_DATA">Fallo al escribir '[DATA]', abriendo nuevo dependiente.</string>
	<string name="AIXMLElement_closing_child_Failed_to_write_DATA">Fallo al escribir '[DATA]', cerrando dependiente previo.</string>

	<!-- AIXMLStream exception alerts -->
	<string name="AIXMLStream_fprintf_failed_to_write_xml_header">Fallo al escribir cabecera XML.</string>

	<!-- AIXMLParser exception alerts -->
	<string name="AIXMLParser_Cannot_parse_FILEDESC_FILENAME">No se puede analizar [FILEDESC] "[FILENAME]".</string>
	<string name="AIXMLParser_No_root_node_found_in_FILEDESC_FILENAME">No se encontró el nodo raíz en [FILEDESC] "[FILENAME]".</string>
	<string name="AIXMLParser_Missing_header_NAME_invalid_FILEDESC_FILENAME">Cabecera no hallada '[NAME]' ; inválido [FILEDESC] "[FILENAME]".</string>
	<string name="AIXMLParser_Invalid_or_missing_NAME_version_attribute_in_FILEDESC_FILENAME">Atributo [NAME] 'version' inválido o no hallado en [FILEDESC] "[FILENAME]".</string>
	<string name="AIXMLParser_Incompatible_NAME_version_MAJOR_MINOR_in">Versión Incompatible '[NAME]', [MAJOR].[MINOR], en [FILEDESC] "[FILENAME]".</string>

	<!-- AIXMLElementParser exception alerts -->
	<string name="AIXMLElementParser_read_string_Invalid_MD5_VALUE_in_FILEDESC_FILENAME">MD5 Inválido ([VALUE]) en [FILEDESC] "[FILENAME]".</string>
	<string name="AIXMLElementParser_read_string_Invalid_boolean_VALUE_in_FILEDESC_FILENAME">Booleano inválido ([VALUE]) en [FILEDESC] "[FILENAME]".</string>
	<string name="AIXMLElementParser_attribute_Missing_NAME_attribute_in_NODENAME_of_FILEDESC_FILENAME">Atributo '[NAME]' no hallado en [NODENAME] de [FILEDESC] "[FILENAME]".</string>"
	<string name="AIXMLElementParser_attribute_Invalid_NAME_attribute_should_be_REQUIRED_in_NODENAME_of_FILEDESC_FILENAME">Atributo '[NAME]' inválido (debiera ser '[REQUIRED]') en [NODENAME] de [FILEDESC] "[FILENAME]".</string>
	<string name="AIXMLElementParser_read_child_Invalid_uuid_in_FILEDESC_FILENAME">UUID Inválido en [FILEDESC] "[FILENAME]".</string>
	<string name="AIXMLElementParser_read_child_Invalid_date_DATE_in_FILEDESC_FILENAME">Fecha ([DATE]) inválida en [FILEDESC] "[FILENAME]".</string>

	<!-- AIArchetype exception alerts -->
	<string name="AIArchetype_archetype_has_no_meta">el arquetipo no tiene el elemento &lt;meta&gt;.</string>
	<string name="AIArchetype_MetaData_archetype_meta_has_no_ATTRIBUTE">el elemento &lt;meta&gt; del arquetipo no tiene el atributo '[ATTRIBUTE]'.</string>

  <string name="AIXMLdumpArchetypeXMLError">Fallo al volcar arquetipo a "[FILE]":</string>
  <string name="AIXMLExportSuccess">Se ha exportado satisfactoriamente el objeto vestible a "[FILE]".</string>
  <string name="AIXMLExportWriteError">The export to file "[FILE]" failed:</string>
  <string name="AIXMLImportRootVersionError">Fallo de Importación: el archivo "[FILE]" contiene datos linden_genepool XML con [TAG] erróneo. Se requiere Versión "[VERSIONMAJOR].0" o inferior.</string>
  <string name="AIXMLImportDifferentGrid">La importación se ha realizado con exito, pero ten presente que el objeto vestible fue exportado desde el grid [EXPORTGRID] (y el grid actual es [CURRENTGRID]). ¡No se aplicaron las UUIDs de las Texturas!</string>
  <string name="AIXMLImportMixedGrid">La importación se ha realizado con exito, pero ten presente que el objeto vestible fue exportado desde el grid [EXPORTGRID] (y el grid actual es [CURRENTGRID]).¡Se aplicaron las UUIDs de la Texturas pero quizás no existan aquí!</string>
  <string name="AIXMLImportEmptyArchetype">Aviso de Importación: el archivo "[FILE]" contiene seleccionado un objeto vestible del tipo ([TYPE]), pero no contiene parámetros o texturas para dicho tipo. Nada ha sido importado.</string>
  <string name="AIXMLImportWearableTypeMismatch">Aviso de Importación: el archivo "[FILE]" no contiene un objeto vestible de tipo [TYPE]. Éste contiene un arquetipo de tipo [ARCHETYPENAME]. Por favor, selecciona el tipo correcto antes de comenzar la importación.</string>
  <string name="AIXMLImportError">Fallo al importar el objeto [TYPE] vestible:</string>
  <string name="AIXMLImportNoArchetypeError">No se ha encontrado arquetipo en el objeto vestible del archivo de importación "[FILE]".</string>

</strings>
